[ISSI]
#pragma option -e-
#if fileExists("_issi.cfg")
  #include "_issi.cfg"
#endif
#define ISSI_LanguageVersion 0x05010000
#define ISSI_CompilerVersion 0x04020200
#define ISSIexe_ExeVersion "1.5.0.0"
#define ISSIexe_MD5Version "1.2.0.0"
#define ISSIexe_SerialVersion "1.4.0.0"
#define ISSIexe_CreateDirVersion "1.1.0.0"
#define ISSIexe_IsxDlVersion "4.9.9.0"
#define ISSIexe_UninsHsVersion "1.6.0.0"
#define ISSIexe_PadVersion "1.2.0.0"

#ifdef ISSI_Remark
[ISSI Credits]
  ;========================================================================================================
  ;
  ;  LOGAN's Inno Setup Script Includes : http://www.albartus.com/issi/
  ;
  ;   Concept, Idea & Initial Scripting : Jan Albartus
  ;                Functions & Routines : Martijn Laan, Vincenzo Giordano, Benjamin, David Koch, DaddyBob,
  ;                                       Brett Michael, Christoph Nahr & Jan Albartus
  ;                ISSI Plugin Protocol : Jan Albartus & Jonny Kwekkeboom
  ;                 Useful Hints & Tips : Jordan Russell, Martijn Laan & the Inno Setup Community
  ;                        Translations : Benjamin Schirmer, Patrick Pang, michal zobec, KAMI, David Koch,
  ;                                       Dmitry Kann, Antonio Liberal, Peter Thornqvist, Carles Millan,
  ;                                       Jens Kristian Mygent, Simone Bartoccioni, Christer Toivonen, Uwe,
  ;                                       Miha Remec, Ángel Martín, Fikret Hasovic, MSI, TKlingler, George Wing
  ;                                       Cecilia Saltori, Peter Lykkegaard, J.Agnaldo.Gomes, Pawel Wolacewicz
  ;                                       Milan Potancok, Mehmet F. Yuce & Jan Albartus
  ;                             UninsHs : Han-soft Software (http://www.han-soft.com/uninshs.php)
  ;                        Download DLL : Bjørnar Henden (http://www.istool.org/default.aspx/isx/isxdl)
  ;                         ScriptMaker : Jonny Kwekkeboom  (http://www.HiSoft2000.de)
  ;                        ChiefZip DLL : Prof. Abimbola (http://www.greatchief.plus.com/chfzip26.zip)
  ;                                Wput : Hagen Fritsch (http://wput.sourceforge.net/)
  ;                           Thanks to : Han Jingyu, Bjørnar Henden, Jonny Kwekkeboom, Christian Ghisler &
  ;                                       Prof. Abimbola
  ;
  ;
  ;========================================================================================================

[Inno Script Plugin]
PluginVersion=5.1.6.2
PluginName=Inno Setup Script Includes
PluginAuthor=Jan Albartus
PluginAuthorUrl=http://www.albartus.com/
PluginUrl=http://www.albartus.com/issi/
PluginDownloadUrl=http://members.home.nl/albartus/issi/
PluginDescription=Inno Setup Script Includes is a library of functions that can be implemented very easily into your existing setups.

[ISSI Version Information]

[v5.1.6.2] (2006.03.25)
1=  Added ISSI_BackgroundImage_NoStretch
2=  Added ISSI_Basque	(baq), ISSI_SpanishArgentina (arg), ISSI_SpanishNicaragua	(nic), ISSI_ ISSI_Hebrew (heb), Macedonian (mac) and ISSI_Tatarish	(tat)
3=  Changed internal name of splash.bmp into issi_splash.bmp to avoid any name conflicts
4=  Added PAD Formatting and Stylesheet templates ISSI_PadStyle "pad" and "silver". These files will be exported along with your xml

[v5.1.6.1] (2005.12.10)
1=  Fixed RemoveInstallshieldDependencies to avoid uninstalling "Software 3D" if you install "Software 3" [DK]
2=  Changed language code for Albanian to al
3=  Minor Tweaks

[v5.1.6.0] (2005.11.19)
1=  Some ISSI GUI typo's fixed.
2=  Minor Tweaks

[v5.1.5.18] (2005.11.13)
1=  Improved handling for ISSI_Screensaver to start rundll32.exe from the right folder on all Windows 32 bit platforms
2=  Minor Tweaks

[v5.1.5.17] (2005.11.06)
1=  Added support for multilingual program descriptions and keywords in the PAD XML
2=  Minor Tweaks

[v5.1.5.16] (2005.11.05)
1=  Improved handling for the ISSI_Screensaver properties panel (Now it's postinstall)
2=  Improved ISSI Plugin GUI layout description to better fit 1024x768 screen resolution
3=  Fixed ISSI Plugin GUI layout description for ISSI_CVS_Export
4=  Minor Tweaks

[v5.1.5.15] (2005.10.29)
1=  Added support for PAD_EULA FileName variable to load info from external txt file
2=  Added support for PAD_Distribution_Permissions FileName variable to load info from external txt file
3=  Minor Tweaks

[v5.1.5.14] (2005.10.28)
1=  Added support for DELPHI PAD Extension
2=  Minor Tweaks

[v5.1.5.13] (2005.10.27)
1=  Added support for TPA, ESC, MSN and PADRING PAD Extensions
2=  Minor Tweaks

[v5.1.5.12] (2005.10.26)
1=  Fixed NET detection issue.
2=  Minor Tweaks

[v5.1.5.11] (2005.10.25)
1=  Fixed PAD Generation issue when using own pad.ini file.
2=  Minor Tweaks

[v5.1.5.10] (2005.10.23)
1=  Added support for PAD files (ISSI_PadAppName, ISSI_PadExportFileName, ISSI_PadExportFolder, ISSI_PadImport)
2=  Added some ISSI variables to undefine ISSI section for smooth batch processing
3=  Added support for FTP Upload and added Wput FTP client to distribution (http://wput.sourceforge.net)
5=  Added support for CVS Export
6=  Changed some internal script layout and reorganised files
7=  Minor Tweaks

[v5.1.5.9] (2005.10.16)
1=  Updated ISSI Turkish translation thanks to Mehmet F. Yuce for the translation
2=  Removed redundant ISSI version variable
3=  Minor Tweaks

[v5.1.5.8] (2005.10.11)
1=  Added ISSI Turkish translation thanks to Mehmet F. Yuce for the translation
2=  Minor Tweaks

[v5.1.5.7] (2005.10.10)
1=  Added ISSI_LanguagesZone "ISSI" to use only ISSI supported languages
2=  Fixed ISSI_UninsHs issue
3=  Fixed ISSI_Update Issue
4=  Minor Tweaks

[v5.1.5.6] (2005.10.07)
1=  Added ISSI_Unzip to plugin description
2=  Added ISSI_Languages and ISSI_LanguagesZone to plugin description
3=  Fixed ISSI_Polish in plugin description
4=  Added ISSI_Slovak, thanks to: Milan Potancok
5=  Fixed language names for some languages
6=  Added ISSI_LanguagesShowAll to display all available setup languages is language selection
7=  Minor Tweaks

[v5.1.5.5] (2005.10.01)
1=  Added support for infoVersionCopyright to the ISSI_AppName function for Inno Setup 5.1.5 or higher.
2=  Added more languages support to ISSI
3=  Added ISSI_Languages localization values "EuropeWest", "EuropeEast", "Europe", "Asia", "Scandinavia", "Benelux"
4=  Minor Tweaks

[v5.1.5.4] (2005.09.29)
1=  Added detection support for Microsoft .NET framework 2. Also 1.1 results true when 2.0 is installed
2=  Minor Tweaks

[v5.1.5.3] (2005.09.28)
1=  Added Chinese (Simplified) ISSI translation
2=  Fixed Chinese language use with UninsHs (1.6)
3=  Minor Tweaks

[v5.1.5.2] (2005.09.27)
1=  Added Polish language file thus activating Polish messages when using ISSI functions.
2=  Changed Dutch translation "About" from "Over" to "Info". (hopefully more conform the standards)
3=  Minor Tweaks

[v5.1.5.1] (2005.09.18)
1=  Reorganised plugin info to keep the form on one tab on lower resolutions.
2=  Minor tweaks

[v5.1.5.0] (2005.09.17)
1=  Fixed ISSI_Download issue of not installing after download.
2=  Minor tweaks

#endif

#ifdef Inno_Setup_Script_Plugin_Form_GUI_Description_Interface_Used_By_Inno_Script_Generators

[ISP Tab0]
TabName=General
Item1Option0=Include Location; CB:NO
Item1Option1=Req:true; Text:Include Folder; Define:ISSI_IncludePath; Input:Folder;
Item2Option0=Compile Time Constants
Item2Option1=Text:Time/Date Format; Define:ISSI_Constants; Input:Select; Values: Default,MMDDYY,YYMMDD,DDMMYY
Item3Option0=Backup current Script in compiled setup.exe
Item3Option1=Text:Script File; Define:ISSI_ScriptBackup; Input:Browse; Extension:iss
Item4Option0=Custom User Include
Item4Option1=Text:User Include file location; Define:ISSI_UserInclude; Input:Browse; Extension:isi
Item5Option0=Maximal Compression
Item5Option1=Text:Set Compression To Ultra; Define:ISSI_Compression; Input:Check
Item6Option0=Debug
Item6Option1=Text:View Translation on Compile; Define:ISSI_DeBug; Input:Check

[ISP Tab1]
TabName=Password && Serial
Item1Option0=Password (MD5 Protected)
Item1Option1=Text:Password; Define:ISSI_GetMD5OfPassword; Input:Text
Item2Option0=Serial (MD5 Protected)
Item2Option1=Text:Serial; Define:ISSI_GetMD5OfSerial; Input:Text
Item3Option0=Serial Generator (MD5 Protected)
Item3Option1=Text:Generate Serial; Define:ISSI_GenerateSerial; Input:Check; Line:same
Item3Option2=Text:Serial group length; Define:ISSI_GenerateSerial_GroupLength; Input:Number; Min:1; Set:5; Line:same
Item3Option3=Text:Number of groups; Define:ISSI_GenerateSerial_Groups; Input:Number; Min:1; Set:5; Line:same
Item3Option4=Text:AppName (used for folder and ini structure); Define:ISSI_GenerateSerial_AppName; Input:Text

[ISP Tab2]
TabName=Language Zones
Item1Option0=Setup Languages to include (License is optional)
Item1Option1=Text:Include ALL available Setup Languages OR; Define:ISSI_Languages; Input:Check; Line:same
Item1Option2=Text:License File; Define:ISSI_Languages; Input:Browse; Extension:txt
Item2Option0=Setup Languages Zone to include (Check to limit available setup languages)
Item2Option1=Text:Select a languages zone; Define:ISSI_LanguagesZone; Input:Select; Values: EuropeWest,Europe,EuropeEast,Benelux,Scandinavia,ISSI
Item3Option0=Show all Languages
Item3Option1=Text:Show all Languages in Language Selection Window at the start of setup; Define:ISSI_LanguagesShowAll; Input:Check

[ISP Tab3]
TabName=ISSI Languages 1
Item1Option0=Setup Languages (License is optional)
Item1Option1=Text:Include English Setup Language OR; Define:ISSI_English; Input:Check; Line:same
Item1Option2=Text:License File; Define:ISSI_English; Input:Browse; Extension:txt
Item1Option3=Text:Include German Setup Language OR; Define:ISSI_German; Input:Check; Line:same
Item1Option4=Text:License File; Define:ISSI_German; Input:Browse; Extension:txt
Item1Option5=Text:Include Dutch Setup Language OR; Define:ISSI_Dutch; Input:Check; Line:same
Item1Option6=Text:License File; Define:ISSI_Dutch; Input:Browse; Extension:txt
Item1Option7=Text:Include Hungarian Setup Language OR; Define:ISSI_Hungarian; Input:Check; Line:same
Item1Option8=Text:License File; Define:ISSI_Hungarian; Input:Browse; Extension:txt
Item1Option9=Text:Include Russian Setup Language OR; Define:ISSI_Russian; Input:Check; Line:same
Item1Option10=Text:License File; Define:ISSI_Russian; Input:Browse; Extension:txt
Item1Option11=Text:Include Danish Setup Language OR; Define:ISSI_Danish; Input:Check; Line:same
Item1Option12=Text:License File; Define:ISSI_Danish; Input:Browse; Extension:txt
Item1Option13=Text:Include Spanish Setup Language OR; Define:ISSI_Spanish; Input:Check; Line:same
Item1Option14=Text:License File; Define:ISSI_Spanish; Input:Browse; Extension:txt
Item1Option15=Text:Include French Setup Language OR; Define:ISSI_French; Input:Check; Line:same
Item1Option16=Text:License File; Define:ISSI_French; Input:Browse; Extension:txt
Item1Option17=Text:Include Swedish Setup Language OR; Define:ISSI_Swedish; Input:Check; Line:same
Item1Option18=Text:License File; Define:ISSI_Swedish; Input:Browse; Extension:txt
Item1Option19=Text:Include Chinese (Traditional) Setup Language OR; Define:ISSI_ChineseTrad; Input:Check; Line:same
Item1Option20=Text:License File; Define:ISSI_ChineseTrad; Input:Browse; Extension:txt
Item1Option19=Text:Include Chinese (Simplified) Setup Language OR; Define:ISSI_ChineseSimp; Input:Check; Line:same
Item1Option20=Text:License File; Define:ISSI_ChineseSimp; Input:Browse; Extension:txt
Item1Option21=Text:Include Czech Setup Language OR; Define:ISSI_Czech; Input:Check; Line:same
Item1Option22=Text:License File; Define:ISSI_Czech; Input:Browse; Extension:txt
Item1Option23=Text:Include Italian Setup Language OR; Define:ISSI_Italian; Input:Check; Line:same
Item1Option24=Text:License File; Define:ISSI_Italian; Input:Browse; Extension:txt
Item1Option25=Text:Include Catalan Setup Language OR; Define:ISSI_Catalan; Input:Check; Line:same
Item1Option26=Text:License File; Define:ISSI_Catalan; Input:Browse; Extension:txt
Item1Option27=Text:Include Slovenian Setup Language OR; Define:ISSI_Slovenian; Input:Check; Line:same
Item1Option28=Text:License File; Define:ISSI_Slovenian; Input:Browse; Extension:txt
Item1Option29=Text:Include Bosnian Setup Language OR; Define:ISSI_Bosnian; Input:Check; Line:same
Item1Option30=Text:License File; Define:ISSI_Bosnian; Input:Browse; Extension:txt

[ISP Tab4]
TabName=ISSI Languages 2
Item1Option0=Setup Languages (Continued)(License is optional)
Item1Option1=Text:Include Brazilian-Portuguese Setup Language OR; Define:ISSI_BrazilianPortuguese; Input:Check; Line:same
Item1Option2=Text:License File; Define:ISSI_BrazilianPortuguese; Input:Browse; Extension:txt
Item1Option3=Text:Include Polish Setup Language OR; Define:ISSI_Polish; Input:Check; Line:same
Item1Option4=Text:License File; Define:ISSI_Polish; Input:Browse; Extension:txt
Item1Option5=Text:Include Slovak Setup Language OR; Define:ISSI_Slovak; Input:Check; Line:same
Item1Option6=Text:License File; Define:ISSI_Slovak; Input:Browse; Extension:txt
Item1Option7=Text:Include Basque Setup Language OR; Define:ISSI_Basque; Input:Check; Line:same
Item1Option8=Text:License File; Define:ISSI_Basque; Input:Browse; Extension:txt
Item1Option9=Text:Include SpanishArgentina Setup Language OR; Define:ISSI_SpanishArgentina; Input:Check; Line:same
Item1Option10=Text:License File; Define:ISSI_SpanishArgentina; Input:Browse; Extension:txt
Item1Option11`=Text:Include ISSI_SpanishNicaragua Setup Language OR; Define:ISSI_SpanishNicaragua; Input:Check; Line:same
Item1Option12=Text:License File; Define:ISSI_SpanishNicaragua; Input:Browse; Extension:txt
Item1Option13=Text:Include Tatarish Setup Language OR; Define:ISSI_Tatarish; Input:Check; Line:same
Item1Option14=Text:License File; Define:ISSI_Tatarish; Input:Browse; Extension:txt
Item1Option15=Text:Include Hebrew Setup Language OR; Define:ISSI_Hebrew; Input:Check; Line:same
Item1Option16=Text:License File; Define:ISSI_Hebrew; Input:Browse; Extension:txt
Item1Option17=Text:Include Macedonian Setup Language OR; Define:ISSI_Macedonian; Input:Check; Line:same
Item1Option18=Text:License File; Define:ISSI_Macedonian; Input:Browse; Extension:txt

[ISP Tab5]
TabName=Application
Item1Option0=Application Information
Item1Option1=Text:Application Name; Define:ISSI_AppName; Input:Text
Item1Option2=Text:Version Mayor; Define:ISSI_AppVersionMayor; Input:Number; Line:same
Item1Option3=Text:Minor; Define:ISSI_AppVersionMinor; Input:Number; Line:same
Item1Option4=Text:Release; Define:ISSI_AppVersionRelease; Input:Number; Line:same
Item1Option5=Text:Build; Define:ISSI_AppVersionBuild; Input:Number
Item1Option6=Text:Application ID; Define:ISSI_AppID; Input:Text
Item1Option7=Text:Application Publisher; Define:ISSI_AppPublisher; Input:Text
Item1Option8=Text:AppExe Create startmenu; Define:ISSI_AppStart; Input:Text
Item1Option9=Text:Application Icon file; Define:ISSI_AppIcon; Input:Browse; Extension:ico
Item1Option10=Text:Application Template; Define:ISSI_AppTemplate; Input:Number
Item1Option11=Text:Application Source Folder; Define:ISSI_AppFilesFolder; Input:Folder
Item2Option0=Modify / Repair / Remove Uninstaller Support
Item2Option1=Text:Application Name; Define:ISSI_UninsHs_AppName; Input:Text
Item2Option2=Text:Application ID; Define:ISSI_UninsHs_AppId; Input:Text
Item2Option3=Text:Copy setup to app (Recommended); Define:ISSI_UninsHs_IncludeSetup; Input:Check

[ISP Tab6]
TabName=Images
Item1Option0=Splash Screen
Item1Option1=Text:Bitmap File; Define:ISSI_Splash; Input:Browse; Extension:bmp
Item1Option2=Text:Bitmap Width; Define:ISSI_Splash_X; Input:Number; Line:same
Item1Option3=Text:Bitmap Height; Define:ISSI_Splash_Y; Input:Number; Line:same
Item1Option4=Text:Duration (in seconds); Define:ISSI_Splash_T; Input:Number; Min:1; Max:5; Set:2; Line:same
Item1Option5=Text:Bitmap Corner Radius; Define:ISSI_Splash_Corner; Input:Number; Min:0
Item2Option0=Background Image
Item2Option1=Text:Background Bitmap File; Define:ISSI_Image; Input:Browse; Extension:bmp
Item2Option2=Text:Background color; Define:ISSI_Image_BGcolor; Input:Text;
Item3Option0=Wizard Bitmap Images
Item3Option1=Text:Bitmap Width; Define:ISSI_WizardBitmapImage_X; Input:Number; Min:1; Max:495; Set:164; Line:same
Item3Option2=Text:Welcome Page Bitmap File; Define:ISSI_WizardBitmapImage; Input:Browse; Extension:bmp
Item3Option3=Text:Align image to the right; Define:ISSI_WizardBitmapImage_Align; Input:Check;
Item3Option4=Text:Bitmap Width; Define:ISSI_WizardBitmapImage2_X; Input:Number; Min:1; Max:495; Set:164; Line:same
Item3Option5=Text:Finished Page Bitmap File; Define:ISSI_WizardBitmapImage2; Input:Browse; Extension:bmp
Item3Option6=Text:Align image to the right; Define:ISSI_WizardBitmapImage2_Align; Input:Check;
Item4Option0=Wizard Small Bitmap Image
Item4Option1=Text:Bitmap Width; Define:ISSI_WizardSmallBitmapImage_X; Input:Number; Min:1; Max:495; Set:55; Line:same
Item4Option2=Text:Small Bitmap File; Define:ISSI_WizardSmallBitmapImage; Input:Browse; Extension:bmp
Item4Option3=Text:Align image to the left; Define:ISSI_WizardSmallBitmapImage_Align; Input:Check;

[ISP Tab7]
TabName=Small Wizard Images
Item1Option0=Small Wizard Images
Item1Option1=Text:wpLicense Bitmap File; Define:ISSI_wpLicense; Input:Browse; Extension:bmp
Item1Option2=Text:wpPassword Bitmap File; Define:ISSI_wpPassword; Input:Browse; Extension:bmp
Item1Option3=Text:wpInfoBefore Bitmap File; Define:ISSI_wpInfoBefore; Input:Browse; Extension:bmp
Item1Option4=Text:wpUserInfo Bitmap File; Define:ISSI_wpUserInfo; Input:Browse; Extension:bmp
Item1Option5=Text:wpSelectDir Bitmap File; Define:ISSI_wpSelectDir; Input:Browse; Extension:bmp
Item1Option6=Text:wpSelectComponents Bitmap File; Define:ISSI_wpSelectComponents; Input:Browse; Extension:bmp
Item1Option7=Text:wpSelectProgramGroup Bitmap File; Define:ISSI_wpSelectProgramGroup; Input:Browse; Extension:bmp
Item1Option8=Text:wpSelectTasks Bitmap File; Define:ISSI_wpSelectTasks; Input:Browse; Extension:bmp
Item1Option9=Text:wpReady Bitmap File; Define:ISSI_wpReady; Input:Browse; Extension:bmp
Item1Option10=Text:wpPreparing Bitmap File; Define:ISSI_wpPreparing; Input:Browse; Extension:bmp
Item1Option11=Text:wpInstalling Bitmap File; Define:ISSI_wpInstalling; Input:Browse; Extension:bmp
Item1Option12=Text:wpInfoAfter Bitmap File; Define:ISSI_wpInfoAfter; Input:Browse; Extension:bmp

[ISP Tab8]
TabName=Background Wizard Images
Item1Option0=Background Wizard Images
Item1Option1=Text:wpWelcome Background Bitmap File; Define:ISSI_ImagewpWelcome; Input:Browse; Extension:bmp
Item1Option1=Text:wpLicense Background Bitmap File; Define:ISSI_ImagewpLicense; Input:Browse; Extension:bmp
Item1Option2=Text:wpPassword Background Bitmap File; Define:ISSI_ImagewpPassword; Input:Browse; Extension:bmp
Item1Option3=Text:wpInfoBefore Background Bitmap File; Define:ISSI_ImagewpInfoBefore; Input:Browse; Extension:bmp
Item1Option4=Text:wpUserInfo Background Bitmap File; Define:ISSI_ImagewpUserInfo; Input:Browse; Extension:bmp
Item1Option5=Text:wpSelectDir Background Bitmap File; Define:ISSI_ImagewpSelectDir; Input:Browse; Extension:bmp
Item1Option6=Text:wpSelectComponents Background Bitmap File; Define:ISSI_ImagewpSelectComponents; Input:Browse; Extension:bmp
Item1Option7=Text:wpSelectProgramGroup Background Bitmap File; Define:ISSI_ImagewpSelectProgramGroup; Input:Browse; Extension:bmp
Item1Option8=Text:wpSelectTasks Background Bitmap File; Define:ISSI_ImagewpSelectTasks; Input:Browse; Extension:bmp
Item1Option9=Text:wpReady Background Bitmap File; Define:ISSI_ImagewpReady; Input:Browse; Extension:bmp
Item1Option10=Text:wpPreparing Background Bitmap File; Define:ISSI_ImagewpPreparing; Input:Browse; Extension:bmp
Item1Option11=Text:wpInstalling Background Bitmap File; Define:ISSI_ImagewpInstalling; Input:Browse; Extension:bmp
Item1Option12=Text:wpInfoAfter Background Bitmap File; Define:ISSI_ImagewpInfoAfter; Input:Browse; Extension:bmp
Item1Option1=Text:wpFinished Background Bitmap File; Define:ISSI_ImagewpFinished; Input:Browse; Extension:bmp

[ISP Tab9]
TabName=Sound
Item1Option0=Play Wave File
Item1Option1=Text:Wave File; Define:ISSI_PlayWav; Input:Browse; Extension:wav
Item1Option2=Text:Use External File; Define:ISSI_PlayWavExternal; Input:Check; Line:same
Item1Option3=Text:Loop Sound; Define:ISSI_PlayWavLoop; Input:Check;
Item2Option0=Play Midi File
Item2Option1=Text:Midi File; Define:ISSI_PlayMidi; Input:Browse; Extension:mid;
Item2Option2=Text:Use External File; Define:ISSI_PlayWavExternal; Input:Check;

[ISP Tab10]
TabName=Functional
Item1Option0=License Print Button; CB:NO
Item1Option1=Text:Add License Print Button; Define:ISSI_LicensePrint; Input:Check;
Item2Option0=Install ScreenSaver
Item2Option1=Text:ScreenSaver File; Define:ISSI_ScreenSaver; Input:Browse; Extension:scr;
Item3Option0=Link Extension to existing extension
Item3Option1=Text:Extension; Define:ISSI_AssociateExt; Input:Text; Length:3;
Item3Option2=Text:Program Name; Define:ISSI_AssociateProgram; Input:Text;
Item3Option3=Text:AssociateName; Define:ISSI_AssociateName; Input:Text;
Item4Option0=Link to website
Item4Option1=Text:URL; Define:ISSI_Url; Input:Text;
Item4Option2=Text:Text; Define:ISSI_UrlText; Input:Text;
Item5Option0=About Button
Item5Option1=Text:Predefined about content; Define:ISSI_About; Input:Select; Values: NameAndVersion,NameAndVersionDate

[ISP Tab11]
TabName=Install Helper
Item1Option0=Install ScreenSaver
Item1Option1=Text:ScreenSaver File; Define:ISSI_ScreenSaver; Input:Browse; Extension:scr;
Item2Option0=Check for previous installed programm
Item2Option1=Text:AppId (or AppName); Define:ISSI_Update; Input:Text;
Item2Option2=Text:AppName; Define:ISSI_UpdateTitle; Input:Text;
Item2Option3=Text:AppVersion; Define:ISSI_UpdateVersion; Input:Text;
Item3Option0=Download setup from http:
Item3Option1=Text:Title (AppName); Define:ISSI_Download_Title; Input:Text;
Item3Option2=Text:Remote http location; Define:ISSI_Download_Url; Input:Text;
Item3Option3=Text:Download DLL file; Define:ISSI_Download_Dll; Input:Browse; Extension:dll;
Item4Option0=Check for MicroSoft .NET Framework (1.1 or 2.0)
Item4Option1=Text:.NET Detection; Define:ISSI_NetDetect; Input:Text;

[ISP Tab12]
TabName=Batch Compile 1
Item1Option0=Batch Compile
Item1Option1=Text:Batch Compile Folder; Define:ISSI_Batch; Input:Folder;
Item1Option2=Text:Notify when Batch Compile finishes and stop compiling the rest of the current setup(Optional); Define:ISSI_BatchNotify; Input:Check
Item1Option3=Text:Batch File; Define:ISSI_Batch1; Input:Browse; Extension:iss;
Item1Option4=Text:Batch File; Define:ISSI_Batch2; Input:Browse; Extension:iss;
Item1Option5=Text:Batch File; Define:ISSI_Batch3; Input:Browse; Extension:iss;
Item1Option6=Text:Batch File; Define:ISSI_Batch4; Input:Browse; Extension:iss;
Item1Option7=Text:Batch File; Define:ISSI_Batch5; Input:Browse; Extension:iss;
Item1Option8=Text:Batch File; Define:ISSI_Batch6; Input:Browse; Extension:iss;
Item1Option9=Text:Batch File; Define:ISSI_Batch7; Input:Browse; Extension:iss;
Item1Option10=Text:Batch File; Define:ISSI_Batch8; Input:Browse; Extension:iss;
Item1Option11=Text:Batch File; Define:ISSI_Batch9; Input:Browse; Extension:iss;
Item1Option12=Text:Batch File; Define:ISSI_Batch10; Input:Browse; Extension:iss;
Item1Option13=Text:Batch File; Define:ISSI_Batch11; Input:Browse; Extension:iss;
Item1Option14=Text:Batch File; Define:ISSI_Batch12; Input:Browse; Extension:iss;

[ISP Tab13]
TabName=Batch Compile 2
Item1Option0=Batch Compile
Item1Option1=Text:Batch File; Define:ISSI_Batch13; Input:Browse; Extension:iss;
Item1Option2=Text:Batch File; Define:ISSI_Batch14; Input:Browse; Extension:iss;
Item1Option3=Text:Batch File; Define:ISSI_Batch15; Input:Browse; Extension:iss;
Item1Option4=Text:Batch File; Define:ISSI_Batch16; Input:Browse; Extension:iss;
Item1Option5=Text:Batch File; Define:ISSI_Batch17; Input:Browse; Extension:iss;
Item1Option6=Text:Batch File; Define:ISSI_Batch18; Input:Browse; Extension:iss;
Item1Option7=Text:Batch File; Define:ISSI_Batch19; Input:Browse; Extension:iss;
Item1Option8=Text:Batch File; Define:ISSI_Batch20; Input:Browse; Extension:iss;
Item1Option9=Text:Batch File; Define:ISSI_Batch21; Input:Browse; Extension:iss;
Item1Option10=Text:Batch File; Define:ISSI_Batch22; Input:Browse; Extension:iss;
Item1Option11=Text:Batch File; Define:ISSI_Batch24; Input:Browse; Extension:iss;
Item1Option12=Text:Batch File; Define:ISSI_Batch24; Input:Browse; Extension:iss;
Item1Option13=Text:Batch File; Define:ISSI_Batch25; Input:Browse; Extension:iss;

[ISP Tab14]
TabName=UnZip 1
Item1Option0=UnZip
Item1Option1=Text:UnZip File; Define:ISSI_UnZip1; Input:Browse; Extension:zip;
Item1Option2=Text:UnZip Folder; Define:ISSI_UnZipDir1; Input:Text;
Item1Option3=Text:UnZip File; Define:ISSI_UnZip2; Input:Browse; Extension:zip;
Item1Option4=Text:UnZip Folder; Define:ISSI_UnZipDir2; Input:Text;
Item1Option5=Text:UnZip File; Define:ISSI_UnZip3; Input:Browse; Extension:zip;
Item1Option6=Text:UnZip Folder; Define:ISSI_UnZipDir3; Input:Text;
Item1Option7=Text:UnZip File; Define:ISSI_UnZip4; Input:Browse; Extension:zip;
Item1Option8=Text:UnZip Folder; Define:ISSI_UnZipDir4; Input:Text;
Item1Option9=Text:UnZip File; Define:ISSI_UnZip5; Input:Browse; Extension:zip;
Item1Option10=Text:UnZip Folder; Define:ISSI_UnZipDir5; Input:Text;
Item1Option11=Text:UnZip File; Define:ISSI_UnZip6; Input:Browse; Extension:zip;
Item1Option12=Text:UnZip Folder; Define:ISSI_UnZipDir6; Input:Text;
Item1Option13=Text:UnZip File; Define:ISSI_UnZip7; Input:Browse; Extension:zip;
Item1Option14=Text:UnZip Folder; Define:ISSI_UnZipDir7; Input:Text;
Item1Option15=Text:UnZip File; Define:ISSI_UnZip8; Input:Browse; Extension:zip;
Item1Option16=Text:UnZip Folder; Define:ISSI_UnZipDir8; Input:Text;

[ISP Tab15]
TabName=UnZip 2
Item1Option0=UnZip (Continued)
Item1Option1=Text:UnZip File; Define:ISSI_UnZip9; Input:Browse; Extension:zip;
Item1Option2=Text:UnZip Folder; Define:ISSI_UnZipDir9; Input:Text;
Item1Option3=Text:UnZip File; Define:ISSI_UnZip10; Input:Browse; Extension:zip;
Item1Option4=Text:UnZip Folder; Define:ISSI_UnZipDir10; Input:Text;
Item1Option5=Text:UnZip File; Define:ISSI_UnZip11; Input:Browse; Extension:zip;
Item1Option6=Text:UnZip Folder; Define:ISSI_UnZipDir11; Input:Text;
Item1Option7=Text:UnZip File; Define:ISSI_UnZip12; Input:Browse; Extension:zip;
Item1Option8=Text:UnZip Folder; Define:ISSI_UnZipDir12; Input:Text;
Item1Option9=Text:UnZip File; Define:ISSI_UnZip13; Input:Browse; Extension:zip;
Item1Option10=Text:UnZip Folder; Define:ISSI_UnZipDir13; Input:Text;
Item1Option11=Text:UnZip File; Define:ISSI_UnZip14; Input:Browse; Extension:zip;
Item1Option12=Text:UnZip Folder; Define:ISSI_UnZipDir14; Input:Text;
Item1Option13=Text:UnZip File; Define:ISSI_UnZip15; Input:Browse; Extension:zip;
Item1Option14=Text:UnZip Folder; Define:ISSI_UnZipDir15; Input:Text;
Item1Option15=Text:UnZip File; Define:ISSI_UnZip16; Input:Browse; Extension:zip;
Item1Option16=Text:UnZip Folder; Define:ISSI_UnZipDir16; Input:Text;

[ISP Tab16]
TabName=PAD
Item1Option0=Path and name for alternative PAD INI file
Item1Option1=Text:Alternative PAD INI file to use; Define:ISSI_PadIni; Input:Text;
Item2Option0=Export PAD XML File
Item2Option1=Text:Application Name in PAD.ini; Define:ISSI_PadAppName; Input:Text;
Item2Option2=Text:Export File Name; Define:ISSI_PadExportFileName; Input:Text;
Item2Option3=Text:Export Folder; Define:ISSI_PadExportFolder; Input:Folder;
Item3Option0=Import PAD ini File
Item3Option1=Text:Application Name in PAD.ini; Define:ISSI_PadAppName; Input:Text;
Item3Option3=Text:Activate Import; Define:ISSI_PadImport; Input:Check;

[ISP Tab17]
TabName=FTP Settings
Item1Option0=FTP Settings 1
Item1Option1=Text:FTP Server; Define:ISSI_FTP_Server; Input:Text;
Item1Option2=Text:FTP Server Port; Define:ISSI_FTP_Port; Input:Text;
Item1Option3=Text:FTP User Name; Define:ISSI_FTP_UserName; Input:Text;
Item1Option4=Text:FTP User Password; Define:ISSI_FTP_Password; Input:Text;
Item2Option0=FTP Settings 2
Item2Option1=Text:FTP Server; Define:ISSI_FTP_Server; Input:Text;
Item2Option2=Text:FTP Server Port; Define:ISSI_FTP_Port; Input:Text;
Item2Option3=Text:FTP User Name; Define:ISSI_FTP_UserName; Input:Text;
Item2Option4=Text:FTP User Password; Define:ISSI_FTP_Password; Input:Text;
Item3Option0=FTP Settings 3
Item3Option1=Text:FTP Server; Define:ISSI_FTP_Server; Input:Text;
Item3Option2=Text:FTP Server Port; Define:ISSI_FTP_Port; Input:Text;
Item3Option3=Text:FTP User Name; Define:ISSI_FTP_UserName; Input:Text;
Item3Option4=Text:FTP User Password; Define:ISSI_FTP_Password; Input:Text;

[ISP Tab18]
TabName=FTP Files 1
Item1Option0=FTP Upload Files 1
Item1Option1=Text:Source 1; Define:ISSI_FTP_Source1; Input:Browse;
Item1Option2=Text:Target 1; Define:ISSI_FTP_Target1; Input:Text;
Item1Option3=Text:Source 2; Define:ISSI_FTP_Source2; Input:Browse;
Item1Option4=Text:Target 2; Define:ISSI_FTP_Target2; Input:Text;
Item1Option5=Text:Source 3; Define:ISSI_FTP_Source3; Input:Browse;
Item1Option6=Text:Target 3; Define:ISSI_FTP_Target3; Input:Text;
Item1Option7=Text:Source 4; Define:ISSI_FTP_Source4; Input:Browse;
Item1Option8=Text:Target 4; Define:ISSI_FTP_Target4; Input:Text;
Item1Option9=Text:Source 5; Define:ISSI_FTP_Source5; Input:Browse;
Item1Option10=Text:Target 5; Define:ISSI_FTP_Target5; Input:Text;
Item1Option11=Text:Source 6; Define:ISSI_FTP_Source6; Input:Browse;
Item1Option12=Text:Target 6; Define:ISSI_FTP_Target6; Input:Text;
Item1Option13=Text:Source 7; Define:ISSI_FTP_Source7; Input:Browse;
Item1Option14=Text:Target 7; Define:ISSI_FTP_Target7; Input:Text;
Item1Option15=Text:Source 8; Define:ISSI_FTP_Source8; Input:Browse;
Item1Option16=Text:Target 8; Define:ISSI_FTP_Target8; Input:Text;

[ISP Tab19]
TabName=FTP Files 2
Item1Option0=FTP Upload Files (Continued)
Item1Option1=Text:Source 9; Define:ISSI_FTP_Source9; Input:Browse;
Item1Option2=Text:Target 9; Define:ISSI_FTP_Target9; Input:Text;
Item1Option3=Text:Source 10; Define:ISSI_FTP_Source10; Input:Browse;
Item1Option4=Text:Target 10; Define:ISSI_FTP_Target10; Input:Text;
Item1Option5=Text:Source 11; Define:ISSI_FTP_Source11; Input:Browse;
Item1Option6=Text:Target 11; Define:ISSI_FTP_Target11; Input:Text;
Item1Option7=Text:Source 12; Define:ISSI_FTP_Source12; Input:Browse;
Item1Option8=Text:Target 12; Define:ISSI_FTP_Target12; Input:Text;
Item1Option9=Text:Source 13; Define:ISSI_FTP_Source13; Input:Browse;
Item1Option10=Text:Target 13; Define:ISSI_FTP_Target13; Input:Text;
Item1Option11=Text:Source 14; Define:ISSI_FTP_Source14; Input:Browse;
Item1Option12=Text:Target 14; Define:ISSI_FTP_Target14; Input:Text;
Item1Option13=Text:Source 15; Define:ISSI_FTP_Source15; Input:Browse;
Item1Option14=Text:Target 15; Define:ISSI_FTP_Target15; Input:Text;
Item1Option15=Text:Source 16; Define:ISSI_FTP_Source16; Input:Browse;
Item1Option16=Text:Target 16; Define:ISSI_FTP_Target16; Input:Text;
Item1Option13=Text:Source 17; Define:ISSI_FTP_Source17; Input:Browse;
Item1Option14=Text:Target 17; Define:ISSI_FTP_Target17; Input:Text;
Item1Option15=Text:Source 18; Define:ISSI_FTP_Source18; Input:Browse;
Item1Option16=Text:Target 18; Define:ISSI_FTP_Target18; Input:Text;

[ISP Tab20]
TabName=FTP Files 3
Item1Option0=FTP Upload Files (Continued)
Item1Option1=Text:Source 19; Define:ISSI_FTP_Source19; Input:Browse;
Item1Option2=Text:Target 19; Define:ISSI_FTP_Target19; Input:Text;
Item1Option3=Text:Source 20; Define:ISSI_FTP_Source20; Input:Browse;
Item1Option4=Text:Target 20; Define:ISSI_FTP_Target20; Input:Text;
Item1Option5=Text:Source 21; Define:ISSI_FTP_Source21; Input:Browse;
Item1Option6=Text:Target 21; Define:ISSI_FTP_Target21; Input:Text;
Item1Option7=Text:Source 22; Define:ISSI_FTP_Source22; Input:Browse;
Item1Option8=Text:Target 22; Define:ISSI_FTP_Target22; Input:Text;
Item1Option9=Text:Source 23; Define:ISSI_FTP_Source23; Input:Browse;
Item1Option10=Text:Target 23; Define:ISSI_FTP_Target23; Input:Text;
Item1Option11=Text:Source 24; Define:ISSI_FTP_Source24; Input:Browse;
Item1Option12=Text:Target 24; Define:ISSI_FTP_Target24; Input:Text;
Item1Option13=Text:Source 25; Define:ISSI_FTP_Source25; Input:Browse;
Item1Option14=Text:Target 25; Define:ISSI_FTP_Target25; Input:Text;
Item1Option15=Text:Source 26; Define:ISSI_FTP_Source26; Input:Browse;
Item1Option16=Text:Target 26; Define:ISSI_FTP_Target26; Input:Text;

[ISP Tab21]
TabName=FTP Files 4
Item1Option0=FTP Upload Files (Continued)
Item1Option1=Text:Source 27; Define:ISSI_FTP_Source27; Input:Browse;
Item1Option2=Text:Target 27; Define:ISSI_FTP_Target27; Input:Text;
Item1Option3=Text:Source 28; Define:ISSI_FTP_Source28; Input:Browse;
Item1Option4=Text:Target 28; Define:ISSI_FTP_Target28; Input:Text;
Item1Option5=Text:Source 29; Define:ISSI_FTP_Source29; Input:Browse;
Item1Option6=Text:Target 29; Define:ISSI_FTP_Target29; Input:Text;
Item1Option7=Text:Source 30; Define:ISSI_FTP_Source30; Input:Browse;
Item1Option8=Text:Target 30; Define:ISSI_FTP_Target30; Input:Text;
Item1Option9=Text:Source 31; Define:ISSI_FTP_Source31; Input:Browse;
Item1Option10=Text:Target 31; Define:ISSI_FTP_Target31; Input:Text;
Item1Option11=Text:Source 32; Define:ISSI_FTP_Source32; Input:Browse;
Item1Option12=Text:Target 32; Define:ISSI_FTP_Target32; Input:Text;
Item1Option13=Text:Source 33; Define:ISSI_FTP_Source33; Input:Browse;
Item1Option14=Text:Target 33; Define:ISSI_FTP_Target33; Input:Text;
Item1Option15=Text:Source 34; Define:ISSI_FTP_Source34; Input:Browse;
Item1Option16=Text:Target 34; Define:ISSI_FTP_Target34; Input:Text;

[ISP Tab22]
TabName=FTP Files 5
Item1Option0=FTP Upload Files (Continued)
Item1Option1=Text:Source 35; Define:ISSI_FTP_Source35; Input:Browse;
Item1Option2=Text:Target 35; Define:ISSI_FTP_Target35; Input:Text;
Item1Option3=Text:Source 36; Define:ISSI_FTP_Source36; Input:Browse;
Item1Option4=Text:Target 36; Define:ISSI_FTP_Target36; Input:Text;
Item1Option5=Text:Source 37; Define:ISSI_FTP_Source37; Input:Browse;
Item1Option6=Text:Target 37; Define:ISSI_FTP_Target37; Input:Text;
Item1Option7=Text:Source 38; Define:ISSI_FTP_Source38; Input:Browse;
Item1Option8=Text:Target 38; Define:ISSI_FTP_Target38; Input:Text;
Item1Option9=Text:Source 39; Define:ISSI_FTP_Source39; Input:Browse;
Item1Option10=Text:Target 39; Define:ISSI_FTP_Target39; Input:Text;
Item1Option11=Text:Source 40; Define:ISSI_FTP_Source40; Input:Browse;
Item1Option12=Text:Target 40; Define:ISSI_FTP_Target40; Input:Text;
Item1Option13=Text:Source 41; Define:ISSI_FTP_Source41; Input:Browse;
Item1Option14=Text:Target 41; Define:ISSI_FTP_Target41; Input:Text;
Item1Option15=Text:Source 42; Define:ISSI_FTP_Source42; Input:Browse;
Item1Option16=Text:Target 42; Define:ISSI_FTP_Target42; Input:Text;

[ISP Tab23]
TabName=FTP Files 6
Item1Option0=FTP Upload Files (Continued)
Item1Option1=Text:Source 43; Define:ISSI_FTP_Source43; Input:Browse;
Item1Option2=Text:Target 43; Define:ISSI_FTP_Target43; Input:Text;
Item1Option3=Text:Source 44; Define:ISSI_FTP_Source44; Input:Browse;
Item1Option4=Text:Target 44; Define:ISSI_FTP_Target44; Input:Text;
Item1Option5=Text:Source 45; Define:ISSI_FTP_Source45; Input:Browse;
Item1Option6=Text:Target 45; Define:ISSI_FTP_Target45; Input:Text;
Item1Option7=Text:Source 46; Define:ISSI_FTP_Source46; Input:Browse;
Item1Option8=Text:Target 46; Define:ISSI_FTP_Target46; Input:Text;
Item1Option9=Text:Source 47; Define:ISSI_FTP_Source47; Input:Browse;
Item1Option10=Text:Target 47; Define:ISSI_FTP_Target47; Input:Text;
Item1Option11=Text:Source 48; Define:ISSI_FTP_Source48; Input:Browse;
Item1Option12=Text:Target 48; Define:ISSI_FTP_Target48; Input:Text;
Item1Option13=Text:Source 49; Define:ISSI_FTP_Source49; Input:Browse;
Item1Option14=Text:Target 49; Define:ISSI_FTP_Target49; Input:Text;
Item1Option15=Text:Source 50; Define:ISSI_FTP_Source50; Input:Browse;
Item1Option16=Text:Target 50; Define:ISSI_FTP_Target50; Input:Text;

[ISP Tab24]
TabName=CVS
Item1Option0=CVS Settings
Item1Option1=Text:CVS Application; Define:ISSI_CVS; Input:Browse;
Item1Option2=Text:CVS Repository Location; Define:ISSI_CVS_Root; Input:Text;
Item1Option3=Text:CVS Repository Name; Define:ISSI_CVS_Repository; Input:Text;
Item2Option0=CVS Export
Item2Option1=Text:CVS Export TAG Name; Define:ISSI_CVS_Export; Input:Text;
Item2Option2=Text:CVS Export Folder Name; Define:ISSI_CVS_ExportFolder; Input:Folder;


[ISP END]
#endif

#ifndef ISSI_IncludePath
  #pragma error "ERROR : ISSI_IncludePath is undefined"
#else
  #define ISSI_IncludePath addBackSlash(ISSI_IncludePath)
#endif

#ifdef ISSI_Remark
[ ISSI LANGUAGES ]
  This file should be an up-to-date list to all ISSI supported languages.
  Also this file may contain unsupported languages but when they become
  available it will need no or little updating.
#endif

  #ifndef ISSI_LanguagesZone
    #define ISSI_LanguagesZone ""
  #endif

#ifdef ISSI_Languages

  #if ISSI_LanguagesZone == "EuropeWest"
    #ifdef ISSI_UninsHs_AppName
      #define ISSI_Dutch ISSI_Languages
      #define ISSI_English ISSI_Languages
      #define ISSI_French ISSI_Languages
      #define ISSI_German ISSI_Languages
      #define ISSI_Italian ISSI_Languages
      #define ISSI_Norwegian ISSI_Languages	
      #define ISSI_Spanish ISSI_Languages
      #define ISSI_Swedish ISSI_Languages
    #else
      #define ISSI_Danish ISSI_Languages
      #define ISSI_Dutch ISSI_Languages
      #define ISSI_English ISSI_Languages
      #define ISSI_Finnish ISSI_Languages
      #define ISSI_French ISSI_Languages
      #define ISSI_German ISSI_Languages
      #define ISSI_Greek ISSI_Languages
      #define ISSI_Italian ISSI_Languages
      #define ISSI_Luxemburgish ISSI_Languages
      #define ISSI_Norwegian ISSI_Languages	
      #define ISSI_Portuguese ISSI_Languages
      #define ISSI_Spanish ISSI_Languages
      #define ISSI_Swedish ISSI_Languages
      #define ISSI_Turkish ISSI_Languages
    #endif
  #elif ISSI_LanguagesZone == "EuropeEast"
    #ifdef ISSI_UninsHs_AppName
      #define ISSI_Czech ISSI_Languages
      #define ISSI_English ISSI_Languages
      #define ISSI_Hungarian ISSI_Languages
      #define ISSI_Polish	ISSI_Languages
      #define ISSI_Russian ISSI_Languages
    #else
      #define ISSI_Albanian ISSI_Languages
      #define ISSI_Asturian ISSI_Languages
      #define ISSI_Belarusian ISSI_Languages
      #define ISSI_Bosnian ISSI_Languages
      #define ISSI_Bulgarian ISSI_Languages
      #define ISSI_Catalan ISSI_Languages
      #define ISSI_Croatian ISSI_Languages
      #define ISSI_Czech ISSI_Languages
      #define ISSI_English ISSI_Languages
      #define ISSI_Estonian ISSI_Languages
      #define ISSI_Galician ISSI_Languages
      #define ISSI_Hungarian ISSI_Languages
      #define ISSI_Lithuanian ISSI_Languages
      #define ISSI_Marcedonian ISSI_Languages
      #define ISSI_Polish	ISSI_Languages
      #define ISSI_Romanian ISSI_Languages
      #define ISSI_Russian ISSI_Languages
      #define ISSI_Serbian ISSI_Languages
      #define ISSI_Slovak ISSI_Languages
      #define ISSI_Slovenian ISSI_Languages
      #define ISSI_Ukrainian ISSI_Languages
    #endif
  #elif ISSI_LanguagesZone == "Europe"
    #ifdef ISSI_UninsHs_AppName
      #define ISSI_Czech ISSI_Languages
      #define ISSI_Dutch ISSI_Languages
      #define ISSI_English ISSI_Languages
      #define ISSI_French ISSI_Languages
      #define ISSI_German ISSI_Languages
      #define ISSI_Hungarian ISSI_Languages
      #define ISSI_Italian ISSI_Languages
      #define ISSI_Norwegian ISSI_Languages	
      #define ISSI_Polish	ISSI_Languages
      #define ISSI_Russian ISSI_Languages
      #define ISSI_Spanish ISSI_Languages
      #define ISSI_Swedish ISSI_Languages
    #else
      #define ISSI_Albanian ISSI_Languages
      #define ISSI_Asturian ISSI_Languages
      #define ISSI_Belarusian ISSI_Languages
      #define ISSI_Bosnian ISSI_Languages
      #define ISSI_Bulgarian ISSI_Languages
      #define ISSI_Catalan ISSI_Languages
      #define ISSI_Croatian ISSI_Languages
      #define ISSI_Czech ISSI_Languages
      #define ISSI_Danish ISSI_Languages
      #define ISSI_Dutch ISSI_Languages
      #define ISSI_English ISSI_Languages
      #define ISSI_Estonian ISSI_Languages
      #define ISSI_Finnish ISSI_Languages
      #define ISSI_French ISSI_Languages
      #define ISSI_Galician ISSI_Languages
      #define ISSI_German ISSI_Languages
      #define ISSI_Greek ISSI_Languages
      #define ISSI_Hungarian ISSI_Languages
      #define ISSI_Italian ISSI_Languages
      #define ISSI_Lithuanian ISSI_Languages
      #define ISSI_Luxemburgish ISSI_Languages
      #define ISSI_Marcedonian ISSI_Languages
      #define ISSI_Norwegian ISSI_Languages	
      #define ISSI_Polish	ISSI_Languages
      #define ISSI_Portuguese ISSI_Languages
      #define ISSI_Romanian ISSI_Languages
      #define ISSI_Russian ISSI_Languages
      #define ISSI_Serbian ISSI_Languages
      #define ISSI_Slovak ISSI_Languages
      #define ISSI_Slovenian ISSI_Languages
      #define ISSI_Spanish ISSI_Languages
      #define ISSI_Swedish ISSI_Languages
      #define ISSI_Turkish ISSI_Languages
      #define ISSI_Ukrainian ISSI_Languages
    #endif
  #elif ISSI_LanguagesZone == "Asia"
    #ifdef ISSI_UninsHs_AppName
      #define ISSI_ChineseTrad ISSI_Languages
      #define ISSI_ChineseSimp ISSI_Languages
      #define ISSI_English ISSI_Languages
    #else
      #define ISSI_ChineseTrad ISSI_Languages
      #define ISSI_ChineseSimp ISSI_Languages
      #define ISSI_English ISSI_Languages
      #define ISSI_Indonesian ISSI_Languages
      #define ISSI_Japanese ISSI_Languages
      #define ISSI_Korean ISSI_Languages
      #define ISSI_Malaysian ISSI_Languages
    #endif
  #elif ISSI_LanguagesZone == "Scandinavia"
    #ifdef ISSI_UninsHs_AppName
      #define ISSI_English ISSI_Languages
      #define ISSI_Norwegian ISSI_Languages	
      #define ISSI_Swedish ISSI_Languages
    #else
      #define ISSI_Danish ISSI_Languages
      #define ISSI_English ISSI_Languages
      #define ISSI_Finnish ISSI_Languages
      #define ISSI_Norwegian ISSI_Languages	
    #endif
  #elif ISSI_LanguagesZone == "Benelux"
    #ifdef ISSI_UninsHs_AppName
      #define ISSI_Dutch ISSI_Languages
      #define ISSI_English ISSI_Languages
      #define ISSI_French ISSI_Languages
    #else
      #define ISSI_Dutch ISSI_Languages
      #define ISSI_English ISSI_Languages
      #define ISSI_French ISSI_Languages
      #define ISSI_Luxemburgish ISSI_Languages
    #endif
  #elif ISSI_LanguagesZone == "ISSI"
    #ifdef ISSI_UninsHs_AppName
      ;; ADD ONLY SUPPORTED BY ISSI AND UNINSHS
      #define ISSI_BrazilianPortuguese ISSI_Languages
      #define ISSI_ChineseTrad ISSI_Languages
      #define ISSI_ChineseSimp ISSI_Languages
      #define ISSI_Czech ISSI_Languages
      #define ISSI_Dutch ISSI_Languages
      #define ISSI_English ISSI_Languages
      #define ISSI_French ISSI_Languages
      #define ISSI_German ISSI_Languages
      #define ISSI_Hungarian ISSI_Languages
      #define ISSI_Italian ISSI_Languages
      #define ISSI_Polish	ISSI_Languages
      #define ISSI_Russian ISSI_Languages
      #define ISSI_Spanish ISSI_Languages
      #define ISSI_Swedish ISSI_Languages
    #else
      ;; ADD ONLY SUPPORTED BY ISSI
      #define ISSI_Bosnian ISSI_Languages
      #define ISSI_BrazilianPortuguese ISSI_Languages
      #define ISSI_Catalan ISSI_Languages
      #define ISSI_ChineseTrad ISSI_Languages
      #define ISSI_ChineseSimp ISSI_Languages
      #define ISSI_Czech ISSI_Languages
      #define ISSI_Danish ISSI_Languages
      #define ISSI_Dutch ISSI_Languages
      #define ISSI_English ISSI_Languages
      #define ISSI_French ISSI_Languages
      #define ISSI_German ISSI_Languages
      #define ISSI_Hungarian ISSI_Languages
      #define ISSI_Italian ISSI_Languages
      #define ISSI_Polish	ISSI_Languages
      #define ISSI_Russian ISSI_Languages
      #define ISSI_Slovak ISSI_Languages
      #define ISSI_Slovenian ISSI_Languages
      #define ISSI_Spanish ISSI_Languages
      #define ISSI_Swedish ISSI_Languages
      #define ISSI_Turkish ISSI_Languages
    #endif
  #else
    #ifdef ISSI_UninsHs_AppName
      ;; ADD ALL LANG SUPPORTED BY UNINSHS
      #define ISSI_BrazilianPortuguese ISSI_Languages
      #define ISSI_ChineseTrad ISSI_Languages
      #define ISSI_ChineseSimp ISSI_Languages
      #define ISSI_Czech ISSI_Languages
      #define ISSI_Dutch ISSI_Languages
      #define ISSI_English ISSI_Languages
      #define ISSI_French ISSI_Languages
      #define ISSI_German ISSI_Languages
      #define ISSI_Hungarian ISSI_Languages
      #define ISSI_Italian ISSI_Languages
      #define ISSI_Norwegian ISSI_Languages	
      #define ISSI_Polish	ISSI_Languages
      #define ISSI_Russian ISSI_Languages
      #define ISSI_Spanish ISSI_Languages
      #define ISSI_Swedish ISSI_Languages
    #else
      ;; ADD ALL AVAILABLE INNO LANGUAGES
      #define ISSI_Afrikaans ISSI_Languages
      #define ISSI_Albanian ISSI_Languages
      #define ISSI_Arabic ISSI_Languages
      #define ISSI_Asturian ISSI_Languages
      #define ISSI_Belarusian ISSI_Languages
      #define ISSI_Bosnian ISSI_Languages
      #define ISSI_Bulgarian ISSI_Languages
      #define ISSI_BrazilianPortuguese ISSI_Languages
      #define ISSI_Catalan ISSI_Languages
      #define ISSI_ChineseTrad ISSI_Languages
      #define ISSI_ChineseSimp ISSI_Languages
      #define ISSI_Croatian ISSI_Languages
      #define ISSI_Czech ISSI_Languages
      #define ISSI_Danish ISSI_Languages
      #define ISSI_Dutch ISSI_Languages
      #define ISSI_English ISSI_Languages
      #define ISSI_Estonian ISSI_Languages
      #define ISSI_Finnish ISSI_Languages
      #define ISSI_French ISSI_Languages
      #define ISSI_Galician ISSI_Languages
      #define ISSI_German ISSI_Languages
      #define ISSI_Greek ISSI_Languages
      #define ISSI_Hebrew ISSI_Languages
      #define ISSI_Hungarian ISSI_Languages
      #define ISSI_Icelandic ISSI_Languages
      #define ISSI_Indonesian ISSI_Languages
      #define ISSI_Italian ISSI_Languages
      #define ISSI_Japanese ISSI_Languages
      #define ISSI_Korean ISSI_Languages
      #define ISSI_Lithuanian ISSI_Languages
      #define ISSI_Luxemburgish ISSI_Languages
      #define ISSI_Malaysian ISSI_Languages
      #define ISSI_Marcedonian ISSI_Languages
      #define ISSI_Norwegian ISSI_Languages	
      #define ISSI_Polish	ISSI_Languages
      #define ISSI_Portuguese ISSI_Languages
      #define ISSI_Romanian ISSI_Languages
      #define ISSI_Russian ISSI_Languages
      #define ISSI_Serbian ISSI_Languages
      #define ISSI_Slovak ISSI_Languages
      #define ISSI_Slovenian ISSI_Languages
      #define ISSI_Spanish ISSI_Languages
      #define ISSI_Swedish ISSI_Languages
      #define ISSI_Turkish ISSI_Languages
      #define ISSI_Ukrainian ISSI_Languages
      ;; ADDED 03-2006
      #define ISSI_Basque
      #define ISSI_SpanishArgentina
      #define ISSI_SpanishNicaragua
      #define ISSI_Tatarish
    #endif
  #endif

#endif

#ifdef ISSI_Remark
[ISSI Aliases]
#endif

#ifdef ISSI_PlayWave
  #define ISSI_PlayWav ISSI_PlayWave
  #undef ISSI_PlayWave
#endif

#ifdef ISSI_PlayWaveExternal
  #define ISSI_PlayWavExternal ISSI_PlayWaveExternal
  #undef ISSI_PlayWaveExternal
#endif

#ifdef ISSI_PlayWaveLoop
  #define ISSI_PlayWavLoop ISSI_PlayWaveLoop
  #undef ISSI_PlayWaveLoop
#endif

#ifdef ISSI_WizardImageFile
  #define ISSI_WizardBitmapImage ISSI_WizardImageFile
  #undef ISSI_WizardImageFile
#endif

#ifdef ISSI_WizardImageFile_x
  #define ISSI_WizardBitmapImage_x ISSI_WizardImageFile_x
  #undef ISSI_WizardImageFile_x
#endif

#ifdef ISSI_WizardImageFile_Align
  #define ISSI_WizardBitmapImage_Align ISSI_WizardImageFile_Align
  #undef ISSI_WizardImageFile_Align
#endif

#ifdef ISSI_WizardImageFile2
  #define ISSI_WizardBitmapImage2 ISSI_WizardImageFile2
  #undef ISSI_WizardImageFile2
#endif

#ifdef ISSI_WizardImageFile2_x
  #define ISSI_WizardBitmapImage2_x ISSI_WizardImageFile2_x
  #undef ISSI_WizardImageFile2_x
#endif

#ifdef ISSI_WizardImageFile2_Align
  #define ISSI_WizardBitmapImage2_Align ISSI_WizardImageFile2_Align
  #undef ISSI_WizardImageFile2_Align
#endif

#ifdef ISSI_WizardSmallImageFile
  #define ISSI_WizardSmallBitmapImage ISSI_WizardSmallImageFile
  #undef ISSI_WizardSmallImageFile
#endif

#ifdef ISSI_WizardSmallImageFile_Align
  #define ISSI_WizardSmallBitmapImage_Align ISSI_WizardSmallImageFile_Align
  #undef ISSI_WizardSmallImageFile_Align
#endif

#ifdef ISSI_WizardSmallImageFile_x
  #define ISSI_WizardSmallBitmapImage_x ISSI_WizardSmallImageFile_x
  #undef ISSI_WizardSmallImageFile_x
#endif

#ifdef ISSI_BatchCompileNotify
  #define ISSI_BatchNotify ISSI_BatchCompileNotify
  #undef ISSI_BatchCompileNotify
#endif

#ifdef ISSI_BatchCompilePath
  #define ISSI_Batch ISSI_BatchCompilePath
  #undef ISSI_BatchCompilePath
#endif

#ifdef ISSI_BatchCompileFolder
  #define ISSI_Batch ISSI_BatchCompileFolder
  #undef ISSI_BatchCompileFolder
#endif

#ifdef ISSI_BatchCompile
  #define ISSI_Batch ISSI_BatchCompile
  #undef ISSI_BatchCompile
#endif

#ifdef ISSI_BatchCompile1
  #define ISSI_Batch1 ISSI_BatchCompile1
  #undef ISSI_BatchCompile1
#endif

#ifdef ISSI_BatchCompile2
  #define ISSI_Batch2 ISSI_BatchCompile2
  #undef ISSI_BatchCompile2
#endif

#ifdef ISSI_BatchCompile3
  #define ISSI_Batch3 ISSI_BatchCompile3
  #undef ISSI_BatchCompile3
#endif

#ifdef ISSI_BatchCompile4
  #define ISSI_Batch4 ISSI_BatchCompile4
  #undef ISSI_BatchCompile4
#endif

#ifdef ISSI_BatchCompile5
  #define ISSI_Batch5 ISSI_BatchCompile5
  #undef ISSI_BatchCompile5
#endif

#ifdef ISSI_BatchCompile6
  #define ISSI_Batch6 ISSI_BatchCompile6
  #undef ISSI_BatchCompile6
#endif

#ifdef ISSI_BatchCompile7
  #define ISSI_Batch7 ISSI_BatchCompile7
  #undef ISSI_BatchCompile7
#endif

#ifdef ISSI_BatchCompile8
  #define ISSI_Batch8 ISSI_BatchCompile8
  #undef ISSI_BatchCompile8
#endif

#ifdef ISSI_BatchCompile9
  #define ISSI_Batch9 ISSI_BatchCompile9
  #undef ISSI_BatchCompile9
#endif

#ifdef ISSI_BatchCompile10
  #define ISSI_Batch10 ISSI_BatchCompile10
  #undef ISSI_BatchCompile10
#endif

#ifdef ISSI_BatchCompile11
  #define ISSI_Batch11 ISSI_BatchCompile11
  #undef ISSI_BatchCompile11
#endif

#ifdef ISSI_BatchCompile12
  #define ISSI_Batch12 ISSI_BatchCompile12
  #undef ISSI_BatchCompile12
#endif

#ifdef ISSI_BatchCompile13
  #define ISSI_Batch13 ISSI_BatchCompile13
  #undef ISSI_BatchCompile13
#endif

#ifdef ISSI_BatchCompile14
  #define ISSI_Batch14 ISSI_BatchCompile14
  #undef ISSI_BatchCompile14
#endif

#ifdef ISSI_BatchCompile15
  #define ISSI_Batch15 ISSI_BatchCompile15
  #undef ISSI_BatchCompile15
#endif

#ifdef ISSI_BatchCompile16
  #define ISSI_Batch16 ISSI_BatchCompile16
  #undef ISSI_BatchCompile16
#endif

#ifdef ISSI_BatchCompile17
  #define ISSI_Batch17 ISSI_BatchCompile17
  #undef ISSI_BatchCompile17
#endif

#ifdef ISSI_BatchCompile18
  #define ISSI_Batch18 ISSI_BatchCompile18
  #undef ISSI_BatchCompile18
#endif

#ifdef ISSI_BatchCompile19
  #define ISSI_Batch9 ISSI_BatchCompile19
  #undef ISSI_BatchCompile19
#endif

#ifdef ISSI_BatchCompile20
  #define ISSI_Batch20 ISSI_BatchCompile20
  #undef ISSI_BatchCompile20
#endif

#ifdef ISSI_BatchCompile21
  #define ISSI_Batch21 ISSI_BatchCompile21
  #undef ISSI_BatchCompile21
#endif

#ifdef ISSI_BatchCompile22
  #define ISSI_Batch22 ISSI_BatchCompile22
  #undef ISSI_BatchCompile22
#endif

#ifdef ISSI_BatchCompile23
  #define ISSI_Batch23 ISSI_BatchCompile23
  #undef ISSI_BatchCompile23
#endif

#ifdef ISSI_BatchCompile24
  #define ISSI_Batch24 ISSI_BatchCompile24
  #undef ISSI_BatchCompile24
#endif

#ifdef ISSI_BatchCompile25
  #define ISSI_Batch25 ISSI_BatchCompile25
  #undef ISSI_BatchCompile25
#endif

#ifdef ISSI_BatchCompile26
  #define ISSI_Batch26 ISSI_BatchCompile26
  #undef ISSI_BatchCompile26
#endif

#ifdef ISSI_BatchCompile27
  #define ISSI_Batch27 ISSI_BatchCompile27
  #undef ISSI_BatchCompile27
#endif

#ifdef ISSI_BatchCompile28
  #define ISSI_Batch28 ISSI_BatchCompile28
  #undef ISSI_BatchCompile28
#endif

#ifdef ISSI_BatchCompile29
  #define ISSI_Batch20 ISSI_BatchCompile29
  #undef ISSI_BatchCompile29
#endif

#ifdef ISSI_BatchCompile30
  #define ISSI_Batch30 ISSI_BatchCompile30
  #undef ISSI_BatchCompile30
#endif

#ifdef ISSI_BatchCompile31
  #define ISSI_Batch31 ISSI_BatchCompile31
  #undef ISSI_BatchCompile31
#endif

#ifdef ISSI_BatchCompile32
  #define ISSI_Batch32 ISSI_BatchCompile32
  #undef ISSI_BatchCompile32
#endif

#ifdef ISSI_BatchCompile33
  #define ISSI_Batch33 ISSI_BatchCompile33
  #undef ISSI_BatchCompile33
#endif

#ifdef ISSI_BatchCompile34
  #define ISSI_Batch34 ISSI_BatchCompile34
  #undef ISSI_BatchCompile34
#endif

#ifdef ISSI_BatchCompile35
  #define ISSI_Batch35 ISSI_BatchCompile35
  #undef ISSI_BatchCompile35
#endif

#ifdef ISSI_BatchCompile36
  #define ISSI_Batch36 ISSI_BatchCompile36
  #undef ISSI_BatchCompile36
#endif

#ifdef ISSI_BatchCompile37
  #define ISSI_Batch37 ISSI_BatchCompile37
  #undef ISSI_BatchCompile37
#endif

#ifdef ISSI_BatchCompile38
  #define ISSI_Batch38 ISSI_BatchCompile38
  #undef ISSI_BatchCompile38
#endif

#ifdef ISSI_BatchCompile39
  #define ISSI_Batch39 ISSI_BatchCompile39
  #undef ISSI_BatchCompile39
#endif

#ifdef ISSI_BatchCompile40
  #define ISSI_Batch40 ISSI_BatchCompile40
  #undef ISSI_BatchCompile40
#endif

#ifdef ISSI_BatchCompile41
  #define ISSI_Batch41 ISSI_BatchCompile41
  #undef ISSI_BatchCompile41
#endif

#ifdef ISSI_BatchCompile42
  #define ISSI_Batch42 ISSI_BatchCompile42
  #undef ISSI_BatchCompile42
#endif

#ifdef ISSI_BatchCompile43
  #define ISSI_Batch43 ISSI_BatchCompile43
  #undef ISSI_BatchCompile43
#endif

#ifdef ISSI_BatchCompile44
  #define ISSI_Batch44 ISSI_BatchCompile44
  #undef ISSI_BatchCompile44
#endif

#ifdef ISSI_BatchCompile45
  #define ISSI_Batch45 ISSI_BatchCompile45
  #undef ISSI_BatchCompile45
#endif

#ifdef ISSI_BatchCompile46
  #define ISSI_Batch46 ISSI_BatchCompile46
  #undef ISSI_BatchCompile46
#endif

#ifdef ISSI_BatchCompile47
  #define ISSI_Batch47 ISSI_BatchCompile47
  #undef ISSI_BatchCompile47
#endif

#ifdef ISSI_BatchCompile48
  #define ISSI_Batch48 ISSI_BatchCompile48
  #undef ISSI_BatchCompile48
#endif

#ifdef ISSI_BatchCompile49
  #define ISSI_Batch49 ISSI_BatchCompile49
  #undef ISSI_BatchCompile49
#endif

#ifdef ISSI_BatchCompile50
  #define ISSI_Batch50 ISSI_BatchCompile50
  #undef ISSI_BatchCompile50
#endif

#ifdef ISSI_UpdateName
  #define ISSI_UpdateTitle ISSI_UpdateName
  #undef ISSI_UpdateName
#endif

#ifdef ISSI_UpdateID
  #define ISSI_Update ISSI_UpdateID
  #undef ISSI_UpdateID
#endif

#ifdef ISSI_CurPageChanged
  #define ISSI_useMyCurPageChanged ISSI_CurPageChanged
  #undef ISSI_CurPageChanged
#endif

#ifdef ISSI_BackButtonClick
  #define ISSI_BackButtonClick ISSI_BackButtonClick
  #undef ISSI_BackButtonClick
#endif

#ifdef ISSI_NextButtonClick
  #define ISSI_useMyNextButtonClick ISSI_NextButtonClick
  #undef ISSI_NextButtonClick
#endif

#ifdef ISSI_DeinitializeSetup
  #define ISSI_DeinitializeSetup ISSI_DeinitializeSetup
  #undef ISSI_DeinitializeSetup
#endif

#ifdef ISSI_InitializeWizard
  #define ISSI_useMyInitializeWizard ISSI_InitializeWizard
  #undef ISSI_InitializeWizard
#endif

#ifdef ISSI_InitializeSetup
  #define ISSI_useMyInitializeSetup ISSI_InitializeSetup
  #undef ISSI_InitializeSetup
#endif

#ifdef ISSI_BackgroundImage
  #define ISSI_Image ISSI_BackgroundImage
  #undef ISSI_BackgroundImage
#endif

#ifdef ISSI_BackgroundImage_NoStretch
  #define ISSI_Image_NoStretch ISSI_BackgroundImage_NoStretch
  #undef ISSI_BackgroundImage_NoStretch
#endif

#ifdef ISSI_BackgroundImage_BGColor
  #define ISSI_Image_BGColor ISSI_BackgroundImage_BGColor
  #undef ISSI_BackgroundImage_BGColor
#endif

#ifdef ISSI_ChineseTrad
  #define ISSI_Chinese ISSI_ChineseTrad
#endif

#ifdef ISSI_Chinese
  #define ISSI_ChineseTrad ISSI_Chinese
#endif

#ifdef ISSI_SplashScreen
  #define ISSI_Splash ISSI_SplashScreen
  #undef ISSI_SplashScreen
#endif

#ifdef ISSI_SplashScreen_T
  #define ISSI_Splash_T ISSI_SplashScreen_T
  #undef ISSI_SplashScreen_T
#endif

#ifdef ISSI_SplashScreen_X
  #define ISSI_Splash_X ISSI_SplashScreen_X
  #undef ISSI_SplashScreen_X
#endif

#ifdef ISSI_SplashScreen_Y
  #define ISSI_Splash_Y ISSI_SplashScreen_Y
  #undef ISSI_SplashScreen_Y
#endif

#ifdef ISSI_SplashScreen_Corner
  #define ISSI_Splash_Corner ISSI_SplashScreen_Corner
  #undef ISSI_SplashScreen_Corner
#endif

#ifdef ISSI_AboutButton
  #define ISSI_About ISSI_AboutButton
  #undef ISSI_AboutButton
#endif

[Wizard Images PreProcessing]
#ifdef ISSI_WizardBitmapImage
  #ifndef ISSI_WizardBitmapImage2
    #define ISSI_WizardBitmapImage2 ISSI_WizardBitmapImage
    #define ISSI_WizardBitmapImage2_x ISSI_WizardBitmapImage_x
  #endif
#endif

#if !defined ISSI_wpPassword && defined ISSI_wpLicense
  #define ISSI_wpPassword ISSI_wpLicense
#endif

#if !defined ISSI_wpInfoBefore && defined ISSI_wpPassword
  #define ISSI_wpInfoBefore ISSI_wpPassword
#endif

#if !defined ISSI_wpUserInfo && defined ISSI_wpInfoBefore
  #define ISSI_wpUserInfo ISSI_wpInfoBefore
#endif

#if !defined ISSI_wpSelectDir && defined ISSI_wpUserInfo
  #define ISSI_wpSelectDir ISSI_wpUserInfo
#endif

#if !defined ISSI_wpSelectComponents && defined ISSI_wpSelectDir
  #define ISSI_wpSelectComponents ISSI_wpSelectDir
#endif

#if !defined ISSI_wpSelectProgramGroup && defined ISSI_wpSelectComponents
  #define ISSI_wpSelectProgramGroup ISSI_wpSelectComponents
#endif

#if !defined ISSI_wpSelectTasks && defined ISSI_wpSelectProgramGroup
  #define ISSI_wpSelectTasks ISSI_wpSelectProgramGroup
#endif

#if !defined ISSI_wpReady && defined ISSI_wpSelectTasks
  #define ISSI_wpReady ISSI_wpSelectTasks
#endif

#if !defined ISSI_wpPreparing && defined ISSI_wpReady
  #define ISSI_wpPreparing ISSI_wpReady
#endif

#if !defined ISSI_wpInstalling && defined ISSI_wpPreparing
  #define ISSI_wpInstalling ISSI_wpPreparing
#endif

#if !defined ISSI_wpInfoAfter && defined ISSI_wpInstalling
  #define ISSI_wpInfoAfter ISSI_wpInstalling
#endif

#ifdef ISSI_Remark
[ISSI CVS FUNCTIONS] PUBLISH FUNCTION
#endif

#ifdef ISSI_CVS
  #ifdef ISSI_CVS_Export
    #define ISSI_CVS_ExportParams "-d "+ISSI_CVS_Root+" -q export -r "+ISSI_CVS_Export+" -d "+ISSI_CVS_ExportFolder+" "+ISSI_CVS_Repository
    #expr Exec(ISSI_CVS,ISSI_CVS_ExportParams)
  #endif
#endif

#ifdef ISSI_Remark
[ISSI BATCH COMPILE] PUBLISH FUNCTION
#endif

#ifdef ISSI_Batch
  #define ISSI_Batch AddBackslash(ISSI_Batch)
  #if !defined compileCounter
    #define public compileCounter = 0
  #endif

  #ifdef ISSI_Batch1
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch1+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch2
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch2+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch3
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch3+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch4
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch4+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch5
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch5+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch6
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch6+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch7
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch7+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch8
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch8+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch9
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch9+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch10
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch10+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch11
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch11+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch12
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch12+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch13
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch13+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch14
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch14+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch15
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch15+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch16
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch16+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch17
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch17+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch18
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch18+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch19
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch19+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch20
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch20+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch21
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch21+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch22
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch22+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch23
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch23+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch24
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch24+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch25
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch25+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch26
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch26+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch27
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch27+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch28
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch28+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch29
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch29+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch30
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch30+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch31
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch31+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch32
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch32+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch33
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch33+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch34
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch34+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch35
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch35+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch36
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch36+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch37
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch37+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch38
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch38+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch39
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch39+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch40
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch40+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch41
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch41+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch42
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch42+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch43
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch43+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch44
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch44+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch45
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch45+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch46
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch46+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch47
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch47+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch48
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch48+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch49
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch49+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_Batch50
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """"+ISSI_Batch+ISSI_Batch50+"""" ,ISSI_Batch)
    #define public compileCounter = compileCounter+1
  #endif

  #ifdef ISSI_BatchNotify
    #if (compileCounter == 0)
      #pragma error "NO setup has been compiled"
    #endif

    #if (compileCounter == 1)
      #pragma error "1 setup has been compiled"
    #endif

    #if (compileCounter >= 2)
      #pragma error str(compileCounter)+" setups have been compiled"
    #endif
  #endif
#endif

#ifdef ISSI_Remark
[ISSI App]
#endif
#ifdef ISSI_AppVersion
  #if (ISSI_AppVersion == "")
    #ifdef ISSI_AppVersionMayor
      #if (ISSI_AppVersionMayor == 0)
        #define ISSI_AppVersionMayor "0"
      #endif
    #else
      #define ISSI_AppVersionMayor "0"
    #endif

    #ifdef ISSI_AppVersionMinor
      #if (ISSI_AppVersionMayor == 0)
        #define ISSI_AppVersionMinor "0"
      #endif
    #else
      #define ISSI_AppVersionMinor "0"
    #endif

    #ifdef ISSI_AppVersionRelease
      #if (ISSI_AppVersionRelease == 0)
        #define ISSI_AppVersionRelease "0"
      #endif
    #else
      #define ISSI_AppVersionRelease "0"
    #endif

    #ifdef ISSI_AppVersionBuild
      #if (ISSI_AppVersionBuild == 0)
        #define ISSI_AppVersionBuild "0"
      #endif
    #else
      #define ISSI_AppVersionBuild "0"
    #endif

    #define ISSI_AppVersion str(ISSI_AppVersionMayor)+"."+str(ISSI_AppVersionMinor)+"."+str(ISSI_AppVersionRelease)+"."+str(ISSI_AppVersionBuild)
  #endif
#else
  #ifdef ISSI_AppVersionMayor
    #if (ISSI_AppVersionMayor == 0)
      #define ISSI_AppVersionMayor "0"
    #endif
  #else
    #define ISSI_AppVersionMayor "0"
  #endif

  #ifdef ISSI_AppVersionMinor
    #if (ISSI_AppVersionMayor == 0)
      #define ISSI_AppVersionMinor "0"
    #endif
  #else
    #define ISSI_AppVersionMinor "0"
  #endif

  #ifdef ISSI_AppVersionRelease
    #if (ISSI_AppVersionRelease == 0)
      #define ISSI_AppVersionRelease "0"
    #endif
  #else
    #define ISSI_AppVersionRelease "0"
  #endif

  #ifdef ISSI_AppVersionBuild
    #if (ISSI_AppVersionBuild == 0)
      #define ISSI_AppVersionBuild "0"
    #endif
  #else
    #define ISSI_AppVersionBuild "0"
  #endif

  #define ISSI_AppVersion str(ISSI_AppVersionMayor)+"."+str(ISSI_AppVersionMinor)+"."+str(ISSI_AppVersionRelease)+"."+str(ISSI_AppVersionBuild)
#endif

#ifdef ISSI_AppName
  #if (ISSI_AppName != "")
    #ifdef AppName
      #if (AppName == "")
        #define AppName ISSI_AppName
      #else
        #define ISSI_AppName AppName
      #endif
    #else
      #define AppName ISSI_AppName
    #endif
  #endif
#endif

#ifdef ISSI_AppVersion
  #if (ISSI_AppVersion != "")
    #ifdef AppVersion
      #if (AppVersion == "")
        #define AppVersion ISSI_AppVersion
      #else
        #define ISSI_AppVersion AppVersion
      #endif
    #else
      #define AppVersion ISSI_AppVersion
    #endif
  #else
    #undef ISSI_AppVersion
  #endif
#endif

#ifdef ISSI_AppPublisher
  #if (ISSI_AppPublisher != "")
    #ifdef AppPublisher
      #if (AppPublisher == "")
        #define AppPublisher ISSI_AppPublisher
      #else
        #define ISSI_AppPublisher AppPublisher
      #endif
    #else
      #define AppPublisher ISSI_AppPublisher
    #endif
  #else
    #undef ISSI_AppPublisher
  #endif
#endif

#ifdef ISSI_Remark
[ISSI Error Handling]
#endif

#ifdef ISSI_AssociateExt
  #if !defined (ISSI_AssociateProgram) || !defined (ISSI_AssociateName)
    #pragma error "ISSI ERROR : Invalid numer of defines in ISSI_AssociateExt (ISSI_AssociateProgram and/or ISSI_AssociateName not defined)"
  #endif
#endif

#ifdef ISSI_AppName
  #if !defined (ISSI_AppPublisher) || !defined (ISSI_AppVersion)
    #pragma error "ISSI ERROR : Invalid numer of defines in ISSI_AppName (ISSI_AppPublisher and/or ISSI_AppVersion not defined)"
  #endif
  #if ISSI_AppName == "" || ISSI_AppVersion == "" || ISSI_AppPublisher == ""
    #pragma error "ISSI ERROR : ISSI_AppName and/or ISSI_AppPublisher and/or ISSI_AppVersion defines cannot be empty"
  #endif
  #ifdef ISSI_AppStart
    #if ISSI_AppStart == ""
      #pragma error "ISSI ERROR : ISSI_AppName defined but ISSI_AppStart define cannot be empty"
    #endif
  #endif
#endif

#ifdef ISSI_AppIcon
  #if ISSI_AppIcon == ""
    #pragma error "ISSI ERROR : ISSI_AppIcon define cannot be empty"
  #endif
  #if !FileExists(ISSI_AppIcon)
    #pragma error "ISSI ERROR : ISSI_AppIcon file not found at "+ISSI_AppIcon
  #endif
#endif

#ifdef ISSI_Update
  #if !defined (ISSI_UpdateTitle)
    #pragma error "ISSI ERROR : Invalid numer of defines in ISSI_Update (ISSI_UpdateTitle not defined)"
  #endif
  #if ISSI_Update == ""
    #pragma error "ISSI ERROR : ISSI_Update define cannot be empty"
  #endif
#endif

#ifdef ISSI_ScriptBackup
  #if !defined (ISSI_ScriptBackup_Key)
    #pragma error "ISSI ERROR : Invalid numer of defines in ISSI_ScriptBackup (ISSI_ScriptBackup_Key not defined)"
  #endif
  #if ISSI_ScriptBackup == ""
    #pragma error "ISSI ERROR : ISSI_ScriptBackup define cannot be empty"
  #endif
  #if !FileExists(SourcePath+"\"+ISSI_ScriptBackup)
    #pragma error "ISSI ERROR : ISSI_ScriptBackup file not found at "+SourcePath+"\"+ISSI_ScriptBackup
  #endif
#endif

#ifdef ISSI_ScreenSaver
  #if ISSI_ScreenSaver == ""
    #pragma error "ISSI ERROR : ISSI_ScreenSaver define cannot be empty"
  #endif
  #if !FileExists(ISSI_ScreenSaver)
    #pragma error "ISSI ERROR : ISSI_ScreenSaver file not found at "+ISSI_ScreenSaver
  #endif
#endif

#ifdef ISSI_Image
  #if ISSI_Image == ""
    #pragma error "ISSI ERROR : ISSI_Image define cannot be empty"
  #endif
  #if !FileExists(ISSI_Image)
    #pragma error "ISSI ERROR : ISSI_Image file not found at "+ISSI_Image
  #endif
#endif

#ifdef ISSI_PlayWav
  #if ISSI_PlayWav == ""
    #pragma error "ISSI ERROR : ISSI_PlayWav define cannot be empty"
  #endif
  #if !FileExists(ISSI_PlayWav)
    #pragma error "ISSI ERROR : ISSI_PlayWav file not found at "+ISSI_PlayWav
  #endif
#endif

#ifdef ISSI_PlayMidi
  #if ISSI_PlayMidi == ""
    #pragma error "ISSI ERROR : ISSI_PlayMidi define cannot be empty"
  #endif
  #if !FileExists(ISSI_PlayMidi)
    #pragma error "ISSI ERROR : ISSI_PlayMidi file not found at "+ISSI_PlayMidi
  #endif
#endif

#if defined ISSI_DownLoad_URL || defined ISSI_DownLoad_Title
  #if !defined (ISSI_DOWNLOAD_DLL)
    #define ISSI_DOWNLOAD_DLL ISSI_IncludePath+"Include\isxdl\isxdl.dll"
  #endif
  #if !defined (ISSI_DOWNLOAD_TITLE)|| !defined (ISSI_DOWNLOAD_DLL)|| !defined (ISSI_DOWNLOAD_Title)
    #pragma error "ISSI ERROR : Invalid numer of defines in ISSI_DownLoad_URL (ISSI_DOWNLOAD_TITLE and/or ISSI_DOWNLOAD_DLL and/or ISSI_DOWNLOAD_Title not defined)"
  #endif
  #ifdef ISSI_DownLoad_DLL
    #if !FileExists(ISSI_DownLoad_DLL)
      #pragma error "ISSI ERROR : ISSI_DownLoad_DLL file not found at "+ISSI_DownLoad_DLL
    #endif
  #endif
#endif

#ifdef ISSI_UserInclude
  #if ISSI_UserInclude == ""
    #pragma error "ISSI ERROR : ISSI_UserInclude define cannot be empty"
  #endif
  #if ISSI_UserInclude != "no"
    #if !FileExists(ISSI_UserInclude)
    #pragma error "ISSI ERROR : ISSI_UserInclude file not found at "+ISSI_UserInclude
    #endif
  #endif
#endif

#ifdef ISSI_Splash
  #if ISSI_Splash == ""
    #pragma error "ISSI ERROR : ISSI_Splash define cannot be empty"
  #endif
  #if !FileExists(ISSI_Splash)
    #pragma error "ISSI ERROR : ISSI_Splash file not found at "+ISSI_Splash
  #endif
#endif

#ifdef ISSI_WizardSmallBitmapImage
  #if ISSI_WizardSmallBitmapImage == ""
    #pragma error "ISSI ERROR : ISSI_WizardSmallBitmapImage define cannot be empty"
  #endif
  #if !FileExists(ISSI_WizardSmallBitmapImage)
    #pragma error "ISSI ERROR : ISSI_WizardSmallBitmapImage file not found at "+ISSI_WizardSmallBitmapImage
  #endif
#endif

#ifdef ISSI_Remark
[ISSI Initialize]
#endif
#if VER < ISSI_CompilerVersion
  #error A more recent version of Inno Setup is required to compile this ISSI powered script
#endif

#if !defined(ISSI_IncludePath)
  #define ISSI_IncludePath ""
#endif

#ifdef ISSI_Debug
  #if ISSI_Debug == "AutoSave" || ISSI_Debug == "AutoSaveAndView"
    #if !defined ISSI_CONSTANTS
      #define ISSI_CONSTANTS "DMYYHMS"
    #endif
  #endif
#endif

#ifdef ISSI_About
  #if ISSI_About == "NameAndVersionDate"
    #if !defined ISSI_CONSTANTS
      #define ISSI_CONSTANTS "DMYYHMS"
    #endif
  #endif
#endif

#if defined ISSI_ConstantsSeperator
  #if ISSI_ConstantsSeperator == ""
    #define ISSI_ConstantsSeperator "-"
  #endif
#else
  #define ISSI_ConstantsSeperator "-"
#endif

#if defined ISSI_CONSTANTS
  #if ISSI_CONSTANTS == ""
    #define ISSI_CONSTANTS "DMYYHMS"
  #endif
#else
  #define ISSI_CONSTANTS "DMYYHMS"
#endif

#ifdef ISSI_Remark
[ISSI Compile Variables Time/Date (_issi.exe)]
#endif

#if !FileExists(AddBackslash(ISSI_IncludePath) + "Include\_issi.exe")
  #expr Exec(AddBackslash(CompilerPath)+"Compil32.exe /cc", """"+ISSI_IncludePath+"Include\issi_exe.iss""")
#else
  #if (ISSIexe_ExeVersion > GetFileVersion(AddBackslash(ISSI_IncludePath)+"Include\_issi.exe"))
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """" + ISSI_IncludePath + "Include\issi_exe.iss""")
  #endif
#endif

#expr Exec(ISSI_IncludePath+"Include\_issi.exe","/VERYSILENT")
#define ISSI_INILOCATION ISSI_IncludePath+"Include\_issi.ini"

#ifdef ISSI_Remark
[Constants]
#endif
#define ISSI_LONGYEAR           ReadIni(ISSI_INILOCATION, "ISSI", "issi_longyear")
#define ISSI_YEAR               ReadIni(ISSI_INILOCATION, "ISSI", "issi_year")
#define ISSI_MONTH              ReadIni(ISSI_INILOCATION, "ISSI", "issi_month")
#define ISSI_DAY                ReadIni(ISSI_INILOCATION, "ISSI", "issi_day")
#define ISSI_HOUR               ReadIni(ISSI_INILOCATION, "ISSI", "issi_hour")
#define ISSI_MINUTE             ReadIni(ISSI_INILOCATION, "ISSI", "issi_minute")
#define ISSI_SECOND             ReadIni(ISSI_INILOCATION, "ISSI", "issi_second")
#define ISSI_mysys              ReadIni(ISSI_INILOCATION, "ISSI", "issi_sys")
#define ISSI_mywin              ReadIni(ISSI_INILOCATION, "ISSI", "issi_win")
#define ISSI_mysrc              ReadIni(ISSI_INILOCATION, "ISSI", "issi_src")
#define ISSI_mysd               ReadIni(ISSI_INILOCATION, "ISSI", "issi_sd")
#define ISSI_mypf               ReadIni(ISSI_INILOCATION, "ISSI", "issi_pf")
#define ISSI_mypf32             ReadIni(ISSI_INILOCATION, "ISSI", "issi_pf32")
#define ISSI_mycf               ReadIni(ISSI_INILOCATION, "ISSI", "issi_cf")
#define ISSI_mycf32             ReadIni(ISSI_INILOCATION, "ISSI", "issi_cf32")
#define ISSI_mytmp              ReadIni(ISSI_INILOCATION, "ISSI", "issi_tmp")
#define ISSI_myfonts            ReadIni(ISSI_INILOCATION, "ISSI", "issi_fonts")
#define ISSI_mydao              ReadIni(ISSI_INILOCATION, "ISSI", "issi_dao")
#define ISSI_mygroup            ReadIni(ISSI_INILOCATION, "ISSI", "issi_group")
#define ISSI_mylocalappdata     ReadIni(ISSI_INILOCATION, "ISSI", "issi_localappdata")
#define ISSI_mysendto           ReadIni(ISSI_INILOCATION, "ISSI", "issi_sendto")
#define ISSI_myuserappdata      ReadIni(ISSI_INILOCATION, "ISSI", "issi_userappdata")
#define ISSI_mycommonappdata    ReadIni(ISSI_INILOCATION, "ISSI", "issi_commonappdata")
#define ISSI_myuserdesktop      ReadIni(ISSI_INILOCATION, "ISSI", "issi_userdesktop")
#define ISSI_mycommondesktop    ReadIni(ISSI_INILOCATION, "ISSI", "issi_commondesktop")
#define ISSI_myuserdocs         ReadIni(ISSI_INILOCATION, "ISSI", "issi_userdocs")
#define ISSI_mycommondocs       ReadIni(ISSI_INILOCATION, "ISSI", "issi_commondocs")
#define ISSI_myuserprograms     ReadIni(ISSI_INILOCATION, "ISSI", "issi_userprograms")
#define ISSI_mycommonprograms   ReadIni(ISSI_INILOCATION, "ISSI", "issi_commonprograms")
#define ISSI_myuserstartmenu    ReadIni(ISSI_INILOCATION, "ISSI", "issi_userstartmenu")
#define ISSI_mycommonstartmenu  ReadIni(ISSI_INILOCATION, "ISSI", "issi_commonstartmenu")
#define ISSI_myuserstartup      ReadIni(ISSI_INILOCATION, "ISSI", "issi_userstartup")
#define ISSI_mycommonstartup    ReadIni(ISSI_INILOCATION, "ISSI", "issi_commonstartup")
#define ISSI_myusertemplates    ReadIni(ISSI_INILOCATION, "ISSI", "issi_usertemplates")
#define ISSI_mycommontemplates  ReadIni(ISSI_INILOCATION, "ISSI", "issi_commontemplates")
#define ISSI_mycmd              ReadIni(ISSI_INILOCATION, "ISSI", "issi_cmd")
#define ISSI_mycomputername     ReadIni(ISSI_INILOCATION, "ISSI", "issi_computername")
#define ISSI_mygroupname        ReadIni(ISSI_INILOCATION, "ISSI", "issi_groupname")
#define ISSI_mysysuserinfoname  ReadIni(ISSI_INILOCATION, "ISSI", "issi_sysuserinfoname")
#define ISSI_mysysuserinfoorg   ReadIni(ISSI_INILOCATION, "ISSI", "issi_sysuserinfoorg")
#define ISSI_mymemory           ReadIni(ISSI_INILOCATION, "ISSI", "issi_memory")

#if ISSI_ConstantsSeperator == "none"
  #define ISSI_ConstantsSeperator ""
#endif
#if ISSI_CONSTANTS == "DMYY"
  #define ISSI_CONSTANTS ISSI_Day+ISSI_ConstantsSeperator+ISSI_Month+ISSI_ConstantsSeperator+ISSI_LongYear
#endif
#if ISSI_CONSTANTS == "DMY"
  #define ISSI_CONSTANTS ISSI_Day+ISSI_ConstantsSeperator+ISSI_Month+ISSI_ConstantsSeperator+ISSI_Year
#endif
#if ISSI_CONSTANTS == "MDYY"
  #define ISSI_CONSTANTS ISSI_Month+ISSI_ConstantsSeperator+ISSI_Day+ISSI_ConstantsSeperator+ISSI_LongYear
#endif
#if ISSI_CONSTANTS == "MDY"
  #define ISSI_CONSTANTS ISSI_Month+ISSI_ConstantsSeperator+ISSI_Day+ISSI_ConstantsSeperator+ISSI_Year
#endif
#if ISSI_CONSTANTS == "YYMD"
  #define ISSI_CONSTANTS ISSI_LongYear+ISSI_ConstantsSeperator+ISSI_Month+ISSI_ConstantsSeperator+ISSI_day
#endif
#if ISSI_CONSTANTS == "YMD"
  #define ISSI_CONSTANTS ISSI_Year+ISSI_ConstantsSeperator+ISSI_Month+ISSI_ConstantsSeperator+ISSI_day
#endif
#if ISSI_CONSTANTS == "DMYYHMS"
  #define ISSI_CONSTANTS ISSI_Day+ISSI_ConstantsSeperator+ISSI_Month+ISSI_ConstantsSeperator+ISSI_LongYear+' - '+ISSI_Hour+':'+ISSI_Minute+':'+ISSI_Second
#endif
#if ISSI_CONSTANTS == "DMYHMS"
  #define ISSI_CONSTANTS ISSI_Day+ISSI_ConstantsSeperator+ISSI_Month+ISSI_ConstantsSeperator+ISSI_Year+' - '+ISSI_Hour+':'+ISSI_Minute+':'+ISSI_Second
#endif
#if ISSI_CONSTANTS == "MDYYHMS"
  #define ISSI_CONSTANTS ISSI_Month+ISSI_ConstantsSeperator+ISSI_Day+ISSI_ConstantsSeperator+ISSI_LongYear+' - '+ISSI_Hour+':'+ISSI_Minute+':'+ISSI_Second
#endif
#if ISSI_CONSTANTS == "MDYHHMS"
  #define ISSI_CONSTANTS ISSI_Month+ISSI_ConstantsSeperator+ISSI_Day+ISSI_ConstantsSeperator+ISSI_Year+' - '+ISSI_Hour+':'+ISSI_Minute+':'+ISSI_Second
#endif
#if ISSI_CONSTANTS == "YYMDHMS"
  #define ISSI_CONSTANTS ISSI_LongYear+ISSI_ConstantsSeperator+ISSI_Month+ISSI_ConstantsSeperator+ISSI_day+' - '+ISSI_Hour+':'+ISSI_Minute+':'+ISSI_Second
#endif
#if ISSI_CONSTANTS == "YMDHMS"
  #define ISSI_CONSTANTS ISSI_Year+ISSI_ConstantsSeperator+ISSI_Month+ISSI_ConstantsSeperator+ISSI_day+' - '+ISSI_Hour+':'+ISSI_Minute+':'+ISSI_Second
#endif

#ifdef ISSI_IncludePath
  #define ISSI_CurrentLanguageVersion ReadIni(ISSI_IncludePath+"Languages\_issi_English.isl", "CustomMessages", "IssiLanguageVersion","0x05010000")
#else
  #if FileExists(CompilerPath+"\_issi_English.isl")
    #define ISSI_CurrentLanguageVersion ReadIni(CompilerPath+"\Languages\_issi_English.isl", "CustomMessages", "IssiLanguageVersion","0x05010000")
  #else if FileExists(SourcePath+"\_issi_English.isl")
    #define ISSI_CurrentLanguageVersion ReadIni(SourcePath+"\Languages\_issi_English.isl", "CustomMessages", "IssiLanguageVersion","0x05010000")
  #endif
#endif

#if int(ISSI_CurrentLanguageVersion) < int(ISSI_LanguageVersion)
  #error A more recent version of the ISSI language file (found at: http://members.home.nl/albartus/inno) is required to use this version of ISSI
#endif

#if !defined(ISSI_UserInclude)
  #define ISSI_UserInclude "default"
#endif
#if ISSI_UserInclude != "no"
  #if ISSI_UserInclude == "default"
    #if ISSI_IncludePath != ""
      #if FileExists(ISSI_IncludePath+"_issi_user.txt")
        #emit "[ISSI UserInclude]"
        #include ISSI_IncludePath+"_issi_user.txt"
      #endif
    #else
      #if FileExists(SourcePath+"\_issi_user.txt")
        #emit "[ISSI UserInclude]"
        #include SourcePath+"\_issi_user.txt"
      #endif
      #if FileExists(CompilerPath+"\_issi_user.txt")
        #emit "[ISSI UserInclude]"
        #include CompilerPath+"\_issi_user.txt"
      #endif
    #endif
  #else
    #emit "[ISSI UserInclude]"
    #include ISSI_UserInclude
  #endif
#endif

#ifdef ISSI_Remark
[ISSI Generate Serial (_issi_serial.exe)]
#endif
#ifdef ISSI_GenerateSerial
  #if ISSI_GenerateSerial == ""
    #define ISSI_GenerateSerial 1
  #endif

  #ifndef ISSI_GenerateSerial_AppName
    #define ISSI_GenerateSerial_AppName "ISSI Serial Generator Output"
  #endif

  #define ISSI_GenerateSerial_Location ISSI_IncludePath+"Include\Serials.ini"

  #ifndef ISSI_GenerateSerial_Groups
    #define ISSI_GenerateSerial_Groups 5
  #endif

  #ifndef ISSI_GenerateSerial_GroupLength
    #define ISSI_GenerateSerial_GroupLength 5
  #endif

  #expr writeini ( ISSI_GenerateSerial_Location, "ISSI", "SerialGroups", ISSI_GenerateSerial_Groups )
  #expr writeini ( ISSI_GenerateSerial_Location, "ISSI", "SerialGroupLength", ISSI_GenerateSerial_GroupLength )
  #expr writeini ( ISSI_GenerateSerial_Location, "ISSI", "SerialAppName", ISSI_GenerateSerial_AppName )
  #define check readini ( ISSI_GenerateSerial_Location, "ISSI", "SerialCounter" )

  #if check == ""
    #expr writeini ( ISSI_GenerateSerial_Location, "ISSI", "SerialCounter", "0" )
  #endif

  #expr writeini ( ISSI_GenerateSerial_Location, "ISSI", "SerialRequest", ISSI_GenerateSerial )
  #define ISSI_GenerateSerial_Counter readini ( ISSI_GenerateSerial_Location, "ISSI", "SerialCounter" )
  #define ISSI_GenerateSerial_Counter str(int(ISSI_GenerateSerial_Counter)+1)
  #define ISSI_GenerateSerial_outputDir "Output\"+ISSI_GenerateSerial_AppName+"\Serial"+ISSI_GenerateSerial_Counter

  #if (ISSI_GenerateSerial_Counter == "")
    #define ISSI_GenerateSerial_Counter 0
  #endif

  #if !FileExists(AddBackslash(ISSI_IncludePath) + "Include\_issi_serial.exe")
    #expr Exec(AddBackslash(CompilerPath)+"Compil32.exe /cc", """"+ISSI_IncludePath+"Include\issi_serial.iss""")
  #else
    #define IssiExeVer = GetFileVersion(AddBackslash(ISSI_IncludePath)+"Include\_issi_serial.exe")

    #if (ISSIexe_SerialVersion > GetFileVersion(AddBackslash(ISSI_IncludePath)+"Include\_issi_serial.exe"))
       #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """" + ISSI_IncludePath + "Include\issi_serial.iss""")
    #endif
  #endif

  #expr Exec(ISSI_IncludePath+"Include\_issi_serial.exe","/VERYSILENT")
  #define ISSI_GenerateSerial_Counter readini ( ISSI_GenerateSerial_Location, "ISSI", "SerialCounter")
  #define ISSI_ini readini ( ISSI_GenerateSerial_Location, ISSI_GenerateSerial_AppName, "Serial"+str(int(ISSI_GenerateSerial_Counter)) )

  #define ISSI_GetMD5OfSerial ISSI_ini
#endif

#ifdef ISSI_Remark
[ PAD version 2.01 ]
#endif

#ifndef ISSI_PadIni
  #define ISSI_PadIni ISSI_IncludePath+"\Include\pad.ini"
#endif
  
#ifdef ISSI_Remark
[ WRITE PAD.INI ]
#endif

#ifdef ISSI_PadAppName

  #ifdef PAD_Company_Name
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Company_Name",PAD_Company_Name)
  #endif
  #ifdef PAD_Address_1
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Address_1",PAD_Address_1)
  #endif
  #ifdef PAD_Address_2
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Address_2",PAD_Address_2)
  #endif
  #ifdef PAD_City_Town
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"City_Town",PAD_City_Town)
  #endif
  #ifdef PAD_Zip_Postal_Code
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Zip_Postal_Code",PAD_Zip_Postal_Code)
  #endif
  #ifdef PAD_State_Province
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"State_Province",PAD_State_Province)
  #endif
  #ifdef PAD_Country
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Country",PAD_Country)
  #endif
  #ifdef PAD_Company_WebSite_URL
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Company_WebSite_URL",PAD_Company_WebSite_URL)
  #endif
  #ifdef PAD_Author_First_Name
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Author_First_Name",PAD_Author_First_Name)
  #endif
  #ifdef PAD_Author_Last_Name
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Author_Last_Name",PAD_Author_Last_Name)
  #endif
  #ifdef PAD_Author_Email
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Author_Email",PAD_Author_Email)
  #endif
  #ifdef PAD_Contact_First_Name
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Contact_First_Name",PAD_Contact_First_Name)
  #endif
  #ifdef PAD_Contact_Last_Name
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Contact_Last_Name",PAD_Contact_Last_Name)
  #endif
  #ifdef PAD_Contact_Email
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Contact_Email",PAD_Contact_Email)
  #endif
  #ifdef PAD_Sales_Email
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Sales_Email",PAD_Sales_Email)
  #endif
  #ifdef PAD_Support_Email
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Support_Email",PAD_Support_Email)
  #endif
  #ifdef PAD_General_Email
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"General_Email",PAD_General_Email)
  #endif
  #ifdef PAD_Sales_Phone
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Sales_Phone",PAD_Sales_Phone)
  #endif
  #ifdef PAD_Support_Phone
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Support_Phone",PAD_Support_Phone)
  #endif
  #ifdef PAD_General_Phone
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"General_Phone",PAD_General_Phone)
  #endif
  #ifdef PAD_Fax_Phone
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Fax_Phone",PAD_Fax_Phone)
  #endif
  #ifdef PAD_Program_Name
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Program_Name",PAD_Program_Name)
  #endif
  #ifdef PAD_Program_Version
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Program_Version",PAD_Program_Version)
  #endif
  #ifdef PAD_Program_Release_Month
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Program_Release_Month",PAD_Program_Release_Month)
  #endif
  #ifdef PAD_Program_Release_Day
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Program_Release_Day",PAD_Program_Release_Day)
  #endif
  #ifdef PAD_Program_Release_Year
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Program_Release_Year",PAD_Program_Release_Year)
  #endif
  #ifdef PAD_Program_Cost_Dollars
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Program_Cost_Dollars",PAD_Program_Cost_Dollars)
  #endif
  #ifdef PAD_Program_Cost_Other_Code
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Program_Cost_Other_Code",PAD_Program_Cost_Other_Code)
  #endif
  #ifdef PAD_Program_Cost_Other
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Program_Cost_Other",PAD_Program_Cost_Other)
  #endif
  #ifdef PAD_Program_Type
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Program_Type",PAD_Program_Type)
  #endif
  #ifdef PAD_Program_Release_Status
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Program_Release_Status",PAD_Program_Release_Status)
  #endif
  #ifdef PAD_Program_Install_Support
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Program_Install_Support",PAD_Program_Install_Support)
  #endif
  #ifdef PAD_Program_OS_Support
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Program_OS_Support",PAD_Program_OS_Support)
  #endif
  #ifdef PAD_Program_Language
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Program_Language",PAD_Program_Language)
  #endif
  #ifdef PAD_Program_Change_Info
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Program_Change_Info",PAD_Program_Change_Info)
  #endif
  #ifdef PAD_Specific_Category
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Specific_Category",PAD_Specific_Category)
  #endif
  #ifdef PAD_Program_Category_Class
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Program_Category_Class",PAD_Program_Category_Class)
  #endif
  #ifdef PAD_Program_Categories
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Program_Categories",PAD_Program_Categories)
  #endif
  #ifdef PAD_Program_System_Requirements
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Program_System_Requirements",PAD_Program_System_Requirements)
  #endif
  #ifdef PAD_Includes_JAVA_VM
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Includes_JAVA_VM",PAD_Includes_JAVA_VM)
  #endif
  #ifdef PAD_Includes_VB_Runtime
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Includes_VB_Runtime",PAD_Includes_VB_Runtime)
  #endif
  #ifdef PAD_Includes_DirectX
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Includes_DirectX",PAD_Includes_DirectX)
  #endif
  #ifdef PAD_Filename_Versioned
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Filename_Versioned",PAD_Filename_Versioned)
  #endif
  #ifdef PAD_Filename_Previous
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Filename_Previous",PAD_Filename_Previous)
  #endif
  #ifdef PAD_Filename_Generic
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Filename_Generic",PAD_Filename_Generic)
  #endif
  #ifdef PAD_Filename_Long
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Filename_Long",PAD_Filename_Long)
  #endif
  #ifdef PAD_File_Size_Bytes
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"File_Size_Bytes",PAD_File_Size_Bytes)
  #endif
  #ifdef PAD_File_Size_K
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"File_Size_K",PAD_File_Size_K)
  #endif
  #ifdef PAD_File_Size_MB
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"File_Size_MB",PAD_File_Size_MB)
  #endif
  #ifdef PAD_Expire_Count
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Expire_Count",PAD_Expire_Count)
  #endif
  #ifdef PAD_Has_Expire_Info
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Has_Expire_Info",PAD_Has_Expire_Info)
  #endif
  #ifdef PAD_Expire_Based_On
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Expire_Based_On",PAD_Expire_Based_On)
  #endif
  #ifdef PAD_Expire_Other_Info
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Expire_Other_Info",PAD_Expire_Other_Info)
  #endif
  #ifdef PAD_Expire_Month
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Expire_Month",PAD_Expire_Month)
  #endif
  #ifdef PAD_Expire_Day
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Expire_Day",PAD_Expire_Day)
  #endif
  #ifdef PAD_Expire_Year
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Expire_Year",PAD_Expire_Year)
  #endif
  #ifdef PAD_Keywords
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Keywords",PAD_Keywords)
  #endif
  #ifdef PAD_Char_Desc_45
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_45",PAD_Char_Desc_45)
  #endif
  #ifdef PAD_Char_Desc_80
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_80",PAD_Char_Desc_80)
  #endif
  #ifdef PAD_Char_Desc_250
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_250",PAD_Char_Desc_250)
  #endif
  #ifdef PAD_Char_Desc_450
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_450",PAD_Char_Desc_450)
  #endif
  #ifdef PAD_Char_Desc_2000
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_2000",PAD_Char_Desc_2000)
  #endif
  #ifdef PAD_Application_Info_URL
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Application_Info_URL",PAD_Application_Info_URL)
  #endif
  #ifdef PAD_Application_Order_URL
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Application_Order_URL",PAD_Application_Order_URL)
  #endif
  #ifdef PAD_Application_Screenshot_URL
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Application_Screenshot_URL",PAD_Application_Screenshot_URL)
  #endif
  #ifdef PAD_Application_Icon_URL
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Application_Icon_URL",PAD_Application_Icon_URL)
  #endif
  #ifdef PAD_Application_XML_File_URL
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Application_XML_File_URL",PAD_Application_XML_File_URL)
  #endif
  #ifdef PAD_Primary_Download_URL
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Primary_Download_URL",PAD_Primary_Download_URL)
  #endif
  #ifdef PAD_Secondary_Download_URL
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Secondary_Download_URL",PAD_Secondary_Download_URL)
  #endif
  #ifdef PAD_Additional_Download_URL_1
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Additional_Download_URL_1",PAD_Additional_Download_URL_1)
  #endif
  #ifdef PAD_Additional_Download_URL_2
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Additional_Download_URL_2",PAD_Additional_Download_URL_2)
  #endif
  #ifdef PAD_Distribution_Permissions
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Distribution_Permissions",PAD_Distribution_Permissions)
  #endif
  #ifdef PAD_EULA
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"EULA",PAD_EULA)
  #endif
  #ifdef PAD_ASP_FORM
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"ASP_FORM",PAD_ASP_FORM)
  #endif
  #ifdef PAD_ASP_Member
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"ASP_Member",PAD_ASP_Member)
  #endif
  #ifdef PAD_ASP_Member_Number
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"ASP_Member_Number",PAD_ASP_Member_Number)
  #endif
  #ifdef PAD_TPA_Member_ID
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"TPA_Member_ID",PAD_TPA_Member_ID)
  #endif
  #ifdef PAD_TPA_Trial_License_Type
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"TPA_Trial_License_Type",PAD_TPA_Trial_License_Type)
  #endif
  #ifdef PAD_ESC_Member_Number
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"ESC_Member_Number",PAD_ESC_Member_Number)
  #endif
  #ifdef PAD_MSN_IS_32bit
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"MSN_IS_32bit",PAD_MSN_IS_32bit)
  #endif
  #ifdef PAD_PADRING1
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"PADRING1",PAD_PADRING1)
  #endif
  #ifdef PAD_PADRING2
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"PADRING2",PAD_PADRING2)
  #endif
  #ifdef PAD_PADRING3
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"PADRING3",PAD_PADRING3)
  #endif
  #ifdef PAD_PADRING4
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"PADRING4",PAD_PADRING4)
  #endif
  #ifdef PAD_PADRING5
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"PADRING5",PAD_PADRING5)
  #endif
  #ifdef PAD_PADRING6
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"PADRING6",PAD_PADRING6)
  #endif
  #ifdef PAD_PADRING7
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"PADRING7",PAD_PADRING7)
  #endif
  #ifdef PAD_PADRING8
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"PADRING8",PAD_PADRING8)
  #endif
  #ifdef PAD_PADRING9
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"PADRING9",PAD_PADRING9)
  #endif
  #ifdef PAD_PADRING10
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"PADRING10",PAD_PADRING10)
  #endif
  #ifdef PAD_DELPHI_FORM
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_FORM",PAD_DELPHI_FORM)
  #endif
  #ifdef PAD_DELPHI_D1_URL
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_D1_URL",PAD_DELPHI_D1_URL)
  #endif
  #ifdef PAD_DELPHI_D2_URL
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_D2_URL",PAD_DELPHI_D2_URL)
  #endif
  #ifdef PAD_DELPHI_D3_URL
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_D3_URL",PAD_DELPHI_D3_URL)
  #endif
  #ifdef PAD_DELPHI_D4_URL
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_D4_URL",PAD_DELPHI_D4_URL)
  #endif
  #ifdef PAD_DELPHI_D5_URL
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_D5_URL",PAD_DELPHI_D5_URL)
  #endif
  #ifdef PAD_DELPHI_D6_URL
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_D6_URL",PAD_DELPHI_D6_URL)
  #endif
  #ifdef PAD_DELPHI_BCB1_URL
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_BCB1_URL",PAD_DELPHI_BCB1_URL)
  #endif
  #ifdef PAD_DELPHI_BCB3_URL
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_BCB3_URL",PAD_DELPHI_BCB3_URL)
  #endif
  #ifdef PAD_DELPHI_BCB4_URL
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_BCB4_URL",PAD_DELPHI_BCB4_URL)
  #endif
  #ifdef PAD_DELPHI_BCB5_URL
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_BCB5_URL",PAD_DELPHI_BCB5_URL)
  #endif
  #ifdef PAD_DELPHI_K1_URL
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_K1_URL",PAD_DELPHI_K1_URL)
  #endif
  #ifdef PAD_DELPHI_Type
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_Type",PAD_PAD_DELPHI_Type)
  #endif
  #ifdef PAD_DELPHI_Price
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_Price",PAD_PAD_DELPHI_Price)
  #endif
  #ifdef PAD_DELPHI_Source
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_Source",PAD_DELPHI_Source)
  #endif
  #ifdef PAD_DELPHI_File_Location
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_File_Location",PAD_DELPHI_File_Location)
  #endif
  #ifdef PAD_DELPHI_Download_URL
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_Download_URL",PAD_DELPHI_Download_URL)
  #endif
  #ifdef PAD_DELPHI_Version
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_Version",PAD_DELPHI_Version)
  #endif
  #ifdef PAD_DELPHI_Notes
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_Notes",PAD_DELPHI_Notes)
  #endif

  ;; Laguages Discriptions for PAD
  ;; Note that PAD does not oficially support all avalable languages
  ;; Extra languages: Dutch (Will be supported in next version)
  
  #ifdef PAD_Keywords_Arabic
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Arabic",PAD_Keywords_Arabic)
  #endif
  #ifdef PAD_Char_Desc_Arabic_45
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Arabic_45",PAD_Char_Desc_Arabic_45)
  #endif
  #ifdef PAD_Char_Desc_Arabic_80
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Arabic_80",PAD_Char_Desc_Arabic_80)
  #endif
  #ifdef PAD_Char_Desc_Arabic_250
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Arabic_250",PAD_Char_Desc_Arabic_250)
  #endif
  #ifdef PAD_Char_Desc_Arabic_450
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Arabic_450",PAD_Char_Desc_Arabic_450)
  #endif
  #ifdef PAD_Char_Desc_Arabic_2000
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Arabic_2000",PAD_Char_Desc_Arabic_2000)
  #endif

  #ifdef PAD_Keywords_ChineseSimplified
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Keywords_ChineseSimplified",PAD_Keywords_ChineseSimplified)
  #endif
  #ifdef PAD_Char_Desc_ChineseSimplified_45
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_ChineseSimplified_45",PAD_Char_Desc_ChineseSimplified_45)
  #endif
  #ifdef PAD_Char_Desc_ChineseSimplified_80
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_ChineseSimplified_80",PAD_Char_Desc_ChineseSimplified_80)
  #endif
  #ifdef PAD_Char_Desc_ChineseSimplified_250
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_ChineseSimplified_250",PAD_Char_Desc_ChineseSimplified_250)
  #endif
  #ifdef PAD_Char_Desc_ChineseSimplified_450
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_ChineseSimplified_450",PAD_Char_Desc_ChineseSimplified_450)
  #endif
  #ifdef PAD_Char_Desc_ChineseSimplified_2000
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_ChineseSimplified_2000",PAD_Char_Desc_ChineseSimplified_2000)
  #endif
  
  #ifdef PAD_Keywords_ChineseTraditional
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Keywords_ChineseTraditional",PAD_Keywords_ChineseTraditional)
  #endif
  #ifdef PAD_Char_Desc_ChineseTraditional_45
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_ChineseTraditional_45",PAD_Char_Desc_ChineseTraditional_45)
  #endif
  #ifdef PAD_Char_Desc_ChineseTraditional_80
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_ChineseTraditional_80",PAD_Char_Desc_ChineseTraditional_80)
  #endif
  #ifdef PAD_Char_Desc_ChineseTraditional_250
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_ChineseTraditional_250",PAD_Char_Desc_ChineseTraditional_250)
  #endif
  #ifdef PAD_Char_Desc_ChineseTraditional_450
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_ChineseTraditional_450",PAD_Char_Desc_ChineseTraditional_450)
  #endif
  #ifdef PAD_Char_Desc_ChineseTraditional_2000
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_ChineseTraditional_2000",PAD_Char_Desc_ChineseTraditional_2000)
  #endif
  
  #ifdef PAD_Keywords_Czech
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Czech",PAD_Keywords_Arabic)
  #endif
  #ifdef PAD_Char_Desc_Czech_45
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Czech_45",PAD_Char_Desc_Czech_45)
  #endif
  #ifdef PAD_Char_Desc_Czech_80
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Czech_80",PAD_Char_Desc_Czech_80)
  #endif
  #ifdef PAD_Char_Desc_Czech_250
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Czech_250",PAD_Char_Desc_Czech_250)
  #endif
  #ifdef PAD_Char_Desc_Czech_450
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Czech_450",PAD_Char_Desc_Czech_450)
  #endif
  #ifdef PAD_Char_Desc_Czech_2000
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Czech_2000",PAD_Char_Desc_Czech_2000)
  #endif
  
  #ifdef PAD_Keywords_Danish
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Danish",PAD_Keywords_Danish)
  #endif
  #ifdef PAD_Char_Desc_Danish_45
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Danish_45",PAD_Char_Desc_Danish_45)
  #endif
  #ifdef PAD_Char_Desc_Danish_80
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Danish_80",PAD_Char_Desc_Danish_80)
  #endif
  #ifdef PAD_Char_Desc_Danish_250
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Danish_250",PAD_Char_Desc_Danish_250)
  #endif
  #ifdef PAD_Char_Desc_Danish_450
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Danish_450",PAD_Char_Desc_Danish_450)
  #endif
  #ifdef PAD_Char_Desc_Danish_2000
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Danish_2000",PAD_Char_Desc_Danish_2000)
  #endif
  
  #ifdef PAD_Keywords_Dutch
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Dutch",PAD_Keywords_Dutch)
  #endif
  #ifdef PAD_Char_Desc_Dutch_45
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Dutch_45",PAD_Char_Desc_Dutch_45)
  #endif
  #ifdef PAD_Char_Desc_Dutch_80
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Dutch_80",PAD_Char_Desc_Dutch_80)
  #endif
  #ifdef PAD_Char_Desc_Dutch_250
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Dutch_250",PAD_Char_Desc_Dutch_250)
  #endif
  #ifdef PAD_Char_Desc_Dutch_450
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Dutch_450",PAD_Char_Desc_Dutch_450)
  #endif
  #ifdef PAD_Char_Desc_Dutch_2000
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Dutch_2000",PAD_Char_Desc_Dutch_2000)
  #endif
  
  #ifdef PAD_Keywords_Finnish
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Finnish",PAD_Keywords_Arabic)
  #endif
  #ifdef PAD_Char_Desc_Finnish_45
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Finnish_45",PAD_Char_Desc_Finnish_45)
  #endif
  #ifdef PAD_Char_Desc_Finnish_80
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Finnish_80",PAD_Char_Desc_Finnish_80)
  #endif
  #ifdef PAD_Char_Desc_Finnish_250
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Finnish_250",PAD_Char_Desc_Finnish_250)
  #endif
  #ifdef PAD_Char_Desc_Finnishc_450
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Finnish_450",PAD_Char_Desc_Finnish_450)
  #endif
  #ifdef PAD_Char_Desc_Finnish_2000
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Finnish_2000",PAD_Char_Desc_Finnish_2000)
  #endif
  
  #ifdef PAD_Keywords_French
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Keywords_French",PAD_Keywords_French)
  #endif
  #ifdef PAD_Char_Desc_French_45
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_French_45",PAD_Char_Desc_French_45)
  #endif
  #ifdef PAD_Char_Desc_French_80
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_French_80",PAD_Char_Desc_French_80)
  #endif
  #ifdef PAD_Char_Desc_French_250
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_French_250",PAD_Char_Desc_French_250)
  #endif
  #ifdef PAD_Char_Desc_French_450
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_French_450",PAD_Char_Desc_French_450)
  #endif
  #ifdef PAD_Char_Desc_French_2000
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_French_2000",PAD_Char_Desc_French_2000)
  #endif
  
  #ifdef PAD_Keywords_German
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Keywords_German",PAD_Keywords_German)
  #endif
  #ifdef PAD_Char_Desc_German_45
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_German_45",PAD_Char_Desc_German_45)
  #endif
  #ifdef PAD_Char_Desc_German_80
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_German_80",PAD_Char_Desc_German_80)
  #endif
  #ifdef PAD_Char_Desc_German_250
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_German_250",PAD_Char_Desc_German_250)
  #endif
  #ifdef PAD_Char_Desc_German_450
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_German_450",PAD_Char_Desc_German_450)
  #endif
  #ifdef PAD_Char_Desc_German_2000
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_German_2000",PAD_Char_Desc_German_2000)
  #endif
  
  #ifdef PAD_Keywords_Greek
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Greek",PAD_Keywords_Greek)
  #endif
  #ifdef PAD_Char_Desc_Greek_45
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Greek_45",PAD_Char_Desc_Greek_45)
  #endif
  #ifdef PAD_Char_Desc_Greek_80
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Greek_80",PAD_Char_Desc_Greek_80)
  #endif
  #ifdef PAD_Char_Desc_Greek_250
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Greek_250",PAD_Char_Desc_Greek_250)
  #endif
  #ifdef PAD_Char_Desc_Greek_450
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Greek_450",PAD_Char_Desc_Greek_450)
  #endif
  #ifdef PAD_Char_Desc_Greek_2000
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Greek_2000",PAD_Char_Desc_Greek_2000)
  #endif
  
  #ifdef PAD_Keywords_Hindi
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Hindi",PAD_Keywords_Hindi)
  #endif
  #ifdef PAD_Char_Desc_Hindi_45
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Hindi_45",PAD_Char_Desc_Hindi_45)
  #endif
  #ifdef PAD_Char_Desc_Hindi_80
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Hindi_80",PAD_Char_Desc_Hindi_80)
  #endif
  #ifdef PAD_Char_Desc_Hindi_250
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Hindi_250",PAD_Char_Desc_Hindi_250)
  #endif
  #ifdef PAD_Char_Desc_Hindi_450
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Hindi_450",PAD_Char_Desc_Hindi_450)
  #endif
  #ifdef PAD_Char_Desc_Hindi_2000
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Hindi_2000",PAD_Char_Desc_Hindi_2000)
  #endif
  
  #ifdef PAD_Keywords_Hungarian
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Hungarian",PAD_Keywords_Hungarian)
  #endif
  #ifdef PAD_Char_Desc_Hungarian_45
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Hungarian_45",PAD_Char_Desc_Hungarian_45)
  #endif
  #ifdef PAD_Char_Desc_Hungarian_80
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Hungarian_80",PAD_Char_Desc_Hungarian_80)
  #endif
  #ifdef PAD_Char_Desc_Hungarian_250
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Hungarian_250",PAD_Char_Desc_Hungarian_250)
  #endif
  #ifdef PAD_Char_Desc_Hungarian_450
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Hungarian_450",PAD_Char_Desc_Hungarian_450)
  #endif
  #ifdef PAD_Char_Desc_Hungarian_2000
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Hungarian_2000",PAD_Char_Desc_Hungarian_2000)
  #endif
  
  #ifdef PAD_Keywords_Italian
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Italian",PAD_Keywords_Italian)
  #endif
  #ifdef PAD_Char_Desc_Italian_45
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Italian_45",PAD_Char_Desc_Italian_45)
  #endif
  #ifdef PAD_Char_Desc_Italian_80
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Italian_80",PAD_Char_Desc_Italian_80)
  #endif
  #ifdef PAD_Char_Desc_Italian_250
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Italian_250",PAD_Char_Desc_Italian_250)
  #endif
  #ifdef PAD_Char_Desc_Italian_450
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Italian_450",PAD_Char_Desc_Italian_450)
  #endif
  #ifdef PAD_Char_Desc_Italian_2000
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Italian_2000",PAD_Char_Desc_Italian_2000)
  #endif
  
  #ifdef PAD_Keywords_Japanese
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Japanese",PAD_Keywords_Japanese)
  #endif
  #ifdef PAD_Char_Desc_Japanese_45
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Japanese_45",PAD_Char_Desc_Japanese_45)
  #endif
  #ifdef PAD_Char_Desc_Japanese_80
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Japanese_80",PAD_Char_Desc_Japanese_80)
  #endif
  #ifdef PAD_Char_Desc_Japanese_250
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Japanese_250",PAD_Char_Desc_Japanese_250)
  #endif
  #ifdef PAD_Char_Desc_Japanese_450
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Japanese_450",PAD_Char_Desc_Japanese_450)
  #endif
  #ifdef PAD_Char_Desc_Japanese_2000
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Japanese_2000",PAD_Char_Desc_Japanese_2000)
  #endif
  
  #ifdef PAD_Keywords_Korean
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Korean",PAD_Keywords_Korean)
  #endif
  #ifdef PAD_Char_Desc_Korean_45
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Korean_45",PAD_Char_Desc_Korean_45)
  #endif
  #ifdef PAD_Char_Desc_Korean_80
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Korean_80",PAD_Char_Desc_Korean_80)
  #endif
  #ifdef PAD_Char_Desc_Korean_250
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Korean_250",PAD_Char_Desc_Korean_250)
  #endif
  #ifdef PAD_Char_Desc_Korean_450
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Korean_450",PAD_Char_Desc_Korean_450)
  #endif
  #ifdef PAD_Char_Desc_Korean_2000
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Korean_2000",PAD_Char_Desc_Korean_2000)
  #endif
  
  #ifdef PAD_Keywords_Polish
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Polish",PAD_Keywords_Polish)
  #endif
  #ifdef PAD_Char_Desc_Polish_45
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Polish_45",PAD_Char_Desc_Polish_45)
  #endif
  #ifdef PAD_Char_Desc_Polish_80
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Polish_80",PAD_Char_Desc_Polish_80)
  #endif
  #ifdef PAD_Char_Desc_Polish_250
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Polish_250",PAD_Char_Desc_Polish_250)
  #endif
  #ifdef PAD_Char_Desc_Polish_450
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Polish_450",PAD_Char_Desc_Polish_450)
  #endif
  #ifdef PAD_Char_Desc_Polish_2000
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Polish_2000",PAD_Char_Desc_Polish_2000)
  #endif
  
  #ifdef PAD_Keywords_Portuguese
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Portuguese",PAD_Keywords_Portuguese)
  #endif
  #ifdef PAD_Char_Desc_Portuguese_45
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Portuguese_45",PAD_Char_Desc_Portuguese_45)
  #endif
  #ifdef PAD_Char_Desc_Portuguese_80
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Portuguese_80",PAD_Char_Desc_Portuguese_80)
  #endif
  #ifdef PAD_Char_Desc_Portuguese_250
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Portuguese_250",PAD_Char_Desc_Portuguese_250)
  #endif
  #ifdef PAD_Char_Desc_Portuguese_450
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Portuguese_450",PAD_Char_Desc_Portuguese_450)
  #endif
  #ifdef PAD_Char_Desc_Portuguese_2000
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Portuguese_2000",PAD_Char_Desc_Portuguese_2000)
  #endif
  
  #ifdef PAD_Keywords_Romanian
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Romanian",PAD_Keywords_Romanian)
  #endif
  #ifdef PAD_Char_Desc_Romanian_45
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Romanian_45",PAD_Char_Desc_Romanian_45)
  #endif
  #ifdef PAD_Char_Desc_Romanian_80
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Romanian_80",PAD_Char_Desc_Romanian_80)
  #endif
  #ifdef PAD_Char_Desc_Romanian_250
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Romanian_250",PAD_Char_Desc_Romanian_250)
  #endif
  #ifdef PAD_Char_Desc_Romanian_450
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Romanian_450",PAD_Char_Desc_Romanian_450)
  #endif
  #ifdef PAD_Char_Desc_Romanian_2000
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Romanian_2000",PAD_Char_Desc_Romanian_2000)
  #endif
  
  #ifdef PAD_Keywords_Russian
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Russian",PAD_Keywords_Russian)
  #endif
  #ifdef PAD_Char_Desc_Russian_45
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Russian_45",PAD_Char_Desc_Russian_45)
  #endif
  #ifdef PAD_Char_Desc_Russian_80
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Russian_80",PAD_Char_Desc_Russian_80)
  #endif
  #ifdef PAD_Char_Desc_Russian_250
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Russian_250",PAD_Char_Desc_Russian_250)
  #endif
  #ifdef PAD_Char_Desc_Russian_450
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Russian_450",PAD_Char_Desc_Russian_450)
  #endif
  #ifdef PAD_Char_Desc_Russian_2000
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Russian_2000",PAD_Char_Desc_Russian_2000)
  #endif
  
  #ifdef PAD_Keywords_Spanish
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Spanish",PAD_Keywords_Spanish)
  #endif
  #ifdef PAD_Char_Desc_Spanish_45
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Spanish_45",PAD_Char_Desc_Spanish_45)
  #endif
  #ifdef PAD_Char_Desc_Spanish_80
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Spanish_80",PAD_Char_Desc_Spanish_80)
  #endif
  #ifdef PAD_Char_Desc_Spanish_250
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Spanish_250",PAD_Char_Desc_Spanish_250)
  #endif
  #ifdef PAD_Char_Desc_Spanish_450
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Spanish_450",PAD_Char_Desc_Spanish_450)
  #endif
  #ifdef PAD_Char_Desc_Spanish_2000
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Spanish_2000",PAD_Char_Desc_Spanish_2000)
  #endif

  #ifdef PAD_Keywords_Swedish
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Swedish",PAD_Keywords_Swedish)
  #endif
  #ifdef PAD_Char_Desc_Swedish_45
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Swedish_45",PAD_Char_Desc_Swedish_45)
  #endif
  #ifdef PAD_Char_Desc_Swedish_80
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Swedish_80",PAD_Char_Desc_Swedish_80)
  #endif
  #ifdef PAD_Char_Desc_Swedish_250
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Swedish_250",PAD_Char_Desc_Swedish_250)
  #endif
  #ifdef PAD_Char_Desc_Swedish_450
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Swedish_450",PAD_Char_Desc_Swedish_450)
  #endif
  #ifdef PAD_Char_Desc_Swedish_2000
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Swedish_2000",PAD_Char_Desc_Swedish_2000)
  #endif
  
  #ifdef PAD_Keywords_Turkish
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Turkish",PAD_Keywords_Turkish)
  #endif
  #ifdef PAD_Char_Desc_Turkish_45
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Turkish_45",PAD_Char_Desc_Turkish_45)
  #endif
  #ifdef PAD_Char_Desc_Turkish_80
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Turkish_80",PAD_Char_Desc_Turkish_80)
  #endif
  #ifdef PAD_Char_Desc_Turkish_250
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Turkish_250",PAD_Char_Desc_Turkish_250)
  #endif
  #ifdef PAD_Char_Desc_Turkish_450
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Turkish_450",PAD_Char_Desc_Turkish_450)
  #endif
  #ifdef PAD_Char_Desc_Turkish_2000
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Turkish_2000",PAD_Char_Desc_Turkish_2000)
  #endif
  
  #ifdef PAD_Keywords_Urdu
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Urdu",PAD_Keywords_Urdu)
  #endif
  #ifdef PAD_Char_Desc_Urdu_45
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Urdu_45",PAD_Char_Desc_Urdu_45)
  #endif
  #ifdef PAD_Char_Desc_Urdu_80
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Urdu_80",PAD_Char_Desc_Urdu_80)
  #endif
  #ifdef PAD_Char_Desc_Urdu_250
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Urdu_250",PAD_Char_Desc_Urdu_250)
  #endif
  #ifdef PAD_Char_Desc_Urdu_450
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Urdu_450",PAD_Char_Desc_Urdu_450)
  #endif
  #ifdef PAD_Char_Desc_Urdu_2000
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Urdu_2000",PAD_Char_Desc_Urdu_2000)
  #endif
  
  #ifdef PAD_Keywords_Vietnamese
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Vietnamese",PAD_Keywords_Vietnamese)
  #endif
  #ifdef PAD_Char_Desc_Vietnamese_45
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Vietnamese_45",PAD_Char_Desc_Vietnamese_45)
  #endif
  #ifdef PAD_Char_Desc_Vietnamese_80
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Vietnamese_80",PAD_Char_Desc_Vietnamese_80)
  #endif
  #ifdef PAD_Char_Desc_Vietnamese_250
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Vietnamese_250",PAD_Char_Desc_Vietnamese_250)
  #endif
  #ifdef PAD_Char_Desc_Vietnamese_450
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Vietnamese_450",PAD_Char_Desc_Vietnamese_450)
  #endif
  #ifdef PAD_Char_Desc_Vietnamese_2000
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Vietnamese_2000",PAD_Char_Desc_Vietnamese_2000)
  #endif
  
  #ifdef PAD_Keywords_Yiddish
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Yiddish",PAD_Keywords_Yiddish)
  #endif
  #ifdef PAD_Char_Desc_Yiddish_45
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Yiddish_45",PAD_Char_Desc_Yiddish_45)
  #endif
  #ifdef PAD_Char_Desc_Yiddish_80
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Yiddish_80",PAD_Char_Desc_Yiddish_80)
  #endif
  #ifdef PAD_Char_Desc_Yiddish_250
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Yiddish_250",PAD_Char_Desc_Yiddish_250)
  #endif
  #ifdef PAD_Char_Desc_Yiddish_450
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Yiddish_450",PAD_Char_Desc_Yiddish_450)
  #endif
  #ifdef PAD_Char_Desc_Yiddish_2000
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Yiddish_2000",PAD_Char_Desc_Yiddish_2000)
  #endif

  ;; ISSI Specific
  
  #ifdef ISSI_padStyle
    #expr writeini (ISSI_PadIni,"PAD","PAD_Style",ISSI_padStyle)
  #endif
  
  #ifdef PAD_EULA_FileName
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"EULA_FileName",PAD_EULA_FileName)
  #endif
  #ifdef PAD_Distribution_Permissions_FileName
    #expr writeini (ISSI_PadIni,ISSI_PadAppName,"Distribution_Permissions_FileName",PAD_Distribution_Permissions_FileName)
  #endif
  
#endif

#ifdef ISSI_Remark
[ READ PAD.INI ]
#endif

#ifdef ISSI_PadAppName
  #ifdef ISSI_PadImport
    #define PAD_Company_Name readini (ISSI_PadIni,ISSI_PadAppName,"Company_Name")
    #define PAD_Address_2 readini (ISSI_PadIni,ISSI_PadAppName,"Address_1")
    #define PAD_Address_1 readini (ISSI_PadIni,ISSI_PadAppName,"Address_2")
    #define PAD_City_Town readini (ISSI_PadIni,ISSI_PadAppName,"City_Town")
    #define PAD_Zip_Postal_Code readini (ISSI_PadIni,ISSI_PadAppName,"Zip_Postal_Code")
    #define PAD_State_Province readini (ISSI_PadIni,ISSI_PadAppName,"State_Province")
    #define PAD_Country readini (ISSI_PadIni,ISSI_PadAppName,"Country")
    #define PAD_Company_WebSite_URL readini (ISSI_PadIni,ISSI_PadAppName,"Company_WebSite_URL")
    #define PAD_Author_First_Name readini (ISSI_PadIni,ISSI_PadAppName,"Author_First_Name")
    #define PAD_Author_Last_Name readini (ISSI_PadIni,ISSI_PadAppName,"Author_Last_Name")
    #define PAD_Author_Email readini (ISSI_PadIni,ISSI_PadAppName,"Author_Email")
    #define PAD_Contact_First_Name readini (ISSI_PadIni,ISSI_PadAppName,"Contact_First_Name")
    #define PAD_Contact_Last_Name readini (ISSI_PadIni,ISSI_PadAppName,"Contact_Last_Name")
    #define PAD_Contact_Email readini (ISSI_PadIni,ISSI_PadAppName,"Contact_Email")
    #define PAD_Sales_Email readini (ISSI_PadIni,ISSI_PadAppName,"Sales_Email")
    #define PAD_Support_Email readini (ISSI_PadIni,ISSI_PadAppName,"Support_Email")
    #define PAD_General_Email readini (ISSI_PadIni,ISSI_PadAppName,"General_Email")
    #define PAD_Sales_Phone readini (ISSI_PadIni,ISSI_PadAppName,"Sales_Phone")
    #define PAD_Support_Phone readini (ISSI_PadIni,ISSI_PadAppName,"Support_Phone")
    #define PAD_General_Phone readini (ISSI_PadIni,ISSI_PadAppName,"General_Phone")
    #define PAD_Fax_Phone readini (ISSI_PadIni,ISSI_PadAppName,"Fax_Phone")
    #define PAD_Program_Name readini (ISSI_PadIni,ISSI_PadAppName,"Program_Name")
    #define PAD_Program_Version readini (ISSI_PadIni,ISSI_PadAppName,"Program_Version")
    #define PAD_Program_Release_Month readini (ISSI_PadIni,ISSI_PadAppName,"Program_Release_Month")
    #define PAD_Program_Release_Day readini (ISSI_PadIni,ISSI_PadAppName,"Program_Release_Day")
    #define PAD_Program_Release_Year readini (ISSI_PadIni,ISSI_PadAppName,"Program_Release_Year")
    #define PAD_Program_Cost_Dollars readini (ISSI_PadIni,ISSI_PadAppName,"Program_Cost_Dollars")
    #define PAD_Program_Cost_Other_Code readini (ISSI_PadIni,ISSI_PadAppName,"Program_Cost_Other_Code")
    #define PAD_Program_Cost_Other readini (ISSI_PadIni,ISSI_PadAppName,"Program_Cost_Other")
    #define PAD_Program_Type readini (ISSI_PadIni,ISSI_PadAppName,"Program_Type")
    #define PAD_Program_Release_Status readini (ISSI_PadIni,ISSI_PadAppName,"Program_Release_Status")
    #define PAD_Program_Install_Support readini (ISSI_PadIni,ISSI_PadAppName,"Program_Install_Support")
    #define PAD_Program_OS_Support readini (ISSI_PadIni,ISSI_PadAppName,"Program_OS_Support")
    #define PAD_Program_Language readini (ISSI_PadIni,ISSI_PadAppName,"Program_Language")
    #define PAD_Program_Change_Info readini (ISSI_PadIni,ISSI_PadAppName,"Program_Change_Info")
    #define PAD_Program_Specific_Category readini (ISSI_PadIni,ISSI_PadAppName,"Specific_Category")
    #define PAD_Program_Category_Class readini (ISSI_PadIni,ISSI_PadAppName,"Program_Category_Class")
    #define PAD_Program_Categories readini (ISSI_PadIni,ISSI_PadAppName,"Program_Categories")
    #define PAD_Program_System_Requirements readini (ISSI_PadIni,ISSI_PadAppName,"Program_System_Requirements")
    #define PAD_Includes_JAVA_VM readini (ISSI_PadIni,ISSI_PadAppName,"Includes_JAVA_VM")
    #define PAD_Includes_VB_Runtime readini (ISSI_PadIni,ISSI_PadAppName,"Includes_VB_Runtime")
    #define PAD_Includes_DirectX readini (ISSI_PadIni,ISSI_PadAppName,"Includes_DirectX")
    #define PAD_Filename_Versioned readini (ISSI_PadIni,ISSI_PadAppName,"Filename_Versioned")
    #define PAD_Filename_Previous readini (ISSI_PadIni,ISSI_PadAppName,"Filename_Previous")
    #define PAD_Filename_Generic readini (ISSI_PadIni,ISSI_PadAppName,"Filename_Generic")
    #define PAD_Filename_Long readini (ISSI_PadIni,ISSI_PadAppName,"Filename_Long")
    #define PAD_File_Size_Bytes readini (ISSI_PadIni,ISSI_PadAppName,"File_Size_Bytes")
    #define PAD_File_Size_K readini (ISSI_PadIni,ISSI_PadAppName,"File_Size_K")
    #define PAD_File_Size_MB readini (ISSI_PadIni,ISSI_PadAppName,"File_Size_MB")
    #define PAD_Expire_Count readini (ISSI_PadIni,ISSI_PadAppName,"Expire_Count")
    #define PAD_Has_Expire_Info readini (ISSI_PadIni,ISSI_PadAppName,"Has_Expire_Info")
    #define PAD_Expire_Based_On readini (ISSI_PadIni,ISSI_PadAppName,"Expire_Based_On")
    #define PAD_Expire_Other_Info readini (ISSI_PadIni,ISSI_PadAppName,"Expire_Other_Info")
    #define PAD_Expire_Month readini (ISSI_PadIni,ISSI_PadAppName,"Expire_Month")
    #define PAD_Expire_Day readini (ISSI_PadIni,ISSI_PadAppName,"Expire_Day")
    #define PAD_Expire_Year readini (ISSI_PadIni,ISSI_PadAppName,"Expire_Year")
    #define PAD_Keywords readini (ISSI_PadIni,ISSI_PadAppName,"Keywords")
    #define PAD_Char_Desc_45 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_45")
    #define PAD_Char_Desc_80 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_80")
    #define PAD_Char_Desc_250 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_250")
    #define PAD_Char_Desc_450 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_450")
    #define PAD_Char_Desc_2000 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_2000")
    #define PAD_Application_Info_URL readini (ISSI_PadIni,ISSI_PadAppName,"Application_Info_URL")
    #define PAD_Application_Order_URL readini (ISSI_PadIni,ISSI_PadAppName,"Application_Order_URL")
    #define PAD_Application_Screenshot_URL readini (ISSI_PadIni,ISSI_PadAppName,"Application_Screenshot_URL")
    #define PAD_Application_Icon_URL readini (ISSI_PadIni,ISSI_PadAppName,"Application_Icon_URL")
    #define PAD_Application_XML_File_URL readini (ISSI_PadIni,ISSI_PadAppName,"Application_XML_File_URL")
    #define PAD_Primary_Download_URL readini (ISSI_PadIni,ISSI_PadAppName,"Primary_Download_URL")
    #define PAD_Secondary_Download_URL readini (ISSI_PadIni,ISSI_PadAppName,"Secondary_Download_URL")
    #define PAD_Additional_Download_URL_1 readini (ISSI_PadIni,ISSI_PadAppName,"Additional_Download_URL_1")
    #define PAD_Additional_Download_URL_2 readini (ISSI_PadIni,ISSI_PadAppName,"Additional_Download_URL_2")
    #define PAD_Distribution_Permissions readini (ISSI_PadIni,ISSI_PadAppName,"Distribution_Permissions")
    #define PAD_EULA readini (ISSI_PadIni,ISSI_PadAppName,"EULA")
    #define PAD_ASP_Member_Number readini (ISSI_PadIni,ISSI_PadAppName,"ASP_Member_Number")
    #define PAD_TPA_Member_ID readini (ISSI_PadIni,ISSI_PadAppName,"TPA_Member_ID")
    #define PAD_TPA_Trial_License_Type readini (ISSI_PadIni,ISSI_PadAppName,"TPA_Trial_License_Type")
    #define PAD_MSN_IS_32bit readini (ISSI_PadIni,ISSI_PadAppName,"MSN_IS_32bit")
    #define PAD_PADRING1 readini (ISSI_PadIni,ISSI_PadAppName,"PADRING1")
    #define PAD_PADRING2 readini (ISSI_PadIni,ISSI_PadAppName,"PADRING2")
    #define PAD_PADRING3 readini (ISSI_PadIni,ISSI_PadAppName,"PADRING3")
    #define PAD_PADRING4 readini (ISSI_PadIni,ISSI_PadAppName,"PADRING4")
    #define PAD_PADRING5 readini (ISSI_PadIni,ISSI_PadAppName,"PADRING5")
    #define PAD_PADRING6 readini (ISSI_PadIni,ISSI_PadAppName,"PADRING6")
    #define PAD_PADRING7 readini (ISSI_PadIni,ISSI_PadAppName,"PADRING7")
    #define PAD_PADRING8 readini (ISSI_PadIni,ISSI_PadAppName,"PADRING8")
    #define PAD_PADRING9 readini (ISSI_PadIni,ISSI_PadAppName,"PADRING9")
    #define PAD_PADRING10 readini (ISSI_PadIni,ISSI_PadAppName,"PADRING10")
    #define PAD_DELPHI_FORM readini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_FORM")
    #define PAD_DELPHI_D1_URL readini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_D1_URL")
    #define PAD_DELPHI_D2_URL readini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_D2_URL")
    #define PAD_DELPHI_D3_URL readini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_D3_URL")
    #define PAD_DELPHI_D4_URL readini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_D4_URL")
    #define PAD_DELPHI_D5_URL readini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_D5_URL")
    #define PAD_DELPHI_D6_URL readini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_D6_URL")
    #define PAD_DELPHI_BCB1_URL readini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_BCB1_URL")
    #define PAD_DELPHI_BCB3_URL readini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_BCB3_URL")
    #define PAD_DELPHI_BCB4_URL readini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_BCB4_URL")
    #define PAD_DELPHI_BCB5_URL readini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_BCB5_URL")
    #define PAD_DELPHI_K1_URL readini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_K1_URL")
    #define PAD_DELPHI_Type readini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_Type")
    #define PAD_DELPHI_Price readini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_Price")
    #define PAD_DELPHI_Source readini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_Source")
    #define PAD_DELPHI_File_Location readini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_File_Location")
    #define PAD_DELPHI_Link_URL readini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_Link_URL")
    #define PAD_DELPHI_Download_URL readini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_Download_URL")
    #define PAD_DELPHI_Version readini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_Version")
    #define PAD_DELPHI_Notes readini (ISSI_PadIni,ISSI_PadAppName,"DELPHI_Notes")
    
    ;; PAD Languages (Not all languages are supported)
    #define PAD_Keywords_Arabic readini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Arabic")
    #if PAD_Keywords_Arabic != ""
      #define PAD_Char_Desc_Arabic_45 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Arabic_45")
      #define PAD_Char_Desc_Arabic_80 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Arabic_80")
      #define PAD_Char_Desc_Arabic_250 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Arabic_250")
      #define PAD_Char_Desc_Arabic_450 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Arabic_450")
      #define PAD_Char_Desc_Arabic_2000 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Arabic_2000")
    #endif

    #define PAD_Keywords_ChineseSimplified readini (ISSI_PadIni,ISSI_PadAppName,"Keywords_ChineseSimplified")
    #if PAD_Keywords_ChineseSimplified != ""
      #define PAD_Char_Desc_ChineseSimplified_45 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_ChineseSimplified_45")
      #define PAD_Char_Desc_ChineseSimplified_80 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_ChineseSimplified_80")
      #define PAD_Char_Desc_ChineseSimplified_250 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_ChineseSimplified_250")
      #define PAD_Char_Desc_ChineseSimplified_450 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_ChineseSimplified_450")
      #define PAD_Char_Desc_ChineseSimplified_2000 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_ChineseSimplified_2000")
    #endif
    
    #define PAD_Keywords_ChineseTraditional readini (ISSI_PadIni,ISSI_PadAppName,"Keywords_ChineseTraditional")
    #if PAD_Keywords_ChineseTraditional != ""
      #define PAD_Char_Desc_ChineseTraditional_45 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_ChineseTraditional_45")
      #define PAD_Char_Desc_ChineseTraditional_80 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_ChineseTraditional_80")
      #define PAD_Char_Desc_ChineseTraditional_250 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_ChineseTraditional_250")
      #define PAD_Char_Desc_ChineseTraditional_450 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_ChineseTraditional_450")
      #define PAD_Char_Desc_ChineseTraditional_2000 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_ChineseTraditional_2000")
    #endif
    
    #define PAD_Keywords_Czech readini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Czech")
    #if PAD_Keywords_Czech != ""
      #define PAD_Char_Desc_Czech_45 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Czech_45")
      #define PAD_Char_Desc_Czech_80 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Czech_80")
      #define PAD_Char_Desc_Czech_250 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Czech_250")
      #define PAD_Char_Desc_Czech_450 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Czech_450")
      #define PAD_Char_Desc_Czech_2000 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Czech_2000")
    #endif
    
    #define PAD_Keywords_Danish readini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Danish")
    #if PAD_Keywords_PAD_Danish != ""
      #define PAD_Char_Desc_Danish_45 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Danish_45")
      #define PAD_Char_Desc_Danish_80 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Danish_80")
      #define PAD_Char_Desc_Danish_250 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Danish_250")
      #define PAD_Char_Desc_Danish_450 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Danish_450")
      #define PAD_Char_Desc_Danish_2000 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Danish_2000")
    #endif
    
    #define PAD_Keywords_Dutch readini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Dutch")
    #if PAD_Keywords_Dutch != ""
      #define PAD_Char_Desc_Dutch_45 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Dutch_45")
      #define PAD_Char_Desc_Dutch_80 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Dutch_80")
      #define PAD_Char_Desc_Dutch_250 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Dutch_250")
      #define PAD_Char_Desc_Dutch_450 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Dutch_450")
      #define PAD_Char_Desc_Dutch_2000 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Dutch_2000")
    #endif
    
    #define PAD_Keywords_Finnish readini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Finnish")
    #if PAD_Keywords_Finnish != ""
      #define PAD_Char_Desc_Finnish_45 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Finnish_45")
      #define PAD_Char_Desc_Finnish_80 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Finnish_80")
      #define PAD_Char_Desc_Finnish_250 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Finnish_250")
      #define PAD_Char_Desc_Finnish_450 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Finnish_450")
      #define PAD_Char_Desc_Finnish_2000 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Finnish_2000")
    #endif
    
    #define PAD_Keywords_French readini (ISSI_PadIni,ISSI_PadAppName,"Keywords_French")
    #if PAD_Keywords_French != ""
      #define PAD_Char_Desc_French_45 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_French_45")
      #define PAD_Char_Desc_French_80 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_French_80")
      #define PAD_Char_Desc_French_250 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_French_250")
      #define PAD_Char_Desc_French_450 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_French_450")
      #define PAD_Char_Desc_French_2000 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_French_2000")
    #endif
    
    #define PAD_Keywords_German readini (ISSI_PadIni,ISSI_PadAppName,"Keywords_German")
    #if PAD_Keywords_German != ""
      #define PAD_Char_Desc_German_45 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_German_45")
      #define PAD_Char_Desc_German_80 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_German_80")
      #define PAD_Char_Desc_German_250 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_German_250")
      #define PAD_Char_Desc_German_450 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_German_450")
      #define PAD_Char_Desc_German_2000 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_German_2000")
    #endif
    
    #define PAD_Keywords_Greek readini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Greek")
    #if PAD_Keywords_Greek != ""
      #define PAD_Char_Desc_Greek_45 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Greek_45")
      #define PAD_Char_Desc_Greek_80 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Greek_80")
      #define PAD_Char_Desc_Greek_250 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Greek_250")
      #define PAD_Char_Desc_Greek_450 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Greek_450")
      #define PAD_Char_Desc_Greek_2000 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Greek_2000")
    #endif
    
    #define PAD_Keywords_Hindi readini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Hindi")
    #if PAD_Keywords_Hindi != ""
      #define PAD_Char_Desc_Hindi_45 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Hindi_45")
      #define PAD_Char_Desc_Hindi_80 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Hindi_80")
      #define PAD_Char_Desc_Hindi_250 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Hindi_250")
      #define PAD_Char_Desc_Hindi_450 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Hindi_450")
      #define PAD_Char_Desc_Hindi_2000 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Hindi_2000")
    #endif
    
    #define PAD_Keywords_Hungarian readini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Hungarian")
    #if PAD_Keywords_Hungarian != ""
      #define PAD_Char_Desc_Hungarian_45 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Hungarian_45")
      #define PAD_Char_Desc_Hungarian_80 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Hungarian_80")
      #define PAD_Char_Desc_Hungarian_250 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Hungarian_250")
      #define PAD_Char_Desc_Hungarian_450 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Hungarian_450")
      #define PAD_Char_Desc_Hungarian_2000 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Hungarian_2000")
    #endif
    
    #define PAD_Keywords_Italian readini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Italian")
    #if PAD_Keywords_Italian != ""
      #define PAD_Char_Desc_Italian_45 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Italian_45")
      #define PAD_Char_Desc_Italian_80 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Italian_80")
      #define PAD_Char_Desc_Italian_250 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Italian_250")
      #define PAD_Char_Desc_Italian_450 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Italian_450")
      #define PAD_Char_Desc_Italian_2000 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Italian_2000")
    #endif
    
    #define PAD_Keywords_Arabic readini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Arabic")
    #if PAD_Keywords_Arabic != ""
      #define PAD_Char_Desc_Arabic_45 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Arabic_45")
      #define PAD_Char_Desc_Arabic_80 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Arabic_80")
      #define PAD_Char_Desc_Arabic_250 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Arabic_250")
      #define PAD_Char_Desc_Arabic_450 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Arabic_450")
      #define PAD_Char_Desc_Arabic_2000 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Arabic_2000")
    #endif
    
    #define PAD_Keywords_Japanese readini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Japanese")
    #if PAD_Keywords_Japanese != ""
      #define PAD_Char_Desc_Japanese_45 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Japanese_45")
      #define PAD_Char_Desc_Japanese_80 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Japanese_80")
      #define PAD_Char_Desc_Japanese_250 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Japanese_250")
      #define PAD_Char_Desc_Japanese_450 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Japanese_450")
      #define PAD_Char_Desc_Japanese_2000 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Japanese_2000")
    #endif
    
    #define PAD_Keywords_Korean readini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Korean")
    #if PAD_Keywords_Korean != ""
      #define PAD_Char_Desc_Korean_45 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Korean_45")
      #define PAD_Char_Desc_Korean_80 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Korean_80")
      #define PAD_Char_Desc_Korean_250 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Korean_250")
      #define PAD_Char_Desc_Korean_450 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Korean_450")
      #define PAD_Char_Desc_Korean_2000 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Korean_2000")
    #endif
    
    #define PAD_Keywords_Polish readini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Polish")
    #if PAD_Keywords_Polish != ""
      #define PAD_Char_Desc_Polish_45 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Polish_45")
      #define PAD_Char_Desc_Polish_80 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Polish_80")
      #define PAD_Char_Desc_Polish_250 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Polish_250")
      #define PAD_Char_Desc_Polish_450 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Polish_450")
      #define PAD_Char_Desc_Polish_2000 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Polish_2000")
    #endif
    
    #define PAD_Keywords_Portuguese readini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Portuguese")
    #if PAD_Keywords_Portuguese != ""
      #define PAD_Char_Desc_Portuguese_45 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Portuguese_45")
      #define PAD_Char_Desc_Portuguese_80 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Portuguese_80")
      #define PAD_Char_Desc_Portuguese_250 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Portuguese_250")
      #define PAD_Char_Desc_Portuguese_450 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Portuguese_450")
      #define PAD_Char_Desc_Portuguese_2000 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Portuguese_2000")
    #endif
    
    #define PAD_Keywords_Romanian readini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Romanian")
    #if PAD_Keywords_Romanian != ""
      #define PAD_Char_Desc_Romanian_45 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Romanian_45")
      #define PAD_Char_Desc_Romanian_80 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Romanianc_80")
      #define PAD_Char_Desc_Romanian_250 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Romanian_250")
      #define PAD_Char_Desc_Romanian_450 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Romanian_450")
      #define PAD_Char_Desc_Romanian_2000 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Romanian_2000")
    #endif
    
    #define PAD_Keywords_Spanish readini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Spanish")
    #if PAD_Keywords_Spanish != ""
      #define PAD_Char_Desc_Spanish_45 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Spanish_45")
      #define PAD_Char_Desc_Spanish_80 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Spanish_80")
      #define PAD_Char_Desc_Spanish_250 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Spanish_250")
      #define PAD_Char_Desc_Spanish_450 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Spanish_450")
      #define PAD_Char_Desc_Spanish_2000 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Spanish_2000")
    #endif
    
    #define PAD_Keywords_Swedish readini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Swedish")
    #if PAD_Keywords_Swedish != ""
      #define PAD_Char_Desc_Swedish_45 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Swedishc_45")
      #define PAD_Char_Desc_Swedish_80 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Swedish_80")
      #define PAD_Char_Desc_Swedish_250 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Swedish_250")
      #define PAD_Char_Desc_Swedishc_450 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Swedish_450")
      #define PAD_Char_Desc_Swedish_2000 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Swedish_2000")
    #endif
    
    #define PAD_Keywords_Turkish readini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Turkish")
    #if PAD_Keywords_Turkish != ""
      #define PAD_Char_Desc_Turkish_45 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Turkish_45")
      #define PAD_Char_Desc_Turkish_80 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Turkish_80")
      #define PAD_Char_Desc_Turkish_250 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Turkish_250")
      #define PAD_Char_Desc_Turkish_450 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Turkish_450")
      #define PAD_Char_Desc_Turkish_2000 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Turkish_2000")
    #endif
    
    #define PAD_Keywords_Urdu readini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Urdu")
    #if PAD_Keywords_Urdu != ""
      #define PAD_Char_Desc_Urdu_45 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Urdu_45")
      #define PAD_Char_Desc_Urdu_80 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Urdu_80")
      #define PAD_Char_Desc_Urdu_250 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Urdu_250")
      #define PAD_Char_Desc_Urdu_450 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Urdu_450")
      #define PAD_Char_Desc_Urdu_2000 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Urdu_2000")
    #endif
    
    #define PAD_Keywords_Vietnamese readini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Vietnamese")
    #if PAD_Keywords_Vietnamese != ""
      #define PAD_Char_Desc_Vietnamese_45 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Vietnamese_45")
      #define PAD_Char_Desc_Vietnamese_80 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Vietnamese_80")
      #define PAD_Char_Desc_Vietnamese_250 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Vietnamese_250")
      #define PAD_Char_Desc_Vietnamese_450 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Vietnamese_450")
      #define PAD_Char_Desc_Vietnamese_2000 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Vietnamese_2000")
    #endif
    
    #define PAD_Keywords_Yiddish readini (ISSI_PadIni,ISSI_PadAppName,"Keywords_Yiddish")
    #if PAD_Keywords_Yiddish != ""
      #define PAD_Char_Desc_Yiddish_45 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Yiddish_45")
      #define PAD_Char_Desc_Yiddish_80 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Yiddish_80")
      #define PAD_Char_Desc_Yiddish_250 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Yiddish_250")
      #define PAD_Char_Desc_Yiddish_450 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Yiddish_450")
      #define PAD_Char_Desc_Yiddish_2000 readini (ISSI_PadIni,ISSI_PadAppName,"Char_Desc_Yiddish_2000")
    #endif

    ;; ISSI Specific
    #define PAD_EULA_FileName readini (ISSI_PadIni,ISSI_PadAppName,"EULA_FileName")
    #define PAD_Distribution_Permissions_FileName readini (ISSI_PadIni,ISSI_PadAppName,"Distribution_Permissions")

  #endif
#endif

#ifdef ISSI_Remark
[ EXPORT PAD.XML ]
#endif

#ifdef ISSI_PadAppName
  #ifdef ISSI_PadExportFileName
    #ifdef ISSI_padStyle
      #expr writeini(ISSI_IncludePath+"\Include\pad.ini","PAD","PAD_Style",ISSI_padStyle)
    #else
      #expr writeini(ISSI_IncludePath+"\Include\pad.ini","PAD","PAD_Style","")
    #endif
    #expr writeini(ISSI_IncludePath+"\Include\pad.ini","PAD","PadIni",ISSI_PadIni)
    #expr writeini(ISSI_IncludePath+"\Include\pad.ini","PAD","PadAppName",ISSI_PadAppName)
    #expr writeini(ISSI_IncludePath+"\Include\pad.ini","PAD","PadExportFileName",ISSI_PadExportFileName)
    #expr writeini(ISSI_IncludePath+"\Include\pad.ini","PAD","PadExportFolder",ISSI_PadExportFolder)
    #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """" + ISSI_IncludePath + "Include\_issi_pad.iss""")
    #expr Exec(ISSI_IncludePath+"Include\_issi_pad.exe","/VERYSILENT")
  #endif
#endif

#ifdef ISSI_Remark
[ FTP UPLOAD ]
#endif

#define ISSI_FTP ISSI_IncludePath+"\Include\wput\wput"

#define Upload(str *ISSI_FTP_Source,str *ISSI_FTP_Target) /* macro declaration */ \
  Exec(ISSI_FTP,"-u -nc "+ISSI_FTP_Source+" ftp://"+ISSI_FTP_UserName+":"+ISSI_FTP_Password+"@"+ISSI_FTP_Server+":"+ISSI_FTP_Port+"/"+ISSI_FTP_Target)

#if defined ISSI_FTP_Source1 && defined ISSI_FTP_Target1
  #emit Upload(ISSI_FTP_Source1,ISSI_FTP_Target1)
#endif
#if defined ISSI_FTP_Source2 && defined ISSI_FTP_Target2
  #emit Upload(ISSI_FTP_Source2,ISSI_FTP_Target2)
#endif
#if defined ISSI_FTP_Source3 && defined ISSI_FTP_Target3
  #emit Upload(ISSI_FTP_Source3,ISSI_FTP_Target3)
#endif
#if defined ISSI_FTP_Source4 && defined ISSI_FTP_Target4
  #emit Upload(ISSI_FTP_Source4,ISSI_FTP_Target4)
#endif
#if defined ISSI_FTP_Source5 && defined ISSI_FTP_Target5
  #emit Upload(ISSI_FTP_Source5,ISSI_FTP_Target5)
#endif
#if defined ISSI_FTP_Source6 && defined ISSI_FTP_Target6
  #emit Upload(ISSI_FTP_Source6,ISSI_FTP_Target6)
#endif
#if defined ISSI_FTP_Source7 && defined ISSI_FTP_Target7
  #emit Upload(ISSI_FTP_Source7,ISSI_FTP_Target7)
#endif
#if defined ISSI_FTP_Source8 && defined ISSI_FTP_Target8
  #emit Upload(ISSI_FTP_Source8,ISSI_FTP_Target8)
#endif
#if defined ISSI_FTP_Source9 && defined ISSI_FTP_Target9
  #emit Upload(ISSI_FTP_Source9,ISSI_FTP_Target9)
#endif
#if defined ISSI_FTP_Source10 && defined ISSI_FTP_Target10
  #emit Upload(ISSI_FTP_Source10,ISSI_FTP_Target10)
#endif
#if defined ISSI_FTP_Source11 && defined ISSI_FTP_Target11
  #emit Upload(ISSI_FTP_Source11,ISSI_FTP_Target11)
#endif
#if defined ISSI_FTP_Source12 && defined ISSI_FTP_Target12
  #emit Upload(ISSI_FTP_Source12,ISSI_FTP_Target12)
#endif
#if defined ISSI_FTP_Source13 && defined ISSI_FTP_Target13
  #emit Upload(ISSI_FTP_Source13,ISSI_FTP_Target13)
#endif
#if defined ISSI_FTP_Source14 && defined ISSI_FTP_Target14
  #emit Upload(ISSI_FTP_Source14,ISSI_FTP_Target14)
#endif
#if defined ISSI_FTP_Source15 && defined ISSI_FTP_Target15
  #emit Upload(ISSI_FTP_Source15,ISSI_FTP_Target15)
#endif
#if defined ISSI_FTP_Source16 && defined ISSI_FTP_Target16
  #emit Upload(ISSI_FTP_Source16,ISSI_FTP_Target16)
#endif
#if defined ISSI_FTP_Source17 && defined ISSI_FTP_Target17
  #emit Upload(ISSI_FTP_Source17,ISSI_FTP_Target17)
#endif
#if defined ISSI_FTP_Source18 && defined ISSI_FTP_Target18
  #emit Upload(ISSI_FTP_Source18,ISSI_FTP_Target18)
#endif
#if defined ISSI_FTP_Source19 && defined ISSI_FTP_Target19
  #emit Upload(ISSI_FTP_Source19,ISSI_FTP_Target19)
#endif
#if defined ISSI_FTP_Source20 && defined ISSI_FTP_Target20
  #emit Upload(ISSI_FTP_Source20,ISSI_FTP_Target20)
#endif
#if defined ISSI_FTP_Source21 && defined ISSI_FTP_Target21
  #emit Upload(ISSI_FTP_Source21,ISSI_FTP_Target21)
#endif
#if defined ISSI_FTP_Source22 && defined ISSI_FTP_Target22
  #emit Upload(ISSI_FTP_Source22,ISSI_FTP_Target22)
#endif
#if defined ISSI_FTP_Source23 && defined ISSI_FTP_Target23
  #emit Upload(ISSI_FTP_Source23,ISSI_FTP_Target23)
#endif
#if defined ISSI_FTP_Source24 && defined ISSI_FTP_Target24
  #emit Upload(ISSI_FTP_Source24,ISSI_FTP_Target24)
#endif
#if defined ISSI_FTP_Source25 && defined ISSI_FTP_Target25
  #emit Upload(ISSI_FTP_Source25,ISSI_FTP_Target25)
#endif
#if defined ISSI_FTP_Source26 && defined ISSI_FTP_Target26
  #emit Upload(ISSI_FTP_Source26,ISSI_FTP_Target26)
#endif
#if defined ISSI_FTP_Source27 && defined ISSI_FTP_Target27
  #emit Upload(ISSI_FTP_Source27,ISSI_FTP_Target27)
#endif
#if defined ISSI_FTP_Source8 && defined ISSI_FTP_Target28
  #emit Upload(ISSI_FTP_Source28,ISSI_FTP_Target28)
#endif
#if defined ISSI_FTP_Source29 && defined ISSI_FTP_Target29
  #emit Upload(ISSI_FTP_Source29,ISSI_FTP_Target29)
#endif
#if defined ISSI_FTP_Source30 && defined ISSI_FTP_Target30
  #emit Upload(ISSI_FTP_Source30,ISSI_FTP_Target30)
#endif
#if defined ISSI_FTP_Source31 && defined ISSI_FTP_Target31
  #emit Upload(ISSI_FTP_Source31,ISSI_FTP_Target31)
#endif
#if defined ISSI_FTP_Source32 && defined ISSI_FTP_Target32
  #emit Upload(ISSI_FTP_Source32,ISSI_FTP_Target32)
#endif
#if defined ISSI_FTP_Source33 && defined ISSI_FTP_Target33
  #emit Upload(ISSI_FTP_Source33,ISSI_FTP_Target33)
#endif
#if defined ISSI_FTP_Source34 && defined ISSI_FTP_Target34
  #emit Upload(ISSI_FTP_Source34,ISSI_FTP_Target34)
#endif
#if defined ISSI_FTP_Source35 && defined ISSI_FTP_Target35
  #emit Upload(ISSI_FTP_Source35,ISSI_FTP_Target35)
#endif
#if defined ISSI_FTP_Source36 && defined ISSI_FTP_Target36
  #emit Upload(ISSI_FTP_Source36,ISSI_FTP_Target36)
#endif
#if defined ISSI_FTP_Source37 && defined ISSI_FTP_Target37
  #emit Upload(ISSI_FTP_Source37,ISSI_FTP_Target37)
#endif
#if defined ISSI_FTP_Source38 && defined ISSI_FTP_Target38
  #emit Upload(ISSI_FTP_Source38,ISSI_FTP_Target38)
#endif
#if defined ISSI_FTP_Source39 && defined ISSI_FTP_Target39
  #emit Upload(ISSI_FTP_Source39,ISSI_FTP_Target39)
#endif
#if defined ISSI_FTP_Source40 && defined ISSI_FTP_Target40
  #emit Upload(ISSI_FTP_Source40,ISSI_FTP_Target40)
#endif
#if defined ISSI_FTP_Source41 && defined ISSI_FTP_Target41
  #emit Upload(ISSI_FTP_Source41,ISSI_FTP_Target41)
#endif
#if defined ISSI_FTP_Source42 && defined ISSI_FTP_Target42
  #emit Upload(ISSI_FTP_Source42,ISSI_FTP_Target42)
#endif
#if defined ISSI_FTP_Source43 && defined ISSI_FTP_Target43
  #emit Upload(ISSI_FTP_Source43,ISSI_FTP_Target43)
#endif
#if defined ISSI_FTP_Source44 && defined ISSI_FTP_Target44
  #emit Upload(ISSI_FTP_Source44,ISSI_FTP_Target44)
#endif
#if defined ISSI_FTP_Source45 && defined ISSI_FTP_Target45
  #emit Upload(ISSI_FTP_Source45,ISSI_FTP_Target45)
#endif
#if defined ISSI_FTP_Source46 && defined ISSI_FTP_Target46
  #emit Upload(ISSI_FTP_Source46,ISSI_FTP_Target46)
#endif
#if defined ISSI_FTP_Source47 && defined ISSI_FTP_Target47
  #emit Upload(ISSI_FTP_Source47,ISSI_FTP_Target47)
#endif
#if defined ISSI_FTP_Source48 && defined ISSI_FTP_Target48
  #emit Upload(ISSI_FTP_Source48,ISSI_FTP_Target48)
#endif
#if defined ISSI_FTP_Source49 && defined ISSI_FTP_Target49
  #emit Upload(ISSI_FTP_Source49,ISSI_FTP_Target49)
#endif
#if defined ISSI_FTP_Source50 && defined ISSI_FTP_Target50
  #emit Upload(ISSI_FTP_Source50,ISSI_FTP_Target50)
#endif

#ifdef ISSI_Remark
[ISSI_GetMD5Of... (_issi_md5.exe)]
#endif
#if defined ISSI_GetMD5OfString || defined ISSI_GetMD5OfFile || defined ISSI_GetMD5OfSerial || defined ISSI_GetMD5OfPassword
  #ifdef ISSI_GetMD5OfString
    #expr writeini ( ISSI_INILOCATION, "ISSI", "issi_MD5string", ISSI_GetMD5OfString )
  #else
    #expr writeini ( ISSI_INILOCATION, "ISSI", "issi_MD5string", "" )
  #endif

  #ifdef ISSI_GetMD5OfFile
    #expr writeini ( ISSI_INILOCATION, "ISSI", "issi_MD5file", ISSI_GetMD5OfFile )
  #else
    #expr writeini ( ISSI_INILOCATION, "ISSI", "issi_MD5file", "" )
  #endif

  #ifdef ISSI_GetMD5OfSerial
    #expr writeini ( ISSI_INILOCATION, "ISSI", "issi_MD5serial", ISSI_GetMD5OfSerial )
  #else
    #expr writeini ( ISSI_INILOCATION, "ISSI", "issi_MD5serial", "" )
  #endif

  #ifdef ISSI_GetMD5OfPassword
    #expr writeini ( ISSI_INILOCATION, "ISSI", "issi_MD5password", ISSI_GetMD5OfPassword )
  #else
    #expr writeini ( ISSI_INILOCATION, "ISSI", "issi_MD5password", "" )
  #endif

  #if !FileExists(AddBackslash(ISSI_IncludePath) + "Include\_issi_md5.exe")
    #expr Exec(AddBackslash(CompilerPath)+"Compil32.exe /cc", """"+ISSI_IncludePath+"Include\issi_md5.iss""")
  #else
    #if (ISSIexe_MD5Version > GetFileVersion(AddBackslash(ISSI_IncludePath)+"Include\_issi_md5.exe"))
       #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """" + ISSI_IncludePath + "Include\issi_md5.iss""")
    #endif
  #endif

  #expr Exec(ISSI_IncludePath+"Include\_issi_md5.exe","/VERYSILENT")

  #ifdef ISSI_GetMD5OfSerial
    #define ISSI_GetMD5OfSerial ReadIni(ISSI_INILOCATION, "ISSI", "issi_MD5serial")
  #endif

  #ifdef ISSI_GetMD5OfPassword
    #define ISSI_GetMD5OfPassword ReadIni(ISSI_INILOCATION, "ISSI", "issi_MD5password")
  #endif

  #ifdef ISSI_GetMD5OfString
    #define ISSI_GetMD5OfString ReadIni(ISSI_INILOCATION, "ISSI", "issi_MD5string")
  #endif

  #ifdef ISSI_GetMD5OfFile
    #define ISSI_GetMD5OfFile ReadIni(ISSI_INILOCATION, "ISSI", "issi_MD5file")
  #endif
#endif
;; END ISSI_GetMD5Of...

#ifdef ISSI_Remark
[ISSI Generate serial textfile]
#endif
#ifdef ISSI_GenerateSerial
  #if !FileExists(AddBackslash(ISSI_IncludePath) + "Include\_issi_createdir.exe")
    #expr Exec(AddBackslash(CompilerPath)+"Compil32.exe /cc", """"+ISSI_IncludePath+"Include\issi_createdir.iss""")
  #else
    #if (ISSIexe_CreateDirVersion > GetFileVersion(AddBackSlash(ISSI_IncludePath)+"Include\_issi_createdir.exe"))
      #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """" + ISSI_IncludePath + "Include\issi_createdir.iss""")
    #endif
  #endif

  #define ISSI_GenerateSerial_txtoutputDir AddBackSlash(SourcePath)+"Output"
  #expr writeini ( ISSI_INILOCATION, "ISSI", "issi_CreateDir", ISSI_GenerateSerial_txtoutputDir )
  #expr Exec(ISSI_IncludePath+"Include\_issi_createdir.exe","/VERYSILENT")

  #define ISSI_GenerateSerial_txtoutputDir AddBackSlash(SourcePath)+"Output\"+ISSI_GenerateSerial_AppName
  #define ISSI_GenerateSerial_txtoutputFile ISSI_GenerateSerial_txtoutputDir+"\Serial"+ISSI_GenerateSerial_Counter+".txt"
  #expr writeini ( ISSI_INILOCATION, "ISSI", "issi_CreateDir", ISSI_GenerateSerial_txtoutputDir )
  #expr Exec(ISSI_IncludePath+"Include\_issi_createdir.exe","/VERYSILENT")

  #expr writeini ( ISSI_GenerateSerial_txtoutputFile, "Serial Key", "Serial", ISSI_ini )
#endif

#ifdef ISSI_CreateDir
  #if !FileExists(AddBackslash(ISSI_IncludePath) + "Include\_issi_createdir.exe")
    #expr Exec(AddBackslash(CompilerPath)+"Compil32.exe /cc", """"+ISSI_IncludePath+"Include\issi_createdir.iss""")
  #else
    #if (ISSIexe_CreateDirVersion > GetFileVersion(AddBackslash(ISSI_IncludePath)+"Include\_issi_createdir.exe"))
      #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe /cc", """" + ISSI_IncludePath + "Include\issi_createdir.iss""")
    #endif
  #endif
  #expr writeini ( ISSI_INILOCATION, "ISSI", "issi_CreateDir", ISSI_CreateDir )
  #expr Exec(ISSI_IncludePath+"Include\_issi_createdir.exe","/VERYSILENT")
#endif

#ifdef ISSI_Remark
[ISSI INI IS CLEARED]
#endif
#if FileExists(ISSI_INILOCATION)
  #Pragma include DeleteFile(ISSI_INILOCATION)
#endif

#ifdef ISSI_Remark
[ISSI START: Actual start of generating a new script through ISPP]
#endif

#if defined ISSI_URL && defined ISSI_AppStart
  #if ISSI_URL != ""
    #pragma include WriteIni(ISSI_IncludePath+"website.url", "InternetShortcut", "URL",ISSI_URL)
  #endif
#endif

#ifdef ISSI_LanguagesShowAll
[LangOptions]
LanguageCodePage=0
#endif

[Code]
#ifdef ISSI_ScreenSaver
function getrundll32location(temp:string): String;
  begin
    if (fileExists(expandConstant('{sys}\rundll32.exe'))) then begin
      Result := expandConstant('{sys}');
    end
    if (fileExists(expandConstant('{win}\rundll32.exe'))) then begin
      Result := expandConstant('{win}');
    end
  end;
#endif

#ifdef ISSI_GetMD5OfPassword
  function CheckPassword(Password: String): Boolean;
  begin
    if (GetMD5OfString(Password)= expandConstant('{#ISSI_GetMD5OfPassword}')) then begin
      Result := True;
    end;
  end;
#endif

#ifdef ISSI_GetMD5OfSerial
  function CheckSerial(Serial: String): Boolean;
  begin
    if (GetMD5OfString(Serial)= expandConstant('{#ISSI_GetMD5OfSerial}')) then begin
      Result := True;
    end;
  end;
#endif

#ifdef ISSI_Image
  var
    BackgroundBitmapImage : TBitmapImage;
#endif

#ifdef ISSI_InnoBackwardCompatible
  #if VER > 0x05000000
    function InstShellExec(const Filename, Params: String; WorkingDir: String; const ShowCmd: Integer; var ErrorCode: Integer): Boolean;
    begin
      Result := ShellExec('open', Filename, Params, WorkingDir, ShowCmd, ewNoWait, ErrorCode);
    end;
  #else
    function ShellExec('open', const Filename, Params: String; WorkingDir: String; const ShowCmd: Integer; ewNoWait, var ErrorCode: Integer): Boolean;
    begin
      Result := InstShellExec(const Filename, Params, WorkingDir, ShowCmd, ErrorCode);
    end;
  #endif
#endif

#ifdef ISSI_WizardBitmapImage
  procedure InitializeWizard_WizardBitmapImage();
    var
      ISSI_WizardBitmap_X          : Integer;
      ISSI_WizardBitmap_TextWidth  : Integer;
      ISSI_WizardBitmap2_X         : Integer;
      ISSI_WizardBitmap2_TextWidth : Integer;
  begin
    ISSI_WizardBitmap_X                   := StrToInt(ExpandConstant('{#ISSI_WizardBitmapImage_x}'));
    ISSI_WizardBitmap_TextWidth           := 477 - ISSI_WizardBitmap_X;
    Wizardform.WizardBitmapImage.width    := ISSI_WizardBitmap_X;

  #if defined ISSI_WizardBitmapImage_Align
    Wizardform.WELCOMELABEL1.left         := 18;
    Wizardform.WELCOMELABEL2.left         := 18;
    Wizardform.WizardBitmapImage.left     := ISSI_WizardBitmap_TextWidth+18
  #else
    Wizardform.WELCOMELABEL1.left         := ISSI_WizardBitmap_X+18;
    Wizardform.WELCOMELABEL2.left         := ISSI_WizardBitmap_X+18;
  #endif

    Wizardform.WELCOMELABEL1.width        := ISSI_WizardBitmap_TextWidth-18;
    Wizardform.WELCOMELABEL2.width        := ISSI_WizardBitmap_TextWidth-18;
    ISSI_WizardBitmap2_X                  := StrToInt(ExpandConstant('{#ISSI_WizardBitmapImage2_x}'));
    ISSI_WizardBitmap2_TextWidth          := 477 - ISSI_WizardBitmap2_X;
    Wizardform.WizardBitmapImage2.width   := ISSI_WizardBitmap2_X;

  #if defined ISSI_WizardBitmapImage2_Align
    Wizardform.FINISHEDHEADINGLABEL.left  := 18;
    Wizardform.FINISHEDLABEL.left         := 18;
    Wizardform.WizardBitmapImage2.left    := ISSI_WizardBitmap2_TextWidth+18
  #else
    Wizardform.FINISHEDHEADINGLABEL.left  := ISSI_WizardBitmap2_X+18;
    Wizardform.FINISHEDLABEL.left         := ISSI_WizardBitmap2_X+18;
  #endif

    Wizardform.FINISHEDHEADINGLABEL.width := ISSI_WizardBitmap2_TextWidth-18;
    Wizardform.FINISHEDLABEL.width        := ISSI_WizardBitmap2_TextWidth-18;
  end;
#endif

#ifdef ISSI_WizardSmallBitmapImage
  procedure InitializeWizard_WizardSmallBitmapImage();
    var
      ISSI_WizardSmallBitmap_X         : Integer;
      ISSI_WizardSmallBitmap_TextWidth : Integer;
  begin
    ISSI_WizardSmallBitmap_X                 := StrToInt(ExpandConstant('{#ISSI_WizardSmallBitmapImage_x}'));
    ISSI_WizardSmallBitmap_TextWidth         := 403 - ISSI_WizardSmallBitmap_X;
    Wizardform.WizardSmallBitmapImage.width  := ISSI_WizardSmallBitmap_X;
    Wizardform.WizardSmallBitmapImage.height := 58;

  #if defined ISSI_WizardSmallBitmapImage_Align
    Wizardform.WizardSmallBitmapImage.left   := 0;
    Wizardform.PageNameLabel.left            := ISSI_WizardSmallBitmap_X+18;
    Wizardform.PageDescriptionLabel.left     := ISSI_WizardSmallBitmap_X+24;
  #else
    Wizardform.WizardSmallBitmapImage.left   := 495 - ISSI_WizardSmallBitmap_X;
    Wizardform.PageNameLabel.left            := 18;
    Wizardform.PageDescriptionLabel.left     := 24;
  #endif

    Wizardform.PageNameLabel.width           := 495 - ISSI_WizardSmallBitmap_X -36;
    Wizardform.PageDescriptionLabel.width    := 495 - ISSI_WizardSmallBitmap_X -42;
  end;
#endif

#ifdef ISSI_IMAGE
  procedure InitializeWizardMYIMAGE();
    var
      BmpFileName           : String;
  begin
    BmpFileName := ExpandConstant('{tmp}\setup.bmp');

    if not FileExists(BmpFileName) then begin
      ExtractTemporaryFile(ExtractFileName(BmpFileName));
    end;

    BackgroundBitmapImage         := TBitmapImage.Create(MainForm);
    BackgroundBitmapImage.Align   := alClient;
    #ifdef ISSI_IMAGE_NoStretch
      BackgroundBitmapImage.Stretch := False;
    #else
      BackgroundBitmapImage.Stretch := True;
    #endif
    BackgroundBitmapImage.Bitmap.LoadFromFile(BmpFileName);
    BackgroundBitmapImage.Parent  := MainForm;
    WizardForm.Caption            := MainForm.Caption;
  end;
#endif

#ifdef ISSI_SPLASH
  #ifdef ISSI_SPLASH_CORNER
    var
      FormRegion : tHandle;

    function CreateRoundRectRgn(p1, p2, p3, p4, p5, p6: Integer): THandle;
      external 'CreateRoundRectRgn@gdi32 stdcall';
    function SetWindowRgn(hWnd: HWND; hRgn: THandle; bRedraw: Boolean): Integer;
      external 'SetWindowRgn@user32 stdcall';

    procedure ShapeForm(aForm : TForm; edgeSize : integer);
    begin
      FormRegion := CreateRoundRectRgn(0,0, aForm.width, aForm.height, edgeSize, edgeSize);
      SetWindowRgn(aForm.Handle, FormRegion, True);
    end;
  #endif
#endif

#ifdef ISSI_ABOUT
  #if defined (ISSI_AppName)
    #define ISSI_AboutAppName ISSI_AppName
  #else
    #define ISSI_AboutAppName SetupSetting("AppName")
  #endif

  #if defined (ISSI_AppVersion)
    #define ISSI_AboutAppVersion ISSI_AppVersion
  #else
    #define ISSI_AboutAppVersion SetupSetting("AppVersion")
  #endif

  #if defined (ISSI_AppPublisher)
    #define ISSI_AboutAppPublisher ISSI_AppPublisher
  #else
    #define ISSI_AboutAppPublisher SetupSetting("AppPublisher")
  #endif

  procedure AboutButtonOnClick(Sender: TObject);
    var
      myppAbout: String;
  begin
    #if ISSI_ABOUT == "NameAndVersion"
      myppAbout := ExpandConstant('{cm:NameAndVersion,{#ISSI_AboutAppName},{#ISSI_AboutAppVersion}}          '+#13+#13+'Copyright © {#ISSI_LongYear} {#ISSI_AboutAppPublisher}          ');
    #else
      #if ISSI_ABOUT == "NameAndVersionDate"
        myppAbout := ExpandConstant('{cm:NameAndVersion,{#ISSI_AboutAppName},{#ISSI_AboutAppVersion}}          '+#13+'({#ISSI_Constants})          '+#13+#13+'Copyright © {#ISSI_LongYear} {#ISSI_AboutAppPublisher}          ');
      #else
        #if ISSI_ABOUT == ""
          myppAbout := ExpandConstant('{cm:NameAndVersion,{#ISSI_AboutAppName},{#ISSI_AboutAppVersion}}          '+#13+#13+'Copyright © {#ISSI_LongYear} {#ISSI_AboutAppPublisher}          ');
        #else
          #if ISSI_ABOUT != ""
            myppAbout := ExpandConstant('{#ISSI_About}');
          #else
            myppAbout := ExpandConstant('{cm.issiAbout}');
          #endif
        #endif
      #endif
    #endif

    MsgBox(myppAbout, mbInformation, mb_Ok);
  end;

  procedure InitializeWizardMYABOUT();
    var
      AboutButton, CancelButton: TButton;
  begin
    CancelButton        := WizardForm.CancelButton;
    AboutButton         := TButton.Create(WizardForm);
    AboutButton.Top     := CancelButton.Top;
    AboutButton.Left    := WizardForm.ClientWidth - CancelButton.Left - CancelButton.Width;
    AboutButton.Width   := CancelButton.Width;
    AboutButton.Height  := CancelButton.Height;
    AboutButton.Caption := ExpandConstant('{cm:IssiTxtAboutButton}');
    AboutButton.OnClick := @AboutButtonOnClick;
    AboutButton.Parent  := WizardForm;
  end;
#endif

#if defined ISSI_URL
  procedure URLLabelOnClick(Sender: TObject);
    var
      Dummy   : Integer;
      myppURL : String;
  begin
    #if (ISSI_Url=="")
      myppURL := ExpandConstant('{cm:issiUrl}');
    #else
      myppURL := ExpandConstant('{#ISSI_Url}');
    #endif

    #if VER >= 0x05000100
      // VERSION 5.0.1 BETA or higher
      ShellExec('open',myppURL, '', '', SW_SHOWNORMAL, ewNoWait, Dummy);
    #else
      // VERSION 5.0.0 BETA or lower
      InstShellExec(myppURL, '', '', SW_SHOWNORMAL, Dummy);
    #endif
  end;

  procedure InitializeWizardMYURL();
    var
      ISSIButtonLeft : Integer;
      myppURLtext    : String;
      CancelButton   : TButton;
      URLLabel       : TNewStaticText;
  begin
    CancelButton        := WizardForm.CancelButton;
    ISSIButtonLeft      := WizardForm.ClientWidth - CancelButton.Left - CancelButton.Width;

    #if defined (ISSI_UrlText)
      #if (ISSI_UrlText=="")
        myppURLtext     := ExpandConstant('{cm:issiUrlText}');
      #else
        myppURLtext     := ExpandConstant('{#ISSI_UrlText}');
      #endif
    #else
      myppURLtext       := ExpandConstant('{#ISSI_Url}');
    #endif

    URLLabel            := TNewStaticText.Create(WizardForm);
    URLLabel.Top        := CancelButton.Top + CancelButton.Height - URLLabel.Height - 2;

    #ifdef ISSI_ABOUT
      URLLabel.Left     := ISSIButtonLeft + CancelButton.Width + 15;
    #else
      URLLabel.Left     := ISSIButtonLeft;
    #endif

    URLLabel.Caption    := myppURLtext;
    URLLabel.Font.Style := URLLabel.Font.Style + [fsUnderLine];
    URLLabel.Font.Color := clBlack;
    URLLabel.Cursor     := crHand;
    URLLabel.OnClick    := @URLLabelOnClick;
    URLLabel.Parent     := WizardForm;
  end;
#endif

#ifdef ISSI_UPDATE
  function GetPathInstalled( AppID: String ): String;
  begin
    Result := '';

    if not RegQueryStringValue( HKLM, 'Software\Microsoft\Windows\CurrentVersion\Uninstall\'+AppID+'_is1', 'Inno Setup: App Path', Result) then begin
      RegQueryStringValue( HKCU, 'Software\Microsoft\Windows\CurrentVersion\Uninstall\'+AppID+'_is1', 'Inno Setup: App Path', Result);
    end;
  end;

  function RemoveInstallShieldDependencies( AppID: String ): Boolean;
    var
      l_aoStrSubKeys : TArrayOfString;
      l_oStrSubKey   : String;
      l_oStrAppID    : String;
      l_oStrDisplay  : String;
      l_nLoop        : Integer;
      l_nResult      : Integer;
      l_nRootKey     : Integer;
  begin
    l_oStrAppID := AppID+'_is1';
    l_nRootKey  := 0;
    Result      := False;

    // Start to uninstall properly products using their uninstall informations
    for l_nRootKey := HKCU to HKLM do begin
      if RegGetSubkeyNames(l_nRootKey, 'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall', l_aoStrSubKeys) then begin
        for l_nLoop := 0 to GetArrayLength(l_aoStrSubKeys)-1 do begin
          // If not the AppID installed using Inno Setup
          if CompareText(l_aoStrSubKeys[l_nLoop], l_oStrAppID) <> 0 then begin
            l_oStrSubKey := 'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\'+l_aoStrSubKeys[l_nLoop];
            if RegQueryStringValue(l_nRootKey, l_oStrSubKey, 'DisplayName', l_oStrDisplay) then begin
              // If right DisplayName, case insensitive (get one more char to mismatch current "Software 3" from installed "Software 3D")
              if CompareText(TrimRight(Copy(l_oStrDisplay, 1, Length(AppID)+1)), AppID) = 0 then begin
                // Seems to be a concurrent AppID installed with something else than Inno Setup, let's uninstall it
                if RegQueryStringValue(l_nRootKey, l_oStrSubKey, 'UninstallString', l_oStrDisplay) then begin
                  StringChange(l_oStrDisplay, '"', '');
                  // Very silent uninstallation, let the place clean before we install ourself inplace
                  if Exec(l_oStrDisplay, '/uninst /SILENT', ExtractFilePath(l_oStrDisplay), SW_SHOW, ewWaitUntilTerminated, l_nResult) then begin
                    Result := True;
                  end;
                end;

                if RegDeleteKeyIncludingSubkeys(l_nRootKey, l_oStrSubKey ) then begin
                end;
              end;
            end;
          end;
        end;
      end;
    end;

    // Then finish by removing remaining Windows Installer features
    l_nRootKey := HKCR;
    if RegGetSubkeyNames(l_nRootKey, 'Installer\Products', l_aoStrSubKeys) then begin
      for l_nLoop := 0 to GetArrayLength(l_aoStrSubKeys)-1 do begin
        l_oStrSubKey := 'Installer\Products\'+l_aoStrSubKeys[l_nLoop];
        if RegQueryStringValue(l_nRootKey, l_oStrSubKey, 'ProductName', l_oStrDisplay) then begin
          // If right ProductName, case insensitive (get one more char to mismatch current "Software 3" from installed "Software 3D")
          if CompareText(TrimRight(Copy(l_oStrDisplay, 1, Length(AppID)+1)), AppID) = 0 then begin
            // Seems to be a concurrent AppID installed with something else than Inno Setup, let's uninstall it
            if RegQueryStringValue(l_nRootKey, l_oStrSubKey, 'PackageCode', l_oStrDisplay) then begin
              l_oStrDisplay := '{'+l_oStrDisplay+'}';
              // Very silent uninstallation, let the place clean before we install ourself inplace
              if Exec(ExpandConstant('{sys}\MsiExec.exe'), '/x '+l_oStrDisplay+' /qn', ExtractFilePath(ExpandConstant('{sys}\')), SW_SHOW, ewWaitUntilTerminated, l_nResult) then begin
                Result := True;
              end;
            end;

            l_oStrDisplay := '{'+l_aoStrSubKeys[l_nLoop]+'}';
            // Very silent uninstallation, let the place clean before we install ourself inplace
            if Exec(ExpandConstant('{sys}\MsiExec.exe'), '/x '+l_oStrDisplay+' /qn', ExtractFilePath(ExpandConstant('{sys}\')), SW_SHOW, ewWaitUntilTerminated, l_nResult) then begin
              Result := True;
            end;

            if RegDeleteKeyIncludingSubkeys(l_nRootKey, l_oStrSubKey ) then begin
            end;
          end;
        end;
      end;
    end;
  end;
#endif

#ifdef ISSI_DOWNLOAD_URL
  var
    ISTool           : String;
    ISToolDownloaded : Boolean;
    ISToolPathRead   : Boolean;

  function isxdl_Download(hWnd: Integer; URL, Filename: PChar): Integer;
    external 'isxdl_Download@files:isxdl.dll stdcall';
  function isxdl_SetOption(Option, Value: PChar): Integer;
    external 'isxdl_SetOption@files:isxdl.dll stdcall';
#endif

#ifdef ISSI_NetDetect

  #if ISSI_NetDetect == "2" || ISSI_NetDetect == "2.0"
    function IsDotNET20Detected(): boolean;
      var
        NetSuccess: boolean;
        NetInstall: cardinal;
    begin
      NetSuccess := RegQueryDWordValue(HKLM, 'SOFTWARE\Microsoft\NET Framework Setup\NDP\v2.0.50727', 'Install', NetInstall);
      Result := NetSuccess and (NetInstall = 1);
    end;
    #define ISSI_NetDetect = "2.0"
  #endif


  #if ISSI_NetDetect == "" || ISSI_NetDetect == "1.1"
    function IsDotNET11Detected(): boolean;
      var
        NetSuccess: boolean;
        NetInstall: cardinal;
    begin
      NetSuccess := RegQueryDWordValue(HKLM, 'SOFTWARE\Microsoft\NET Framework Setup\NDP\v1.1.4322', 'Install', NetInstall);
      if (NetSuccess = false) then
      begin
        NetSuccess := RegQueryDWordValue(HKLM, 'SOFTWARE\Microsoft\NET Framework Setup\NDP\v2.0.50727', 'Install', NetInstall);
      end
      Result := NetSuccess and (NetInstall = 1);
    end;
    #define ISSI_NetDetect = "1.1"
  #endif


#endif

#if defined(ISSI_SCRIPTBACKUP) || defined(ISSI_DOWNLOAD_URL) || defined(ISSI_UPDATE) || defined(ISSI_SPLASH) || defined(ISSI_NetDetect)
  function InitializeSetup(): Boolean;
    var
      issiScriptBackup : Boolean;
      issiDownload     : Boolean;
      issiUpdate       : Boolean;
      issiSplash       : Boolean;
      issiOriginal     : Boolean;
      issiNetDetect    : Boolean;

    #ifdef ISSI_SCRIPTBACKUP
      myfolder         : String;
      gosetup          : Boolean;
      mykey            : String;
      scriptname       : String;
    #endif

    #ifdef ISSI_UPDATE
      sPrevTitle       : String;
      sPrevPath        : String;
      sPrevID          : String;
    #endif

    #ifdef ISSI_SPLASH
      SplashImage      : TBitmapImage;
      SplashForm       : TForm;
      SplashFileName   : String;
      Splash_x         : String;
      Splash_y         : String;
      Splash_t         : String;
      I                : Integer;

      #ifdef ISSI_SPLASH_CORNER
        Splash_c       : String;
      #endif
    #endif
  begin
    issiUpdate       := true;
    issiDownload     := true;
    issiScriptBackup := true;
    issiSplash       := true;
    issiOriginal     := true;
    issiNetDetect    := true;

    #ifdef ISSI_UseMyInitializeSetup
      issiOriginal := ISSI_InitializeSetup();
    #endif

    #ifdef ISSI_SCRIPTBACKUP
      mykey      := ExpandConstant('{#ISSI_SCRIPTBACKUP_KEY}');
      scriptname := ExpandConstant('{#ISSI_SCRIPTBACKUP}');
      gosetup    := true;

      if Pos( mykey, GetCmdTail ) > 0 then begin
        issiScriptBackup := false;
        gosetup := false;
        MsgBox( ExpandConstant('{cm:IssiTxtScriptBackup}'), mbInformation, MB_OK );

      #if VER >= 0x05000500
        if BrowseForFolder( ExpandConstant('{cm:IssiTxtScriptSavePath,{#ISSI_SCRIPTBACKUP}}'), myfolder, true ) then begin
          // VERSION 5.0.5 BETA or higher
          try
            ExtractTemporaryFile(scriptname);

            if FileCopy( ExpandConstant('{tmp}\'+scriptname), myfolder+'\'+scriptname , false ) then begin
                MsgBox( ExpandConstant('{cm:IssiTxtFileExtractSuccess}'), mbInformation, MB_OK );
            end else begin
              MsgBox( ExpandConstant('{cm:IssiTxtFileCopyFailed}'), mbError, MB_OK );
            end;
          except
            MsgBox( ExpandConstant('{cm:IssiTxtFileExtractFailed}'), mbError, MB_OK );
          end
        end;
      #else
        if BrowseForFolder( ExpandConstant('{cm:IssiTxtScriptSavePath,{#ISSI_SCRIPTBACKUP}}'), myfolder, true ) then begin
          // VERSION 5.0.4 BETA or lower
          if ExtractTemporaryFile(scriptname) then begin
            if FileCopy( ExpandConstant('{tmp}\'+scriptname), myfolder+'\'+scriptname , false ) then begin
                MsgBox( ExpandConstant('{cm:IssiTxtFileExtractSuccess}'), mbInformation, MB_OK );
            end else begin
              MsgBox( ExpandConstant('{cm:IssiTxtFileCopyFailed}'), mbError, MB_OK );
            end;
          end else begin
            MsgBox( ExpandConstant('{cm:IssiTxtFileExtractFailed}'), mbError, MB_OK );
          end;
        end;
      #endif

      end;
    #endif

    #ifdef ISSI_NetDetect
      #if ISSI_NetDetect == "1.1"
      if not IsDotNET11Detected then begin
        MsgBox(ExpandConstant('{cm:IssiRequiresNet,1.1}'), mbInformation, MB_OK);
        issiNetDetect := false;
      end else begin
        issiNetDetect := true;
      end;
      #endif

      #if ISSI_NetDetect == "2.0"
      if not IsDotNET20Detected then begin
        MsgBox(ExpandConstant('{cm:IssiRequiresNet,2.0}'), mbInformation, MB_OK);
        issiNetDetect := false;
      end else begin
        issiNetDetect := true;
      end;
      #endif
    #endif

    #ifdef ISSI_UPDATE
      sPrevTitle := ExpandConstant('{#ISSI_UpdateTitle}');
      sPrevID    := ExpandConstant('{#ISSI_UPDATE}');
      sPrevPath  := GetPathInstalled(sPrevID);

      RemoveInstallShieldDependencies(sPrevID);

      if ( Length(sPrevPath) > 0 ) then begin
        #ifdef ISSI_UpdateVersion
          if ( fileExists(sPrevPath+'\_version.ini')) then begin
            if (GetIniString(sPrevID, 'version', '00000000', sPrevPath+'\_version.ini') < ExpandConstant('{#ISSI_UpdateVersion}')) then begin
            end else begin
              MsgBox(ExpandConstant('{cm:IssiTxtProdUpdated,{#ISSI_UpdateTitle}}'+#13+#13), mbInformation, MB_OK );
              issiUpdate := False;
            end
          end else
        #endif
      end else begin
        #if !defined(ISSI_UpdateOrInstall)
          MsgBox( ExpandConstant('{cm:IssiTxtProdNotInstalled,{#ISSI_UpdateTitle}}'+#13+#13), mbInformation, MB_OK );
          issiUpdate := False ;
        #endif
      end;
    #endif

    #ifdef ISSI_DOWNLOAD_URL
      ISTool           := GetPreviousData('{#ISSI_DOWNLOAD_TITLE}', '1');
      ISToolDownloaded := False;
      ISToolPathRead   := False;
    #endif

  #ifdef ISSI_SPLASH
    begin
      #ifdef ISSI_SPLASH_CORNER
        Splash_c     := ExpandConstant('{#ISSI_SPLASH_CORNER}');
      #endif
        Splash_x       := ExpandConstant('{#ISSI_SPLASH_X}');
        Splash_y       := ExpandConstant('{#ISSI_SPLASH_Y}');
        Splash_t       := ExpandConstant('{#ISSI_SPLASH_T}');
        SplashFileName := ExpandConstant('{tmp}\issi_splash.bmp');
        ExtractTemporaryFile(ExtractFileName(SplashFileName));
        SplashForm     := TForm.create(nil);
      with SplashForm do
      begin
        BorderStyle  := bsNone;
        Position     := poScreenCenter;
        ClientWidth  := StrToInt(Splash_x);
        ClientHeight := StrToInt(Splash_y);
      end;

      SplashImage := TBitmapImage.Create(SplashForm);
      with SplashImage do
      begin
        Bitmap.LoadFromFile(SplashFileName);
        Stretch := true;
        Align   := alClient;
        Parent  := SplashForm;
      end;

      with SplashForm do
      begin
        #ifdef ISSI_SPLASH_CORNER
          ShapeForm(SplashForm, (StrToInt(Splash_c)));
        #endif
        Show;
        Repaint;

        for I := 1 to ((StrToInt(Splash_t))) do
        begin
          Sleep(1000);
        end;
        Close;
        Free;

      end;
    end;
  #endif

    if ((issiUpdate=true) and (issiScriptBackup=true) and (issiOriginal=true) and (issiSplash=true) and (issiNetDetect=true)) then
      Result := True;
  end;
#endif

#ifdef ISSI_DOWNLOAD_URL
  function FDoISToolDownload(): Boolean;
    var
      hWnd     : Integer;
      URL      : String;
      FileName : String;
      ImgFileName : String;
  begin
    isxdl_SetOption('label', ExpandConstant('{cm:IssiTxtDownloadingProd,{#ISSI_DOWNLOAD_TITLE}}'));
    isxdl_SetOption('description', ExpandConstant('{cm:IssiTxtDownloadingPleaseWait,{#ISSI_DOWNLOAD_TITLE}}'));
    isxdl_SetOption('resume', 'false');
    hWnd     := StrToInt(ExpandConstant('{wizardhwnd}'));
    URL      := ExpandConstant('{#ISSI_DOWNLOAD_URL}');
    FileName := ExpandConstant('{tmp}\setup.exe');

    #ifdef ISSI_WizardImages
      try
      ImgFileName := ExpandConstant('{tmp}\issiWizSmallImage.bmp');
      if not FileExists(ImgFileName) then
        ExtractTemporaryFile(ExtractFileName(ImgFileName));
      isxdl_SetOption('smallwizardimage', ImgFileName);
      except
    #endif

    if isxdl_Download(hWnd, URL, FileName) <> 0 then begin
      ISToolDownloaded := True
    end else begin
      MsgBox( ExpandConstant('{cm:IssiTxtDownloadingFailed,{#ISSI_DOWNLOAD_TITLE}}'), mbError, mb_Ok);
    end;

    Result := True;
  end;

  function FScriptDlgPages(CurPage: Integer; BackClicked: Boolean): Boolean;
  begin
    if (not BackClicked and (CurPage = wpReady) and (ISTool = '1')) then begin
      Result := FDoISToolDownload()
    end else begin
      Result := True;
    end;
  end;

  function NextButtonClick(CurPage : Integer): Boolean;
    var
      issiOriginal : Boolean;
  begin

  #ifdef ISSI_UseMyNextButtonClick
    issiOriginal := ISSI_NextButtonClick(CurPage);
  #else
    issiOriginal := true;
  #endif

    Result := FScriptDlgPages(CurPage, False) and issiOriginal;
  end;

  function BackButtonClick(CurPage : Integer): Boolean;
    var
      issiOriginal : Boolean;
  begin

  #ifdef ISSI_UseMyBackButtonClick
    issiOriginal := ISSI_BackButtonClick(CurPage);
  #else
    issiOriginal := true;
  #endif

    Result := FScriptDlgPages(CurPage, True) and issiOriginal;
  end;
#endif

#ifdef ISSI_LicensePrint
  procedure PrintButtonClick(Sender : TObject);
    var
      WordpadLoc  : String;
      licenseText : String;
      RetCode     : Integer;
  begin
    if MsgBox( ExpandConstant('{cm:IssiTxtLicencePrintOnDefaultPrinter}'), mbConfirmation, MB_YESNO ) = IDYES then begin
      licenseText:=WizardForm.LicenseMemo.Text;
      SaveStringToFile(ExpandConstant('{tmp}\license.rtf'),licenseText,False);
      RegQueryStringValue( HKLM, 'SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\WORDPAD.EXE', '', WordpadLoc);
      StringChange( WordpadLoc, '%ProgramFiles%', ExpandConstant('{pf}') );
      StringChange( WordpadLoc, '"', '');

      if FileExists(ExpandConstant('{tmp}\license.rtf')) then begin
        #if VER >= 0x05000100
          if not Exec( WordPadLoc, ' /p ' + ExpandConstant('{tmp}\license.rtf'), ExpandConstant('{tmp}'), SW_HIDE, ewWaitUntilTerminated, RetCode ) then begin
        #else
          if not InstExec( WordPadLoc, ' /p ' + ExpandConstant('{tmp}\license.rtf'), ExpandConstant('{tmp}'), false, false, SW_HIDE, RetCode ) then begin
        #endif
            MsgBox( ExpandConstant('{cm:IssiTxtLicencePrintFailed}') + IntToStr(RetCode), mbError, mb_Ok)
          end;
      end else begin
        MsgBox( ExpandConstant('{cm:IssiTxtLicenceExtractFailed}'), mbError, mb_Ok);
      end;
    end;
  end;
#endif

#if defined(ISSI_WizardBitmapImage) || defined(ISSI_LicensePrint) || defined (ISSI_wpPassword) || defined (ISSI_wpUserInfo) || defined (ISSI_wpLicense) || defined (ISSI_wpInfoBefore) || defined (ISSI_wpSelectComponents) || defined (ISSI_wpSelectDir) || defined (ISSI_wpSelectProgramGroup) || defined (ISSI_wpSelectTasks) || defined (ISSI_wpReady) || defined (ISSI_wpPreparing) || defined (ISSI_wpInstalling) || defined (ISSI_wpInfoAfter) || defined (ISSI_ImagewpPassword) || defined (ISSI_ImagewpUserInfo) || defined (ISSI_ImagewpLicense) || defined (ISSI_ImagewpInfoBefore) || defined (ISSI_ImagewpSelectComponents) || defined (ISSI_ImagewpSelectDir) || defined (ISSI_ImagewpSelectProgramGroup) || defined (ISSI_ImagewpSelectTasks) || defined (ISSI_ImagewpReady) || defined (ISSI_ImagewpPreparing) || defined (ISSI_ImagewpInstalling) || defined (ISSI_ImagewpInfoAfter) || defined (ISSI_ImagewpWelcome) || defined (ISSI_ImagewpFinished)
  procedure CurPageChanged(CurPage: Integer);
    #if defined(ISSI_LicensePrint) || defined(ISSI_WizardBitmapImage)
    var
    #endif

    #ifdef ISSI_LicensePrint
      PrintButton : TButton;
    #endif

    #ifdef ISSI_WizardBitmapImage
      imageFile   : String;
    #endif
  begin
    #ifdef ISSI_UseMyCurPageChanged
      ISSI_CurPageChanged(CurPage);
    #endif

    #ifdef ISSI_ImagewpWelcome
      if CurPage=wpWelcome then begin
        if not FileExists('ImagewpWelcome.bmp') then begin
          ExtractTemporaryFile('ImagewpWelcome.bmp');
        end;

        BackgroundBitmapImage.Bitmap.LoadFromFile(expandConstant('{tmp}\ImagewpWelcome.bmp'));
      end;
    #endif

    #ifdef ISSI_ImagewpLicense
      if CurPage=wpLicense then begin
        if not FileExists('ImagewpLicense.bmp') then begin
          ExtractTemporaryFile('ImagewpLicense.bmp');
        end;

        BackgroundBitmapImage.Bitmap.LoadFromFile(expandConstant('{tmp}\ImagewpLicense.bmp'));
      end;
    #endif

    #ifdef ISSI_ImagewpPassword
      if CurPage=wpPassword then begin
        if not FileExists('ImagewpPassword.bmp') then begin
          ExtractTemporaryFile('ImagewpPassword.bmp');
        end;

        BackgroundBitmapImage.Bitmap.LoadFromFile(expandConstant('{tmp}\ImagewpPassword.bmp'));
      end;
    #endif

    #ifdef ISSI_ImagewpInfoBefore
      if CurPage=wpInfoBefore then begin
        if not FileExists('ImagewpInfoBefore.bmp') then begin
          ExtractTemporaryFile('wpInfoBefore.bmp');
        end;

        BackgroundBitmapImage.Bitmap.LoadFromFile(expandConstant('{tmp}\ImagewpInfoBefore.bmp'));
      end;
    #endif

    #ifdef ISSI_ImagewpUserInfo
      if CurPage=wpUserInfo then begin
        if not FileExists('ImagewpUserInfo.bmp') then begin
          ExtractTemporaryFile('ImagewpUserInfo.bmp');
        end;

        BackgroundBitmapImage.Bitmap.LoadFromFile(expandConstant('{tmp}\ImagewpUserInfo.bmp'));
      end;
    #endif

    #ifdef ISSI_ImagewpSelectDir
      if CurPage=wpSelectDir then begin
        if not FileExists('ImagewpSelectDir.bmp') then begin
          ExtractTemporaryFile('ImagewpSelectDir.bmp');
        end;

        BackgroundBitmapImage.Bitmap.LoadFromFile(expandConstant('{tmp}\ImagewpSelectDir.bmp'));
      end;
    #endif

    #ifdef ISSI_ImagewpSelectComponents
      if CurPage=wpSelectComponents then begin
        if not FileExists('ImagewpSelectComponents.bmp') then begin
          ExtractTemporaryFile('ImagewpSelectComponents.bmp');
        end;

        BackgroundBitmapImage.Bitmap.LoadFromFile(expandConstant('{tmp}\ImagewpSelectComponents.bmp'));
      end;
    #endif

    #ifdef ISSI_ImagewpSelectProgramGroup
      if CurPage=wpSelectProgramGroup then begin
        if not FileExists('ImagewpSelectProgramGroup.bmp') then begin
          ExtractTemporaryFile('ImagewpSelectProgramGroup.bmp');
        end;

        BackgroundBitmapImage.Bitmap.LoadFromFile(expandConstant('{tmp}\ImagewpSelectProgramGroup.bmp'));
      end;
    #endif

    #ifdef ISSI_ImagewpSelectTasks
      if CurPage=wpSelectTasks then begin
        if not FileExists('ImagewpSelectTasks.bmp') then begin
          ExtractTemporaryFile('ImagewpSelectTasks.bmp');
        end;

        BackgroundBitmapImage.Bitmap.LoadFromFile(expandConstant('{tmp}\ImagewpSelectTasks.bmp'));
      end;
    #endif

    #ifdef ISSI_ImagewpReady
      if CurPage=wpReady then begin
        if not FileExists('ImagewpReady.bmp') then begin
          ExtractTemporaryFile('ImagewpReady.bmp');
        end;

        BackgroundBitmapImage.Bitmap.LoadFromFile(expandConstant('{tmp}\ImagewpReady.bmp'));
      end;
    #endif

    #ifdef ISSI_ImagewpPreparing
      if CurPage=wpPreparing then begin
        if not FileExists('ImagewpPreparing.bmp') then begin
          ExtractTemporaryFile('ImagewpPreparing.bmp');
        end;

        BackgroundBitmapImage.Bitmap.LoadFromFile(expandConstant('{tmp}\ImagewpPreparing.bmp'));
      end;
    #endif

    #ifdef ISSI_ImagewpInstalling
      if CurPage=wpInstalling then begin
        if not FileExists('ImagewpInstalling.bmp') then begin
          ExtractTemporaryFile('ImagewpInstalling.bmp');
        end;

        BackgroundBitmapImage.Bitmap.LoadFromFile(expandConstant('{tmp}\ImagewpInstalling.bmp'));
      end;
    #endif

    #ifdef ISSI_ImagewpInfoAfter
      if CurPage=wpInfoAfter then begin
        if not FileExists('ImagewpInfoAfter.bmp') then begin
          ExtractTemporaryFile('ImagewpInfoAfter.bmp');
        end;

        BackgroundBitmapImage.Bitmap.LoadFromFile(expandConstant('{tmp}\ImagewpInfoAfter.bmp'));
      end;
    #endif

    #ifdef ISSI_ImagewpFinished
      if CurPage=wpFinished then begin
        if not FileExists('ImagewpFinished.bmp') then begin
          ExtractTemporaryFile('ImagewpFinished.bmp');
        end;

        BackgroundBitmapImage.Bitmap.LoadFromFile(expandConstant('{tmp}\ImagewpFinished.bmp'));
      end;
    #endif

    #ifdef ISSI_wpPassword
      if CurPage=wpPassword then begin
        if not FileExists('wpPassWord.bmp') then begin
          ExtractTemporaryFile('wpPassword.bmp');
        end;

        WizardForm.WizardSmallBitmapImage.Bitmap.LoadFromFile(expandConstant('{tmp}\wpPassword.bmp'));
      end;
    #endif

    #ifdef ISSI_wpUserInfo
      if CurPage=wpUserInfo then begin
        if not FileExists('wpUserInfo.bmp') then begin
          ExtractTemporaryFile('wpUserInfo.bmp');
        end;

        WizardForm.WizardSmallBitmapImage.Bitmap.LoadFromFile(expandConstant('{tmp}\wpUserInfo.bmp'));
      end;
    #endif

    #ifdef ISSI_wpLicense
      if CurPage=wpLicense then begin
        if not FileExists('wpLicense.bmp') then begin
          ExtractTemporaryFile('wpLicense.bmp');
        end;

        WizardForm.WizardSmallBitmapImage.Bitmap.LoadFromFile(expandConstant('{tmp}\wpLicense.bmp'));
      end;
    #endif

    #ifdef ISSI_wpInfoBefore
      if CurPage=wpInfoBefore then begin
        if not FileExists('wpInfoBefore.bmp') then begin
          ExtractTemporaryFile('wpInfoBefore.bmp');
        end;

        WizardForm.WizardSmallBitmapImage.Bitmap.LoadFromFile(expandConstant('{tmp}\wpInfoBefore.bmp'));
      end;
    #endif

    #ifdef ISSI_wpSelectComponents
      if CurPage=wpSelectComponents then begin
        if not FileExists('wpSelectComponents.bmp') then begin
          ExtractTemporaryFile('wpSelectComponents.bmp');
        end;

        WizardForm.WizardSmallBitmapImage.Bitmap.LoadFromFile(expandConstant('{tmp}\wpSelectComponents.bmp'));
      end;
    #endif

    #ifdef ISSI_wpSelectDir
      if CurPage=wpSelectDir then begin
        if not FileExists('wpSelectDir.bmp') then begin
          ExtractTemporaryFile('wpSelectDir.bmp');
        end;

        WizardForm.WizardSmallBitmapImage.Bitmap.LoadFromFile(expandConstant('{tmp}\wpSelectDir.bmp'));
      end;
    #endif

    #ifdef ISSI_wpSelectProgramGroup
      if CurPage=wpSelectProgramGroup then begin
        if not FileExists('wpSelectProgramGroup.bmp') then begin
          ExtractTemporaryFile('wpSelectProgramGroup.bmp');
        end;

        WizardForm.WizardSmallBitmapImage.Bitmap.LoadFromFile(expandConstant('{tmp}\wpSelectProgramGroup.bmp'));
      end;
    #endif

    #ifdef ISSI_wpSelectTasks
      if CurPage=wpSelectTasks then begin
        if not FileExists('wpSelectTasks.bmp') then begin
          ExtractTemporaryFile('wpSelectTasks.bmp');
        end;

        WizardForm.WizardSmallBitmapImage.Bitmap.LoadFromFile(expandConstant('{tmp}\wpSelectTasks.bmp'));
      end;
    #endif

    #ifdef ISSI_wpReady
      if CurPage=wpReady then begin
        if not FileExists('wpReady.bmp') then begin
          ExtractTemporaryFile('wpReady.bmp');
        end;

        WizardForm.WizardSmallBitmapImage.Bitmap.LoadFromFile(expandConstant('{tmp}\wpReady.bmp'));
      end;
    #endif

    #ifdef ISSI_wpPreparing
      if CurPage=wpPreparing then begin
        if not FileExists('wpPreparing.bmp') then begin
          ExtractTemporaryFile('wpPreparing.bmp');
        end;

        WizardForm.WizardSmallBitmapImage.Bitmap.LoadFromFile(expandConstant('{tmp}\wpPreparing.bmp'));
      end;
    #endif

    #ifdef ISSI_wpInstalling
      if CurPage=wpInstalling then begin
        if not FileExists('wpInstalling.bmp') then begin
          ExtractTemporaryFile('wpInstalling.bmp');
        end;

        WizardForm.WizardSmallBitmapImage.Bitmap.LoadFromFile(expandConstant('{tmp}\wpInstalling.bmp'));
      end;
    #endif

    #ifdef ISSI_wpInfoAfter
      if CurPage=wpInfoAfter then begin
        if not FileExists('wpInfoAfter.bmp') then begin
          ExtractTemporaryFile('wpInfoAfter.bmp');
        end;

        WizardForm.WizardSmallBitmapImage.Bitmap.LoadFromFile(expandConstant('{tmp}\wpInfoAfter.bmp'));
      end;
    #endif

    #ifdef ISSI_WizardBitmapImage
      if CurPage = wpFinished then begin
        imageFile:=ExpandConstant('{tmp}\WizardBitmapImage2.bmp');

        if not fileexists(imageFile) then begin
          ExtractTemporaryFile(ExtractFileName(imageFile));
        end;

        WizardForm.WizardBitmapImage2.Bitmap.LoadFromFile(imageFile);
      end;
    #endif

    #ifdef ISSI_LicensePrint
      if CurPage = wpLicense then begin
        PrintButton         := TButton.Create(WizardForm);
        PrintButton.Caption := ExpandConstant('{cm:IssiTxtLicencePrintButton}');
        PrintButton.Width   := Length(PrintButton.Caption) * 5 +8;
        PrintButton.Left    := WizardForm.LicenseMemo.Left + WizardForm.LicenseMemo.Width - PrintButton.Width;
        PrintButton.Top     := WizardForm.LicenseMemo.Top + WizardForm.LicenseMemo.Height + 16;
        PrintButton.OnClick := @PrintButtonClick;
        PrintButton.Parent  := WizardForm.LicenseAcceptedRadio.Parent;
      end;
    #endif
  end;
#endif

#ifdef ISSI_Remark
[ISSI_PlayMidi]
#endif
#if defined(ISSI_PlayMidi)
  function mciSendString(lpstrCommand: string; lpstrReturnString: string; uReturnLength:integer; hwndCallback:integer):integer;
    external 'mciSendStringA@winmm.dll stdcall';

  #if defined(ISSI_PlayMidiExternal)
    function InitializeWizard_PlayMidi(): Boolean;
    begin
      if fileexists(ExpandConstant('{src}\{#ISSI_PlayMidi}')) then begin
        mciSendString(ExpandConstant('play {src}\{#ISSI_PlayMidi}'),'NULL',0,0);
      end;

      Result := True;
    end;
  #endif

  #if defined(ISSI_PlayMidi) && !defined(ISSI_PlayMidiExternal)
    function InitializeWizard_PlayMidi(): Boolean;
    begin
      ExtractTemporaryFile(ExpandConstant('issi.mid'));
      mciSendString(ExpandConstant('play {tmp}\issi.mid'),'NULL',0,0);
      Result := True;
    end;
  #endif
#endif

#ifdef ISSI_Remark
[ISSI_PlayWav]
#endif
#if defined(ISSI_PlayWav)
  const
    SND_FILENAME = $00020000;
    SND_ASYNC    = $0001;

  #if !defined(ISSI_PlayWavLoop)
    SND_LOOP     = $0000;
  #else
    SND_LOOP     = $0008;
  #endif

  function sndPlaySound(lpszSoundName: string; uFlags: cardinal):integer;
    external 'sndPlaySoundA@winmm.dll stdcall';

  #if defined(ISSI_PlayWavExternal)
    function InitializeWizard_PlayWav(): Boolean;
    begin
      if fileexists(ExpandConstant('{src}\{#ISSI_PlayWav}')) then begin
        sndPlaySound(ExpandConstant('{src}\{#ISSI_PlayWav}'), SND_FILENAME or SND_ASYNC or SND_LOOP);
      end;

      Result := True;
    end;
  #endif

  #if defined(ISSI_PlayWav) && !defined(ISSI_PlayWavExternal)
    function InitializeWizard_PlayWav(): Boolean;
    begin
      ExtractTemporaryFile(ExpandConstant('issi.wav'));
      sndPlaySound(ExpandConstant('{tmp}\issi.wav'), SND_FILENAME or SND_ASYNC or SND_LOOP);

      Result := True;
    end;
  #endif
#endif

#if defined(ISSI_PlayWav) || defined(ISSI_PlayMidi)
  procedure DeInitializeSetup();
  begin
    #ifdef ISSI_UseMyDeInitializeSetup
      ISSI_DeInitializeSetup();
    #endif

    #if defined(ISSI_PlayWav)
      sndPlaySound('',0);
    #endif

    #if defined(ISSI_PlayMidiExternal)
      mciSendString(ExpandConstant('stop {src}\{#ISSI_PlayMidi}'),'NULL',0,0);
    #endif

    #if defined(ISSI_PlayMidi) && !defined(ISSI_PlayMidiExternal)
      mciSendString(ExpandConstant('stop {tmp}\issi.mid'),'NULL',0,0);
    #endif
  end;
#endif

#if defined(ISSI_IMAGE) || defined(ISSI_ABOUT) || defined(ISSI_URL) || defined(ISSI_WizardBitmapImage) || defined(ISSI_WizardSmallBitmapImage) || defined(ISSI_PlayWav) || defined(ISSI_PlayMidi)
  procedure InitializeWizard();
  begin
    #if defined ISSI_IMAGE
      InitializeWizardMYIMAGE();
    #endif

    #ifdef ISSI_UseMyInitializeWizard
      ISSI_InitializeWizard();
    #endif

    #ifdef ISSI_ABOUT
      InitializeWizardMYABOUT();
    #endif

    #ifdef ISSI_URL
      InitializeWizardMYURL();
    #endif

    #if defined(ISSI_WizardBitmapImage)
      InitializeWizard_WizardBitmapImage();
    #endif

    #if defined(ISSI_WizardSmallBitmapImage)
      InitializeWizard_WizardSmallBitmapImage();
    #endif

    #if defined(ISSI_PlayWav)
      InitializeWizard_PlayWav();
    #endif

    #if defined(ISSI_PlayMidi)
      InitializeWizard_PlayMidi();
    #endif
  end;
#endif

#ifdef ISSI_UninsHs_AppName
  #ifndef ISSI_UninsHs_AppId
    #define ISSI_UninsHs_AppId ISSI_UninsHs_AppName
  #endif

  #ifndef ISSI_UninsHs_Exe
    #define ISSI_UninsHs_Exe  ISSI_IncludePath+"Include\uninshs\UninsHs.exe"
  #endif

  #if !FileExists(ISSI_UninsHs_Exe)
    #error The HanSoft uninstaller component "UninsHs.exe" cannot be found. Please check your ISSI installation.
  #endif

  function ComponentList(Default: string):string;
  begin
    Result := WizardSelectedComponents(False);
  end;

  #if VER < 0x05000000
    function SkipCurPage(CurPage: Integer): Boolean;
  #else
    function ShouldSkipPage(CurPage: Integer): Boolean;
  #endif
    begin
      if Pos('/SP-', UpperCase(GetCmdTail)) > 0 then begin
        case CurPage of
          wpWelcome, wpLicense, wpPassword, wpInfoBefore, wpUserInfo, wpSelectDir, wpSelectProgramGroup, wpInfoAfter:
            Result := True;
        end;
      end;
    end;
#endif

#ifdef ISSI_UnZip1
  #ifndef ISSI_UnZipDir1
    #define ISSI_UnZipDir1 "{app}"
  #endif
  function  FileUnzip(Source, Target, FileSpec: pchar): integer;
  external 'FileUnzipEx@files:chiefzip.dll stdcall';
  procedure UnZip1; begin FileUnzip(ExpandConstant('{app}\zip1.zip'),ExpandConstant('{#ISSI_UnZipDir1}'),'*.*'); end;
#endif

#ifdef ISSI_UnZip2
  #ifndef ISSI_UnZipDir2
    #define ISSI_UnZipDir2 "{app}"
  #endif
  procedure UnZip2; begin FileUnzip(ExpandConstant('{app}\zip2.zip'),ExpandConstant('{#ISSI_AppDir2}'),'*.*'); end;
#endif

#ifdef ISSI_UnZip3
  #ifndef ISSI_UnZipDir3
    #define ISSI_UnZipDir3 "{app}"
  #endif
  procedure UnZip3; begin FileUnzip(ExpandConstant('{app}\zip3.zip'),ExpandConstant('{#ISSI_AppDir3}'),'*.*'); end;
#endif

#ifdef ISSI_UnZip4
  #ifndef ISSI_UnZipDir4
    #define ISSI_UnZipDir4 "{app}"
  #endif
  procedure UnZip4; begin FileUnzip(ExpandConstant('{app}\zip4.zip'),ExpandConstant('{#ISSI_AppDir4}'),'*.*'); end;
#endif

#ifdef ISSI_UnZip5
  #ifndef ISSI_UnZipDir5
    #define ISSI_UnZipDir5 "{app}"
  #endif
  procedure UnZip5; begin FileUnzip(ExpandConstant('{app}\zip5.zip'),ExpandConstant('{#ISSI_AppDir5}'),'*.*'); end;
#endif

#ifdef ISSI_UnZip6
  #ifndef ISSI_UnZipDir6
    #define ISSI_UnZipDir6 "{app}"
  #endif
  procedure UnZip6; begin FileUnzip(ExpandConstant('{app}\zip6.zip'),ExpandConstant('{#ISSI_AppDir6}'),'*.*'); end;
#endif

#ifdef ISSI_UnZip7
  #ifndef ISSI_UnZipDir7
    #define ISSI_UnZipDir7 "{app}"
  #endif
  procedure UnZip7; begin FileUnzip(ExpandConstant('{app}\zip7.zip'),ExpandConstant('{#ISSI_AppDir7}'),'*.*'); end;
#endif

#ifdef ISSI_UnZip8
  #ifndef ISSI_UnZipDir8
    #define ISSI_UnZipDir8 "{app}"
  #endif
  procedure UnZip8; begin FileUnzip(ExpandConstant('{app}\zip8.zip'),ExpandConstant('{#ISSI_AppDir8}'),'*.*'); end;
#endif

#ifdef ISSI_UnZip9
  #ifndef ISSI_UnZipDir9
    #define ISSI_UnZipDir9 "{app}"
  #endif
  procedure UnZip9; begin FileUnzip(ExpandConstant('{app}\zip9.zip'),ExpandConstant('{#ISSI_AppDir9}'),'*.*'); end;
#endif

#ifdef ISSI_UnZip10
  #ifndef ISSI_UnZipDir10
    #define ISSI_UnZipDir10 "{app}"
  #endif
  procedure UnZip10; begin FileUnzip(ExpandConstant('{app}\zip10.zip'),ExpandConstant('{#ISSI_AppDir10}'),'*.*'); end;
#endif

#ifdef ISSI_UnZip11
  #ifndef ISSI_UnZipDir11
    #define ISSI_UnZipDir11 "{app}"
  #endif
  procedure UnZip11; begin FileUnzip(ExpandConstant('{app}\zip11.zip'),ExpandConstant('{#ISSI_AppDir11}'),'*.*'); end;
#endif

#ifdef ISSI_UnZip12
  #ifndef ISSI_UnZipDir12
    #define ISSI_UnZipDir12 "{app}"
  #endif
  procedure UnZip12; begin FileUnzip(ExpandConstant('{app}\zip12.zip'),ExpandConstant('{#ISSI_AppDir12}'),'*.*'); end;
#endif

#ifdef ISSI_UnZip13
  #ifndef ISSI_UnZipDir13
    #define ISSI_UnZipDir13 "{app}"
  #endif
  procedure UnZip13; begin FileUnzip(ExpandConstant('{app}\zip13.zip'),ExpandConstant('{#ISSI_AppDir13}'),'*.*'); end;
#endif

#ifdef ISSI_UnZip14
  #ifndef ISSI_UnZipDir14
    #define ISSI_UnZipDir14 "{app}"
  #endif
  procedure UnZip14; begin FileUnzip(ExpandConstant('{app}\zip14.zip'),ExpandConstant('{#ISSI_AppDir14}'),'*.*'); end;
#endif

#ifdef ISSI_UnZip15
  #ifndef ISSI_UnZipDir15
    #define ISSI_UnZipDir15 "{app}"
  #endif
  procedure UnZip15; begin FileUnzip(ExpandConstant('{app}\zip15.zip'),ExpandConstant('{#ISSI_AppDir15}'),'*.*'); end;
#endif

#ifdef ISSI_UnZip16
  #ifndef ISSI_UnZipDir16
    #define ISSI_UnZipDir16 "{app}"
  #endif
  procedure UnZip16; begin FileUnzip(ExpandConstant('{app}\zip16.zip'),ExpandConstant('{#ISSI_AppDir16}'),'*.*'); end;
#endif

#ifdef ISSI_UnZip17
  #ifndef ISSI_UnZipDir17
    #define ISSI_UnZipDir17 "{app}"
  #endif
  procedure UnZip17; begin FileUnzip(ExpandConstant('{app}\zip17.zip'),ExpandConstant('{#ISSI_AppDir17}'),'*.*'); end;
#endif

#ifdef ISSI_UnZip18
  #ifndef ISSI_UnZipDir18
    #define ISSI_UnZipDir18 "{app}"
  #endif
  procedure UnZip18; begin FileUnzip(ExpandConstant('{app}\zip18.zip'),ExpandConstant('{#ISSI_AppDir18}'),'*.*'); end;
#endif

#ifdef ISSI_UnZip19
  #ifndef ISSI_UnZipDir19
    #define ISSI_UnZipDir19 "{app}"
  #endif
  procedure UnZip19; begin FileUnzip(ExpandConstant('{app}\zip19.zip'),ExpandConstant('{#ISSI_AppDir19}'),'*.*'); end;
#endif

#ifdef ISSI_UnZip20
  #ifndef ISSI_UnZipDir20
    #define ISSI_UnZipDir20 "{app}"
  #endif
  procedure UnZip20; begin FileUnzip(ExpandConstant('{app}\zip20.zip'),ExpandConstant('{#ISSI_AppDir20}'),'*.*'); end;
#endif

[Ini]
#ifdef ISSI_UninsHs_AppName
  FileName: "{app}\UninsHs.dat"; Section: "Common"; Key: "Software";    String: "{#ISSI_UninsHs_AppName}"

#ifdef ISSI_UninsHs_IncludeSetup
  FileName: "{app}\UninsHs.dat"; Section: "Common"; Key: "Install";     String: "{app}\UninsHsIs.exe"
#else
  FileName: "{app}\UninsHs.dat"; Section: "Common"; Key: "Install";     String: "{srcexe}"
#endif

  FileName: "{app}\UninsHs.dat"; Section: "Common"; Key: "Language";    String: "{language}"
  FileName: "{app}\UninsHs.dat"; Section: "Common"; Key: "Remove";      String: "{uninstallexe}"
  FileName: "{app}\UninsHs.dat"; Section: "Common"; Key: "Group";       String: "{groupname}"
  FileName: "{app}\UninsHs.dat"; Section: "Common"; Key: "Components";  String: "{code:ComponentList|x}"
  FileName: "{app}\UninsHs.dat"; Section: "Common"; Key: "Uninstall";   String: "{#ISSI_UninsHs_AppId}"
  FileName: "{app}\UninsHs.dat"; Section: "Common"; Key: "Dir";         String: "{app}"
#endif

[UninstallDelete]
#ifdef ISSI_UninsHs_AppName
  Type: filesandordirs; Name: "{app}\UninsHs.dat"
#endif

[Messages]
#if defined(ISSI_AppName)&& !defined(ISSI_BeveledLabel)
  #ifdef ISSI_AppTemplate
    #if ISSI_AppTemplate > 0
      BeveledLabel={#ISSI_AppPublisher}
    #endif
  #else
    BeveledLabel={#ISSI_AppPublisher}
  #endif
#endif

#if defined(ISSI_BeveledLabel)
  #if ISSI_BeveledLabel == ""
    BeveledLabel=Inno Setup
  #else
    BeveledLabel={#ISSI_BeveledLabel}
  #endif
#endif

[Setup]
#ifdef ISSI_GenerateSerial
  outputDir="{#ISSI_GenerateSerial_outputDir}"
#endif

#ifdef ISSI_GetMD5OfSerial
  UserInfoPage=yes
#endif

#ifdef ISSI_AppName
  AppName={#ISSI_AppName}
  AppVersion={#ISSI_AppVersion}
  AppPublisher={#ISSI_AppPublisher}
  AppCopyright={#ISSI_AppPublisher}
  VersionInfoDescription={#ISSI_AppName} Setup
  VersionInfoTextVersion={#ISSI_AppVersion}
  VersionInfoVersion={#ISSI_AppVersion}
  VersionInfoCompany={#ISSI_AppPublisher}
  #if VER >= 0x05010500
    VersionInfoCopyright={#ISSI_AppPublisher}
  #endif
  OutputBaseFilename={#ISSI_AppName} Setup

  #ifdef ISSI_AppTemplate
    #if ISSI_AppTemplate == 1 || ISSI_AppTemplate == -1
      AppVerName={#ISSI_AppName} v{#ISSI_AppVersion}
      DefaultDirName={pf}\{#ISSI_AppPublisher}\{#ISSI_AppName} v{#ISSI_AppVersion}
      DefaultGroupName={#ISSI_AppPublisher}\{#ISSI_AppName} v{#ISSI_AppVersion}
    #endif

    #if ISSI_AppTemplate == 2 || ISSI_AppTemplate == -2
      AppVerName={#ISSI_AppName} v{#ISSI_AppVersion}
      DefaultDirName={pf}\{#ISSI_AppPublisher}\{#ISSI_AppName}\v{#ISSI_AppVersion}
      DefaultGroupName={#ISSI_AppPublisher}\{#ISSI_AppName}\v{#ISSI_AppVersion}
    #endif

    #if ISSI_AppTemplate == 3 || ISSI_AppTemplate == -3
      AppVerName={#ISSI_AppName} v{#ISSI_AppVersion}
      DefaultDirName={pf}\{#ISSI_AppName} v{#ISSI_AppVersion}
      DefaultGroupName={#ISSI_AppName} v{#ISSI_AppVersion}
    #endif

    #if ISSI_AppTemplate == 4 || ISSI_AppTemplate == -4
      AppVerName={#ISSI_AppName} v{#ISSI_AppVersion}
      DefaultDirName={pf}\{#ISSI_AppName}\v{#ISSI_AppVersion}
      DefaultGroupName={#ISSI_AppName}\v{#ISSI_AppVersion}
    #endif

    #if ISSI_AppTemplate == 5 || ISSI_AppTemplate == -5
      AppVerName={#ISSI_AppName} v{#ISSI_AppVersion}
      DefaultDirName={pf}\{#ISSI_AppPublisher}\{#ISSI_AppName}
      DefaultGroupName={#ISSI_AppPublisher}\{#ISSI_AppName}
    #endif

    #if ISSI_AppTemplate == 6 || ISSI_AppTemplate == -6
      AppVerName={#ISSI_AppName} v{#ISSI_AppVersion}
      DefaultDirName={pf}\{#ISSI_AppName}
      DefaultGroupName={#ISSI_AppName}
    #endif

    #if ISSI_AppTemplate == 7 || ISSI_AppTemplate == -7
      AppVerName={#ISSI_AppName} v{#ISSI_AppVersion}
      DefaultDirName={pf}\{#ISSI_AppName}\{#ISSI_AppName} v{#ISSI_AppVersion}
      DefaultGroupName={#ISSI_AppName}\{#ISSI_AppName} v{#ISSI_AppVersion}
    #endif

    #if ISSI_AppTemplate == 8 || ISSI_AppTemplate == -8
      AppVerName={#ISSI_AppName} v{#ISSI_AppVersion}
      DefaultDirName={pf}\{#ISSI_AppPublisher}\{#ISSI_AppName}\{#ISSI_AppName} v{#ISSI_AppVersion}
      DefaultGroupName={#ISSI_AppPublisher}\{#ISSI_AppName}\{#ISSI_AppName} v{#ISSI_AppVersion}
    #endif

    #if ISSI_AppTemplate == 9 || ISSI_AppTemplate == -9
      AppVerName={#ISSI_AppName} v{#ISSI_AppVersion}
      DefaultDirName={pf}\{#ISSI_AppPublisher}
      DefaultGroupName={#ISSI_AppPublisher}
    #endif
        #if ISSI_AppTemplate == 11 || ISSI_AppTemplate == -11
      AppVerName={cm:NameAndVersion,{#ISSI_AppName},{#ISSI_AppVersion}}
      DefaultDirName={pf}\{#ISSI_AppPublisher}\{cm:NameAndVersion,{#ISSI_AppName},{#ISSI_AppVersion}}
      DefaultGroupName={#ISSI_AppPublisher}\{cm:NameAndVersion,{#ISSI_AppName},{#ISSI_AppVersion}}
    #endif

    #if ISSI_AppTemplate == 12 || ISSI_AppTemplate == -12
      AppVerName={cm:NameAndVersion,{#ISSI_AppName},{#ISSI_AppVersion}}
      DefaultDirName={pf}\{#ISSI_AppPublisher}\{#ISSI_AppName}\v{#ISSI_AppVersion}
      DefaultGroupName={#ISSI_AppPublisher}\{#ISSI_AppName}\v{#ISSI_AppVersion}
    #endif

    #if ISSI_AppTemplate == 13 || ISSI_AppTemplate == -13
      AppVerName={cm:NameAndVersion,{#ISSI_AppName},{#ISSI_AppVersion}}
      DefaultDirName={pf}\{cm:NameAndVersion,{#ISSI_AppName},{#ISSI_AppVersion}}
      DefaultGroupName={cm:NameAndVersion,{#ISSI_AppName},{#ISSI_AppVersion}}
    #endif

    #if ISSI_AppTemplate == 14 || ISSI_AppTemplate == -14
      AppVerName={cm:NameAndVersion,{#ISSI_AppName},{#ISSI_AppVersion}}
      DefaultDirName={pf}\{#ISSI_AppName}\v{#ISSI_AppVersion}
      DefaultGroupName={#ISSI_AppName}\v{#ISSI_AppVersion}
    #endif

    #if ISSI_AppTemplate == 15 || ISSI_AppTemplate == -15
      AppVerName={cm:NameAndVersion,{#ISSI_AppName},{#ISSI_AppVersion}}
      DefaultDirName={pf}\{#ISSI_AppPublisher}\{#ISSI_AppName}
      DefaultGroupName={#ISSI_AppPublisher}\{#ISSI_AppName}
    #endif

    #if ISSI_AppTemplate == 16 || ISSI_AppTemplate == -16
      AppVerName={cm:NameAndVersion,{#ISSI_AppName},{#ISSI_AppVersion}}
      DefaultDirName={pf}\{#ISSI_AppName}
      DefaultGroupName={#ISSI_AppName}
    #endif

    #if ISSI_AppTemplate == 17 || ISSI_AppTemplate == -17
      AppVerName={cm:NameAndVersion,{#ISSI_AppName},{#ISSI_AppVersion}}
      DefaultDirName={pf}\{#ISSI_AppName}\{cm:NameAndVersion,{#ISSI_AppName},{#ISSI_AppVersion}}
      DefaultGroupName={#ISSI_AppName}\{cm:NameAndVersion,{#ISSI_AppName},{#ISSI_AppVersion}}
    #endif

    #if ISSI_AppTemplate == 18 || ISSI_AppTemplate == -18
      AppVerName={cm:NameAndVersion,{#ISSI_AppName},{#ISSI_AppVersion}}
      DefaultDirName={pf}\{#ISSI_AppPublisher}\{#ISSI_AppName}\{cm:NameAndVersion,{#ISSI_AppName},{#ISSI_AppVersion}}
      DefaultGroupName={#ISSI_AppPublisher}\{#ISSI_AppName}\{cm:NameAndVersion,{#ISSI_AppName},{#ISSI_AppVersion}}
    #endif

    #if ISSI_AppTemplate == 19 || ISSI_AppTemplate == -19
      AppVerName={cm:NameAndVersion,{#ISSI_AppName},{#ISSI_AppVersion}}
      DefaultDirName={pf}\{#ISSI_AppPublisher}
      DefaultGroupName={#ISSI_AppPublisher}
    #endif

  #else
    AppVerName={cm:NameAndVersion,{#ISSI_AppName},{#ISSI_AppVersion}}
    DefaultDirName={pf}\{#ISSI_AppPublisher}\{#ISSI_AppName}
    DefaultGroupName={#ISSI_AppPublisher}\{#ISSI_AppName}
  #endif
#endif

#ifdef ISSI_AssociateExt
  ChangesAssociations=yes
#endif

#if defined (ISSI_WizardImages) && !defined (ISSI_WizardBitmapImage) && !defined (ISSI_WizardSmallBitmapImage)
  #if ISSI_WizardImages == ""
    #if FileExists(CompilerPath+"\WizModernImage-IS.bmp")
      WizardImageFile="{#CompilerPath}\WizModernImage-IS.bmp"
      WizardSmallImageFile="{#CompilerPath}\WizModernSmallImage-IS.bmp"
      #define issiWizSmallImage CompilerPath+"\WizModernSmallImage-IS.bmp"
    #endif
  #else
    #define issiWizSmallImage ISSI_IncludePath+"Wizard_Images\"+ISSI_WizardImages+"_55x55.bmp"
    WizardImageFile="{#ISSI_IncludePath}Wizard_Images\{#ISSI_WizardImages}_164x314.bmp"
    WizardSmallImageFile="{#issiWizSmallImage}"
  #endif
#endif

#ifdef ISSI_WizardBitmapImage
  WizardImageFile={#ISSI_WizardBitmapImage}
#endif

#ifdef ISSI_WizardSmallBitmapImage
  WizardSmallImageFile={#ISSI_WizardSmallBitmapImage}
#endif

#ifdef ISSI_DOWNLOAD_URL
;  AppendDefaultGroupName=no
#endif

#ifdef ISSI_COMPRESSION
  #if ISSI_COMPRESSION == "none"
    Compression=none
    SolidCompression=false
    InternalCompressLevel=none
  #endif

  #if ISSI_COMPRESSION == "fast"
    Compression=lzma/fast
    SolidCompression=false
    InternalCompressLevel=fast
  #endif

  #if ISSI_COMPRESSION == ""
    Compression=lzma/ultra
    SolidCompression=true
    InternalCompressLevel=ultra
  #endif
#endif

#ifdef ISSI_UPDATE
  DisableProgramGroupPage=true

  #ifndef ISSI_UpdateOrInstall
    DisableDirPage=true
    CreateUninstallRegKey=no
    UpdateUninstallLogAppName=no
  #endif

  UsePreviousGroup=yes
  UsePreviousAppDir=yes
#endif

#ifdef ISSI_IMAGE
  #if !defined ISSI_IMAGE_BGColor
    #define ISSI_IMAGE_BGColor "clBlack"
  #endif

  WindowShowCaption=false
  WindowVisible=true
  BackColor={#ISSI_IMAGE_BGColor}
  BackColor2={#ISSI_IMAGE_BGColor}
  #undef ISSI_IMAGE_BGColor
#endif

[Icons]

#ifdef ISSI_UninsHs_AppName
  Name: "{group}\{cm:UninstallProgram,{#ISSI_UninsHs_AppName}}"; Filename: "{app}\UninsHs.exe"
#endif

#ifdef ISSI_AppStart
  #ifndef ISSI_UninsHs_AppName
    Name: {group}\{cm:UninstallProgram,{#ISSI_AppName}}; Filename: {uninstallexe}
  #endif

  #ifdef ISSI_URL
    #if ISSI_URL != ""
      Name: {group}\{cm:ProgramOnTheWeb,{#ISSI_AppName}}; Filename: "{app}\website.url"; Flags: runmaximized
    #endif
  #endif

  #ifdef ISSI_AppIcon
    Name: "{group}\{cm:NameAndVersion,{#ISSI_AppName},{#ISSI_AppVersion}}"; Filename: {app}\{#ISSI_AppStart}; Flags: runmaximized; IconFilename: "{#ISSI_AppIcon}";
    Name: "{userdesktop}\{cm:NameAndVersion,{#ISSI_AppName},{#ISSI_AppVersion}}"; Filename: {app}\{#ISSI_AppStart} ; Flags: runmaximized; IconFilename:"{#ISSI_AppIcon}"; Tasks: desktopicon
    Name: "{userappdata}\Microsoft\Internet Explorer\Quick Launch\{cm:NameAndVersion,{#ISSI_AppName},{#ISSI_AppVersion}}"; Filename: {app}\{#ISSI_AppStart} ; Flags: runmaximized; IconFilename:"{#ISSI_AppIcon}"; Tasks: quicklaunchicon
  #else
    Name: "{group}\{cm:NameAndVersion,{#ISSI_AppName},{#ISSI_AppVersion}}"; Filename: {app}\{#ISSI_AppStart}; Flags: runmaximized
    Name: {userdesktop}\{cm:NameAndVersion,{#ISSI_AppName},{#ISSI_AppVersion}}; Filename: {app}\{#ISSI_AppStart} ; Flags: runmaximized; Tasks: desktopicon
    Name: "{userappdata}\Microsoft\Internet Explorer\Quick Launch\{cm:NameAndVersion,{#ISSI_AppName},{#ISSI_AppVersion}}"; Filename: {app}\{#ISSI_AppStart} ; Flags: runmaximized; Tasks: quicklaunchicon
  #endif
#endif

[Registry]
#ifdef ISSI_AssociateExt
  Root: HKCR; Subkey: ".{#ISSI_AssociateExt}"; ValueType: string; ValueName: ""; ValueData: "{#ISSI_AssociateName}"; Tasks: associate; Flags: createvalueifdoesntexist uninsdeletevalue uninsdeletekeyifempty
#endif

[Tasks]
#ifdef ISSI_AssociateExt
  Name: associate; Description: {cm:AssocFileExtension,{#ISSI_AssociateProgram},'.{#ISSI_AssociateExt}'}; GroupDescription: " "
#endif

#ifdef ISSI_AppStart
  Name: desktopicon; Description: {cm:CreateDesktopIcon}; GroupDescription: "  "; Flags: unchecked
  Name: quicklaunchicon; Description: {cm:CreateQuickLaunchIcon}; GroupDescription: "  "; Flags: unchecked;
#endif

[Run]

#ifdef ISSI_UninsHs_AppName
  Filename: {app}\UninsHs.exe; Parameters: /r; Flags: runminimized
#endif

#ifdef ISSI_ScreenSaver
   Filename: "{code:getrundll32location}\rundll32.exe"; Parameters: "desk.cpl,InstallScreenSaver {sys}\{#ISSI_ScreenSaver}"; Flags: postinstall skipifsilent nowait; Description: "{cm:LaunchProgram,Screensaver Config}"
#endif

#ifdef ISSI_DOWNLOAD_URL
  Filename: "{tmp}\setup.exe"; Flags: skipifdoesntexist; StatusMsg: "Installing  '{#ISSI_DOWNLOAD_TITLE}'"; Parameters: "/DIR=""{app}"" /verysilent /group=""{groupname}"""
#endif

#ifdef ISSI_Remark
[MISSING INNO LANGUAGE SUPPORT]
; This section copies missing Inno Setup language files
#endif

#ifdef ISSI_Afrikaans
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Afrikaans.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Albanian
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Albanian.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Arabic
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Arabic.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Belarusian
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Belarusian.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Bosnian
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Bosnian.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_BrazilianPortuguese
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\BrazilianPortuguese.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Chinese
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\ChineseTrad.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_ChineseSimp
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\ChineseSimp.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Danish
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Danish.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Estonian
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Estonian.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Finnish
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Finnish.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Galician
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Galician.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Hungarian
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Hungarian.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Icelandic
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Icelandic.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Indonesian
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Indonesian.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Italian
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Italian.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Japanese
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Japanese.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Korean
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Korean.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Lithuanian
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Lithuanian.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Luxemburgish
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Luxemburgish.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Malaysian
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Malaysian.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Portuguese
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\PortugueseStd.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Romanian
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Romanian.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Serbian
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Serbian.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Slovak
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Slovak.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Slovenian
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Slovenian.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Spanish
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Spanish.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_SpanishMex
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\SpanishMex.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Japanese
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Japanese.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Russian
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Russian.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Romanian
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Romanian.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Galician
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Galician.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Swedish
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Swedish.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Turkish
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Turkish.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Ukrainian
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Ukrainian.isl")
    #define issiISLP
  #endif
#endif

;; v5.1.6.2
#ifdef ISSI_Basque
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Basque.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_SpanishArgentina
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\SpanishArg.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_SpanishNicaragua
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\SpanishNic.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Tatarish
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Tatarish.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Hebrew
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Hebrew.isl")
    #define issiISLP
  #endif
#endif

#ifdef ISSI_Macedonian
  #if !FileExists(AddBackslash(CompilerPath)+"Languages\Macedonian.isl")
    #define issiISLP
  #endif
#endif

#ifdef issiISLP
  #if VER >= 0x05010000
    #define innoLangVersion "5_1_0"
  #else
    #define innoLangVersion "4_2_2"
  #endif

  #expr Exec(AddBackslash(CompilerPath) + "Compil32.exe", "/cc """+ISSI_IncludePath+"Include\islp_v"+innoLangVersion+".iss""")
  #expr Exec(ISSI_IncludePath+"Include\islp_v"+innoLangVersion+".exe","/VERYSILENT",ISSI_IncludePath+"Include")
  #expr  DeleteFile(ISSI_IncludePath+"Include\islp_v"+innoLangVersion+".exe")
  #undef issiISLP
  #undef innoLangVersion
#endif

[Languages]

#ifdef ISSI_Afrikaans
  #if ISSI_Afrikaans == ""
    Name: af; MessagesFile: compiler:Languages\Afrikaans.isl,{#ISSI_IncludePath}Languages\_issi_English.isl
  #else
    Name: af; MessagesFile: compiler:Languages\Afrikaans.isl,{#ISSI_IncludePath}Languages\_issi_English.isl; LicenseFile:{#ISSI_Afrikaans}
  #endif
#endif

#ifdef ISSI_Albanian
  #if ISSI_Albanian == ""
    Name: al; MessagesFile: compiler:Languages\Albanian.isl,{#ISSI_IncludePath}Languages\_issi_English.isl
  #else
    Name: al; MessagesFile: compiler:Languages\Albanian.isl,{#ISSI_IncludePath}Languages\_issi_English.isl; LicenseFile:{#ISSI_Albanian}
  #endif
#endif

#ifdef ISSI_Arabic
  #if ISSI_Arabic == ""
    Name: ar; MessagesFile: compiler:Languages\Arabic.isl,{#ISSI_IncludePath}Languages\_issi_English.isl
  #else
    Name: ar; MessagesFile: compiler:Languages\Arabic.isl,{#ISSI_IncludePath}Languages\_issi_English.isl; LicenseFile:{#ISSI_Arabic}
  #endif
#endif

#ifdef ISSI_Belarusian
  #if ISSI_Belarusian == ""
    Name: brn; MessagesFile: compiler:Languages\Belarusian.isl,{#ISSI_IncludePath}Languages\_issi_English.isl
  #else
    Name: brn; MessagesFile: compiler:Languages\Belarusian.isl,{#ISSI_IncludePath}Languages\_issi_English.isl; LicenseFile:{#ISSI_Belarusian}
  #endif
#endif

#ifdef ISSI_Bosnian
  #if ISSI_Bosnian == ""
    Name: bs; MessagesFile: compiler:Languages\Bosnian.isl,{#ISSI_IncludePath}Languages\_issi_Bosnian.isl
  #else
    Name: bs; MessagesFile: compiler:Languages\Bosnian.isl,{#ISSI_IncludePath}Languages\_issi_Bosnian.isl; LicenseFile:{#ISSI_Bosnian}
  #endif
#endif

#ifdef ISSI_BrazilianPortuguese
  #if ISSI_BrazilianPortuguese == ""
    Name: br; MessagesFile: compiler:Languages\BrazilianPortuguese.isl,{#ISSI_IncludePath}Languages\_issi_BrazilianPortuguese.isl
  #else
    Name: br; MessagesFile: compiler:Languages\BrazilianPortuguese.isl,{#ISSI_IncludePath}Languages\_issi_BrazilianPortuguese.isl; LicenseFile:{#ISSI_BrazilianPortuguese}
  #endif
#endif

#ifdef ISSI_Bulgarian
  #if ISSI_Bulgarian == ""
    Name: bu; MessagesFile: compiler:Languages\Bulgarian.isl,{#ISSI_IncludePath}Languages\_issi_English.isl
  #else
    Name: bu; MessagesFile: compiler:Languages\Bulgarian.isl,{#ISSI_IncludePath}Languages\_issi_English.isl; LicenseFile:{#ISSI_Bulgarian}
  #endif
#endif

#ifdef ISSI_Catalan
  #if ISSI_Catalan == ""
    Name: ca; MessagesFile: compiler:Languages\Catalan.isl,{#ISSI_IncludePath}Languages\_issi_Catalan.isl
  #else
    Name: ca; MessagesFile: compiler:Languages\Catalan.isl,{#ISSI_IncludePath}Languages\_issi_Catalan.isl; LicenseFile:{#ISSI_Catalan}
  #endif
#endif

#ifdef ISSI_ChineseTrad
  #if ISSI_ChineseTrad == ""
    Name: cht; MessagesFile: compiler:Languages\ChineseTrad.isl,{#ISSI_IncludePath}Languages\_issi_ChineseTrad.isl
  #else
    Name: cht; MessagesFile: compiler:Languages\ChineseTrad.isl,{#ISSI_IncludePath}Languages\_issi_ChineseTrad.isl; LicenseFile:{#ISSI_ChineseTrad}
  #endif
#endif

#ifdef ISSI_ChineseSimp
  #if ISSI_ChineseSimp == ""
    Name: chs; MessagesFile: compiler:Languages\ChineseSimp.isl,{#ISSI_IncludePath}Languages\_issi_ChineseSimp.isl
  #else
    Name: chs; MessagesFile: compiler:Languages\ChineseSimp.isl,{#ISSI_IncludePath}Languages\_issi_ChineseSimp.isl; LicenseFile:{#ISSI_ChineseSimp}
  #endif
#endif

#ifdef ISSI_Czech
  #if ISSI_Czech == ""
    Name: cz; MessagesFile: compiler:Languages\Czech.isl,{#ISSI_IncludePath}Languages\_issi_Czech.isl
  #else
    Name: cz; MessagesFile: compiler:Languages\Czech.isl,{#ISSI_IncludePath}Languages\_issi_Czech.isl; LicenseFile:{#ISSI_Czech}
  #endif
#endif

#ifdef ISSI_Danish
  #if ISSI_Danish == ""
    Name: dk; MessagesFile: compiler:Languages\Danish.isl,{#ISSI_IncludePath}Languages\_issi_Danish.isl
  #else
    Name: dk; MessagesFile: compiler:Languages\Danish.isl,{#ISSI_IncludePath}Languages\_issi_Danish.isl; LicenseFile:{#ISSI_Danish}
  #endif
#endif

#ifdef ISSI_Dutch
  #if ISSI_Dutch == ""
    Name: nl; MessagesFile: compiler:Languages\Dutch.isl,{#ISSI_IncludePath}Languages\_issi_Dutch.isl
  #else
    Name: nl; MessagesFile: compiler:Languages\Dutch.isl,{#ISSI_IncludePath}Languages\_issi_Dutch.isl; LicenseFile:{#ISSI_Dutch}
  #endif
#endif

#ifdef ISSI_English
  #if ISSI_English == ""
    Name: en; MessagesFile: compiler:Default.isl,{#ISSI_IncludePath}Languages\_issi_English.isl
  #else
    Name: en; MessagesFile: compiler:Default.isl,{#ISSI_IncludePath}Languages\_issi_English.isl; LicenseFile:{#ISSI_English}
  #endif
#endif

#ifdef ISSI_Estonian
  #if ISSI_Estonian == ""
    Name: est; MessagesFile: compiler:Languages\Estonian.isl,{#ISSI_IncludePath}Languages\_issi_English.isl
  #else
    Name: est; MessagesFile: compiler:Languages\Estonian.isl,{#ISSI_IncludePath}Languages\_issi_English.isl; LicenseFile:{#ISSI_Estonian}
  #endif
#endif

#ifdef ISSI_Finnish
  #if ISSI_Finnish == ""
    Name: fi; MessagesFile: compiler:Languages\Finnish.isl,{#ISSI_IncludePath}Languages\_issi_English.isl
  #else
    Name: fi; MessagesFile: compiler:Languages\Finnish.isl,{#ISSI_IncludePath}Languages\_issi_English.isl; LicenseFile:{#ISSI_Finnish}
  #endif
#endif

#ifdef ISSI_French
  #if ISSI_French == ""
    Name: fr; MessagesFile: compiler:Languages\French.isl,{#ISSI_IncludePath}Languages\_issi_French.isl
  #else
    Name: fr; MessagesFile: compiler:Languages\French.isl,{#ISSI_IncludePath}Languages\_issi_French.isl; LicenseFile:{#ISSI_French}
  #endif
#endif

#ifdef ISSI_Galician
  #if ISSI_Galician == ""
    Name: ga; MessagesFile: compiler:Languages\Galician.isl,{#ISSI_IncludePath}Languages\_issi_English.isl
  #else
    Name: ga; MessagesFile: compiler:Languages\Galician.isl,{#ISSI_IncludePath}Languages\_issi_English.isl; LicenseFile:{#ISSI_Galician}
  #endif
#endif

#ifdef ISSI_Greek
  #if ISSI_Greek == ""
    Name: gr; MessagesFile: compiler:Languages\Greek.isl,{#ISSI_IncludePath}Languages\_issi_English.isl
  #else
    Name: gr; MessagesFile: compiler:Languages\Greek.isl,{#ISSI_IncludePath}Languages\_issi_English.isl; LicenseFile:{#ISSI_Greek}
  #endif
#endif

#ifdef ISSI_German
  #if ISSI_German == ""
    Name: de; MessagesFile: compiler:Languages\German.isl,{#ISSI_IncludePath}Languages\_issi_German.isl
  #else
    Name: de; MessagesFile: compiler:Languages\German.isl,{#ISSI_IncludePath}Languages\_issi_German.isl; LicenseFile:{#ISSI_German}
  #endif
#endif

#ifdef ISSI_Hungarian
  #if ISSI_Hungarian == ""
    Name: hu; MessagesFile: compiler:Languages\Hungarian.isl,{#ISSI_IncludePath}Languages\_issi_Hungarian.isl
  #else
    Name: hu; MessagesFile: compiler:Languages\Hungarian.isl,{#ISSI_IncludePath}Languages\_issi_Hungarian.isl; LicenseFile:{#ISSI_Hungarian}
  #endif
#endif

#ifdef ISSI_Icelandic
  #if ISSI_Icelandic == ""
    Name: ice; MessagesFile: compiler:Languages\Icelandic.isl,{#ISSI_IncludePath}Languages\_issi_English.isl
  #else
    Name: ice; MessagesFile: compiler:Languages\Icelandic.isl,{#ISSI_IncludePath}Languages\_issi_English.isl; LicenseFile:{#ISSI_Icelandic}
  #endif
#endif

#ifdef ISSI_Indonesian
  #if ISSI_Indonesian == ""
    Name: ind; MessagesFile: compiler:Languages\Indonesian.isl,{#ISSI_IncludePath}Languages\_issi_English.isl
  #else
    Name: ind; MessagesFile: compiler:Languages\Indonesian.isl,{#ISSI_IncludePath}Languages\_issi_English.isl; LicenseFile:{#ISSI_Indonesian}
  #endif
#endif

#ifdef ISSI_Italian
  #if ISSI_Italian == ""
    Name: it; MessagesFile: compiler:Languages\Italian.isl,{#ISSI_IncludePath}Languages\_issi_Italian.isl
  #else
    Name: it; MessagesFile: compiler:Languages\Italian.isl,{#ISSI_IncludePath}Languages\_issi_Italian.isl; LicenseFile:{#ISSI_Italian}
  #endif
#endif

#ifdef ISSI_Japanese
  #if ISSI_Japanese == ""
    Name: ja; MessagesFile: compiler:Languages\Japanese.isl,{#ISSI_IncludePath}Languages\_issi_English.isl
  #else
    Name: ja; MessagesFile: compiler:Languages\Japanese.isl,{#ISSI_IncludePath}Languages\_issi_English.isl; LicenseFile:{#ISSI_Japanese}
  #endif
#endif

#ifdef ISSI_Korean
  #if ISSI_Korean == ""
    Name: kr; MessagesFile: compiler:Languages\Korean.isl,{#ISSI_IncludePath}Languages\_issi_English.isl
  #else
    Name: kr; MessagesFile: compiler:Languages\Korean.isl,{#ISSI_IncludePath}Languages\_issi_English.isl; LicenseFile:{#ISSI_Korean}
  #endif
#endif

#ifdef ISSI_Lithuanian
  #if ISSI_Lithuanian == ""
    Name: li; MessagesFile: compiler:Languages\Lithuanian.isl,{#ISSI_IncludePath}Languages\_issi_English.isl
  #else
    Name: li; MessagesFile: compiler:Languages\Lithuanian.isl,{#ISSI_IncludePath}Languages\_issi_English.isl; LicenseFile:{#ISSI_Lithuanian}
  #endif
#endif

#ifdef ISSI_Luxemburgish
  #if ISSI_Luxemburgish == ""
    Name: lu; MessagesFile: compiler:Languages\Luxemburgish.isl,{#ISSI_IncludePath}Languages\_issi_English.isl
  #else
    Name: lu; MessagesFile: compiler:Languages\Luxemburgish.isl,{#ISSI_IncludePath}Languages\_issi_English.isl; LicenseFile:{#ISSI_Luxemburgish}
  #endif
#endif

#ifdef ISSI_Malaysian
  #if ISSI_Malaysian == ""
    Name: malay; MessagesFile: compiler:Languages\Malaysian.isl,{#ISSI_IncludePath}Languages\_issi_English.isl
  #else
    Name: malay; MessagesFile: compiler:Languages\Malaysian.isl,{#ISSI_IncludePath}Languages\_issi_English.isl; LicenseFile:{#ISSI_Malaysian}
  #endif
#endif

#ifdef ISSI_Polish
  #if ISSI_Polish == ""
    Name: pl; MessagesFile: compiler:Languages\Polish.isl,{#ISSI_IncludePath}Languages\_issi_Polish.isl
  #else
    Name: pl; MessagesFile: compiler:Languages\Polish.isl,{#ISSI_IncludePath}Languages\_issi_Polish.isl; LicenseFile:{#ISSI_Polish}
  #endif
#endif

#ifdef ISSI_Portuguese
  #if ISSI_Portuguese == ""
    Name: pt; MessagesFile: compiler:Languages\PortugueseStd.isl,{#ISSI_IncludePath}Languages\_issi_English.isl
  #else
    Name: pt; MessagesFile: compiler:Languages\PortugueseStd.isl,{#ISSI_IncludePath}Languages\_issi_English.isl; LicenseFile:{#ISSI_Portuguese}
  #endif
#endif

#ifdef ISSI_Romanian
  #if ISSI_Romanian == ""
    Name: ro; MessagesFile: compiler:Languages\Romanian.isl,{#ISSI_IncludePath}Languages\_issi_English.isl
  #else
    Name: ro; MessagesFile: compiler:Languages\Romanian.isl,{#ISSI_IncludePath}Languages\_issi_English.isl; LicenseFile:{#ISSI_Romanian}
  #endif
#endif

#ifdef ISSI_Russian
  #if ISSI_Russian == ""
    Name: ru; MessagesFile: compiler:Languages\Russian.isl,{#ISSI_IncludePath}Languages\_issi_Russian.isl
  #else
    Name: ru; MessagesFile: compiler:Languages\Russian.isl,{#ISSI_IncludePath}Languages\_issi_Russian.isl; LicenseFile:{#ISSI_Russian}
  #endif
#endif

#ifdef ISSI_Serbian
  #if ISSI_Serbian == ""
    Name: serb; MessagesFile: compiler:Languages\Serbian.isl,{#ISSI_IncludePath}Languages\_issi_English.isl
  #else
    Name: serb; MessagesFile: compiler:Languages\Serbian.isl,{#ISSI_IncludePath}Languages\_issi_English.isl; LicenseFile:{#ISSI_Serbian}
  #endif
#endif

#ifdef ISSI_Slovak
  #if ISSI_Slovak == ""
    Name: slk; MessagesFile: compiler:Languages\Slovak.isl,{#ISSI_IncludePath}Languages\_issi_Slovak.isl
  #else
    Name: slk; MessagesFile: compiler:Languages\Slovak.isl,{#ISSI_IncludePath}Languages\_issi_Slovak.isl; LicenseFile:{#ISSI_Slovak}
  #endif
#endif

#ifdef ISSI_Slovenian
  #if ISSI_Slovenian == ""
    Name: slo; MessagesFile: compiler:Languages\Slovenian.isl,{#ISSI_IncludePath}Languages\_issi_Slovenian.isl
  #else
    Name: slo; MessagesFile: compiler:Languages\Slovenian.isl,{#ISSI_IncludePath}Languages\_issi_Slovenian.isl; LicenseFile:{#ISSI_Slovenian}
  #endif
#endif

#ifdef ISSI_Spanish
  #if ISSI_Spanish == ""
    Name: es; MessagesFile: compiler:Languages\Spanish.isl,{#ISSI_IncludePath}Languages\_issi_Spanish.isl
  #else
    Name: es; MessagesFile: compiler:Languages\Spanish.isl,{#ISSI_IncludePath}Languages\_issi_Spanish.isl; LicenseFile:{#ISSI_Spanish}
  #endif
#endif

#ifdef ISSI_Swedish
  #if ISSI_Swedish == ""
    Name: se; MessagesFile: compiler:Languages\Swedish.isl,{#ISSI_IncludePath}Languages\_issi_Swedish.isl
  #else
    Name: se; MessagesFile: compiler:Languages\Swedish.isl,{#ISSI_IncludePath}Languages\_issi_Swedish.isl; LicenseFile:{#ISSI_Swedish}
  #endif
#endif

#ifdef ISSI_Turkish
  #if ISSI_Turkish == ""
    Name: tk; MessagesFile: compiler:Languages\Turkish.isl,{#ISSI_IncludePath}Languages\_issi_Turkish.isl
  #else
    Name: tk; MessagesFile: compiler:Languages\Turkish.isl,{#ISSI_IncludePath}Languages\_issi_Turkish.isl; LicenseFile:{#ISSI_Turkish}
  #endif
#endif

#ifdef ISSI_Ukrainian
  #if ISSI_Ukrainian == ""
    Name: ukr; MessagesFile: compiler:Languages\Ukrainian.isl,{#ISSI_IncludePath}Languages\_issi_English.isl
  #else
    Name: ukr; MessagesFile: compiler:Languages\Ukrainian.isl,{#ISSI_IncludePath}Languages\_issi_English.isl; LicenseFile:{#ISSI_Ukrainian}
  #endif
#endif

;; ADDED v5.1.6.2
#ifdef ISSI_Basque
  #if ISSI_Basque == ""
    Name: baq; MessagesFile: compiler:Languages\Basque.isl,{#ISSI_IncludePath}Languages\_issi_English.isl
  #else
    Name: baq; MessagesFile: compiler:Languages\Basque.isl,{#ISSI_IncludePath}Languages\_issi_English.isl; LicenseFile:{#ISSI_Basque}
  #endif
#endif

#ifdef ISSI_SpanishArgentina
  #if ISSI_SpanishArgentina == ""
    Name: arg; MessagesFile: compiler:Languages\SpanishArg.isl,{#ISSI_IncludePath}Languages\_issi_English.isl
  #else
    Name: arg; MessagesFile: compiler:Languages\SpanishArg.isl,{#ISSI_IncludePath}Languages\_issi_English.isl; LicenseFile:{#ISSI_SpanishArgentina}
  #endif
#endif

#ifdef ISSI_SpanishNicaragua
  #if ISSI_SpanishNicaragua == ""
    Name: nic; MessagesFile: compiler:Languages\SpanishNic.isl,{#ISSI_IncludePath}Languages\_issi_English.isl
  #else
    Name: nic; MessagesFile: compiler:Languages\SpanishNic.isl,{#ISSI_IncludePath}Languages\_issi_English.isl; LicenseFile:{#ISSI_SpanishNicaragua}
  #endif
#endif

#ifdef ISSI_Tatarish
  #if ISSI_Tatarish == ""
    Name: tat; MessagesFile: compiler:Languages\Tatarish.isl,{#ISSI_IncludePath}Languages\_issi_English.isl
  #else
    Name: tat; MessagesFile: compiler:Languages\Tatarish.isl,{#ISSI_IncludePath}Languages\_issi_English.isl; LicenseFile:{#ISSI_Tatarish}
  #endif
#endif

#ifdef ISSI_Hebrew
  #if ISSI_Hebrew == ""
    Name: heb; MessagesFile: compiler:Languages\Hebrew.isl,{#ISSI_IncludePath}Languages\_issi_English.isl
  #else
    Name: heb; MessagesFile: compiler:Languages\Hebrew.isl,{#ISSI_IncludePath}Languages\_issi_English.isl; LicenseFile:{#ISSI_Hebrew}
  #endif
#endif

#ifdef ISSI_Macedonian
  #if ISSI_Macedonian == ""
    Name: mac; MessagesFile: compiler:Languages\Macedonianh.isl,{#ISSI_IncludePath}Languages\_issi_English.isl
  #else
    Name: mac; MessagesFile: compiler:Languages\Macedonian.isl,{#ISSI_IncludePath}Languages\_issi_English.isl; LicenseFile:{#ISSI_Macedonian}
  #endif
#endif

[Files]
#ifdef ISSI_SPLASH
  Source: {#ISSI_SPLASH}; DestDir: {tmp};  DestName: "issi_splash.bmp"; Flags: ignoreversion dontcopy noencryption
#endif

#ifdef ISSI_ImagewpWelcome
  Source:{#ISSI_ImagewpWelcome}; DestName:"ImagewpWelcome.bmp"; DestDir:{tmp}; Flags: ignoreversion dontcopy noencryption
#endif

#ifdef ISSI_ImagewpLicense
  Source:{#ISSI_ImagewpLicense}; DestName:"ImagewpLicense.bmp"; DestDir:{tmp}; Flags: ignoreversion dontcopy noencryption
#endif

#ifdef ISSI_ImagewpPassword
  Source:{#ISSI_ImagewpPassword}; DestName:"ImagewpPassword.bmp"; DestDir:{tmp}; Flags: ignoreversion dontcopy noencryption
#endif

#ifdef ISSI_ImagewpInfoBefore
  Source:{#ISSI_ImagewpInfoBefore}; DestName:"ImagewpInfoBefore.bmp"; DestDir:{tmp}; Flags: ignoreversion dontcopy noencryption
#endif

#ifdef ISSI_ImagewpUserInfo
  Source:{#ISSI_ImagewpUserInfo}; DestName:"ImagewpUserInfo.bmp"; DestDir:{tmp}; Flags: ignoreversion dontcopy noencryption
#endif

#ifdef ISSI_ImagewpSelectDir
  Source:{#ISSI_ImagewpSelectDir}; DestName:"ImagewpSelectDir.bmp"; DestDir:{tmp}; Flags: ignoreversion dontcopy noencryption
#endif

#ifdef ISSI_ImagewpSelectComponents
  Source:{#ISSI_ImagewpSelectComponents}; DestName:"ImagewpSelectComponents.bmp"; DestDir:{tmp}; Flags: ignoreversion dontcopy noencryption
#endif

#ifdef ISSI_ImagewpSelectProgramGroup
  Source:{#ISSI_ImagewpSelectProgramGroup}; DestName:"ImagewpSelectProgramGroup.bmp"; DestDir:{tmp}; Flags: ignoreversion dontcopy noencryption
#endif

#ifdef ISSI_ImagewpSelectTasks
  Source:{#ISSI_ImagewpSelectTasks}; DestName:"ImagewpSelectTasks.bmp"; DestDir:{tmp}; Flags: ignoreversion dontcopy noencryption
#endif

#ifdef ISSI_ImagewpReady
  Source:{#ISSI_ImagewpReady}; DestName:"ImagewpReady.bmp"; DestDir:{tmp}; Flags: ignoreversion dontcopy noencryption
#endif

#ifdef ISSI_ImagewpPreparing
  Source:{#ISSI_ImagewpPreparing}; DestName:"ImagewpPreparing.bmp"; DestDir:{tmp}; Flags: ignoreversion dontcopy noencryption
#endif

#ifdef ISSI_ImagewpInstalling
  Source:{#ISSI_ImagewpInstalling}; DestName:"ImagewpInstalling.bmp"; DestDir:{tmp}; Flags: ignoreversion dontcopy noencryption
#endif

#ifdef ISSI_ImagewpInfoAfter
  Source:{#ISSI_ImagewpInfoAfter}; DestName:"ImagewpInfoAfter.bmp"; DestDir:{tmp}; Flags: ignoreversion dontcopy noencryption
#endif

#ifdef ISSI_ImagewpFinished
  Source:{#ISSI_ImagewpFinished}; DestName:"ImagewpFinished.bmp"; DestDir:{tmp}; Flags: ignoreversion dontcopy noencryption
#endif

#ifdef ISSI_wpLicense
  Source:{#ISSI_wpLicense}; DestName:"wpLicense.bmp"; DestDir:{tmp}; Flags: ignoreversion dontcopy noencryption
#endif

#ifdef ISSI_wpPassword
  Source:{#ISSI_wpPassword}; DestName:"wpPassword.bmp"; DestDir:{tmp}; Flags: ignoreversion dontcopy noencryption
#endif

#ifdef ISSI_wpUserInfo
  Source:{#ISSI_wpUserInfo}; DestName:"wpUserInfo.bmp"; DestDir:{tmp}; Flags: ignoreversion dontcopy noencryption
#endif

#ifdef ISSI_wpInfoBefore
  Source:{#ISSI_wpInfoBefore}; DestName:"wpInfoBefore.bmp"; DestDir:{tmp}; Flags: ignoreversion dontcopy noencryption
#endif

#ifdef ISSI_wpSelectComponents
  Source:{#ISSI_wpSelectComponents}; DestName:"wpSelectComponents.bmp"; DestDir:{tmp}; Flags: ignoreversion dontcopy noencryption
#endif

#ifdef ISSI_wpSelectDir
  Source:{#ISSI_wpSelectDir}; DestName:"wpSelectDir.bmp"; DestDir:{tmp}; Flags: ignoreversion dontcopy noencryption
#endif

#ifdef ISSI_wpSelectProgramGroup
  Source:{#ISSI_wpSelectProgramGroup}; DestName:"wpSelectProgramGroup.bmp"; DestDir:{tmp}; Flags: ignoreversion dontcopy noencryption
#endif

#ifdef ISSI_wpSelectTasks
  Source:{#ISSI_wpSelectTasks}; DestName:"wpSelectTasks.bmp"; DestDir:{tmp}; Flags: ignoreversion dontcopy noencryption
#endif

#ifdef ISSI_wpReady
  Source:{#ISSI_wpReady}; DestName:"wpReady.bmp"; DestDir:{tmp}; Flags: ignoreversion dontcopy noencryption
#endif

#ifdef ISSI_wpPreparing
  Source:{#ISSI_wpPreparing}; DestName:"wpPreparing.bmp"; DestDir:{tmp}; Flags: ignoreversion dontcopy noencryption
#endif

#ifdef ISSI_wpInstalling
  Source:{#ISSI_wpInstalling}; DestName:"wpInstalling.bmp"; DestDir:{tmp}; Flags: ignoreversion dontcopy noencryption
#endif

#ifdef ISSI_wpInfoAfter
  Source:{#ISSI_wpInfoAfter}; DestName:"wpInfoAfter.bmp"; DestDir:{tmp}; Flags: ignoreversion dontcopy noencryption
#endif

#ifdef ISSI_IMAGE
  Source: {#ISSI_IMAGE}; DestDir: {tmp};  DestName: "setup.bmp"; Flags: ignoreversion dontcopy noencryption
#endif

#ifdef ISSI_WizardBitmapImage2
  Source: "{#ISSI_WizardBitmapImage2}"; DestDir:{tmp}; DestName: "WizardBitmapImage2.bmp"; Flags: ignoreversion dontcopy  noencryption
#endif

#if defined ISSI_Download_Url && defined ISSI_WizardImages
Source: "{#issiWizSmallImage}"; DestDir:{tmp}; DestName: "issiWizSmallImage.bmp"; Flags: ignoreversion dontcopy noencryption
#endif

#if defined(ISSI_PlayWav)&&!defined(ISSI_PlayWavExternal)
  Source: "{#ISSI_PlayWav}"; DestDir:{tmp}; DestName: "issi.wav"; Flags: ignoreversion dontcopy noencryption
#endif

#if defined(ISSI_PlayMidi)&&!defined(ISSI_PlayMidiExternal)
  Source: "{#ISSI_PlayMidi}"; DestDir:{tmp}; DestName: "issi.mid"; Flags: ignoreversion dontcopy noencryption
#endif

#ifdef ISSI_DOWNLOAD_URL
  Source: "{#ISSI_DOWNLOAD_DLL}"; Flags: ignoreversion dontcopy noencryption
#endif

#if defined ISSI_URL && defined ISSI_AppStart
  #if ISSI_URL != ""
    Source: "{#ISSI_IncludePath}website.url"; DestDir: "{app}"  Flags: ignoreversion
  #endif
#endif

#ifdef ISSI_AppFilesFolder
  Source: {#ISSI_AppFilesFolder}\*.*; DestDir: {app};  Flags: ignoreversion
#endif

#ifdef ISSI_ScreenSaver
  Source: {#ISSI_ScreenSaver}; DestDir: {sys}; Flags: ignoreversion
#endif

#ifdef ISSI_SCRIPTBACKUP
  #if FileExists(SourcePath+"\"+ISSI_SCRIPTBACKUP)
    Source: {#SourcePath}\{#ISSI_SCRIPTBACKUP}; DestDir: {tmp}; Flags: ignoreversion dontcopy noencryption
  #else
    #error "ISSI_ScriptBackup - ERROR: FILE NOT FOUND
  #endif
#endif

#if defined ISSI_UpdateVersion && defined ISSI_UpdateTitle && defined ISSI_Update
  #Pragma include WriteIni(ISSI_IncludePath+"_version.ini",ISSI_Update,"version",ISSI_UpdateVersion)
  Source: "{#ISSI_IncludePath}_version.ini"; DestDir: {app}; DestName: "_version.ini"; Flags: ignoreversion
  #Pragma include DeleteFile(ISSI_IncludePath+"_version.ini")
#endif

#ifdef ISSI_UninsHs_AppName
  Source: "{#ISSI_UninsHs_Exe}"; DestDir: "{app}"; DestName: "UninsHs.exe"; Flags: ignoreversion restartreplace
  #ifdef ISSI_UninsHs_IncludeSetup
    Source: "{srcexe}"; DestDir: "{app}"; DestName: "UninsHsIs.exe"; Flags: external ignoreversion restartreplace skipifsourcedoesntexist
  #endif
#endif

#ifdef ISSI_UnZip1
  Source: {#ISSI_IncludePath}\Include\chiefzip\chiefzip.dll; Flags: dontcopy;
  Source:{#ISSI_UnZip1}; DestDir: {app}; DestName: zip1.zip; AfterInstall: UnZip1; Flags: deleteafterinstall
#endif

#ifdef ISSI_UnZip2
  Source:{#ISSI_UnZip2}; DestDir: {app}; DestName: zip2.zip; AfterInstall: UnZip2; Flags: deleteafterinstall
#endif

#ifdef ISSI_UnZip3
  Source:{#ISSI_UnZip3}; DestDir: {app}; DestName: zip3.zip; AfterInstall: UnZip3; Flags: deleteafterinstall
#endif

#ifdef ISSI_UnZip4
  Source:{#ISSI_UnZip4}; DestDir: {app}; DestName: zip4.zip; AfterInstall: UnZip4; Flags: deleteafterinstall
#endif

#ifdef ISSI_UnZip5
  Source:{#ISSI_UnZip5}; DestDir: {app}; DestName: zip5.zip; AfterInstall: UnZip5; Flags: deleteafterinstall
#endif

#ifdef ISSI_UnZip6
  Source:{#ISSI_UnZip6}; DestDir: {app}; DestName: zip6.zip; AfterInstall: UnZip6; Flags: deleteafterinstall
#endif

#ifdef ISSI_UnZip7
  Source:{#ISSI_UnZip7}; DestDir: {app}; DestName: zip7.zip; AfterInstall: UnZip7; Flags: deleteafterinstall
#endif

#ifdef ISSI_UnZip8
  Source:{#ISSI_UnZip8}; DestDir: {app}; DestName: zip8.zip; AfterInstall: UnZip8; Flags: deleteafterinstall
#endif

#ifdef ISSI_UnZip9
  Source:{#ISSI_UnZip9}; DestDir: {app}; DestName: zip9.zip; AfterInstall: UnZip9; Flags: deleteafterinstall
#endif

#ifdef ISSI_UnZip10
  Source:{#ISSI_UnZip10}; DestDir: {app}; DestName: zip10.zip; AfterInstall: UnZip10; Flags: deleteafterinstall
#endif

#ifdef ISSI_UnZip11
  Source:{#ISSI_UnZip11}; DestDir: {app}; DestName: zip11.zip; AfterInstall: UnZip11; Flags: deleteafterinstall
#endif

#ifdef ISSI_UnZip12
  Source:{#ISSI_UnZip12}; DestDir: {app}; DestName: zip12.zip; AfterInstall: UnZip12; Flags: deleteafterinstall
#endif

#ifdef ISSI_UnZip13
  Source:{#ISSI_UnZip13}; DestDir: {app}; DestName: zip13.zip; AfterInstall: UnZip13; Flags: deleteafterinstall
#endif

#ifdef ISSI_UnZip14
  Source:{#ISSI_UnZip14}; DestDir: {app}; DestName: zip14.zip; AfterInstall: UnZip14; Flags: deleteafterinstall
#endif

#ifdef ISSI_UnZip15
  Source:{#ISSI_UnZip15}; DestDir: {app}; DestName: zip15.zip; AfterInstall: UnZip15; Flags: deleteafterinstall
#endif

#ifdef ISSI_UnZip16
  Source:{#ISSI_UnZip16}; DestDir: {app}; DestName: zip16.zip; AfterInstall: UnZip16; Flags: deleteafterinstall
#endif

#ifdef ISSI_UnZip17
  Source:{#ISSI_UnZip17}; DestDir: {app}; DestName: zip17.zip; AfterInstall: UnZip17; Flags: deleteafterinstall
#endif

#ifdef ISSI_UnZip18
  Source:{#ISSI_UnZip18}; DestDir: {app}; DestName: zip18.zip; AfterInstall: UnZip18; Flags: deleteafterinstall
#endif

#ifdef ISSI_UnZip19
  Source:{#ISSI_UnZip19}; DestDir: {app}; DestName: zip19.zip; AfterInstall: UnZip19; Flags: deleteafterinstall
#endif

#ifdef ISSI_UnZip20
  Source:{#ISSI_UnZip20}; DestDir: {app}; DestName: zip20.zip; AfterInstall: UnZip20; Flags: deleteafterinstall
#endif

#ifdef ISSI_REMARK
[ISSI DEBUG]
#endif
#ifdef ISSI_Debug
  #if ISSI_Debug == ""
    #ifdef ISSI_AppName
      #define ISSI_Debug '[ISSI] '+ISSI_AppName+' (Debug).iss'
    #else
      #define ISSI_Debug '[ISSI] (Debug).iss'
    #endif
  #endif

  #if ISSI_Debug == "AutoSave" || ISSI_Debug == "AutoSaveAndView"
    #if ISSI_Debug == "AutoSave"
      #ifdef ISSI_AppName
        #expr SaveToFile(AddBackslash(SourcePath)+'[ISSI] '+ISSI_AppName+' (AutoSave-'+ISSI_YEAR+ISSI_MONTH+ISSI_DAY+ISSI_HOUR+ISSI_MINUTE+ISSI_SECOND+').iss')
      #else
        #expr SaveToFile(AddBackslash(SourcePath)+'[ISSI] (AutoSave-'+ISSI_YEAR+ISSI_MONTH+ISSI_DAY+ISSI_HOUR+ISSI_MINUTE+ISSI_SECOND+').iss')
      #endif
    #endif

    #if ISSI_Debug == "AutoSaveAndView"
      #ifdef ISSI_AppName
         #expr SaveToFile(AddBackslash(SourcePath)+'[ISSI] '+ISSI_AppName+' (AutoSave-'+ISSI_YEAR+ISSI_MONTH+ISSI_DAY+ISSI_HOUR+ISSI_MINUTE+ISSI_SECOND+').iss'), Exec(AddBackslash(CompilerPath) + "Compil32.exe", '"'+AddBackslash(SourcePath)+'[ISSI] '+ISSI_AppName+' (AutoSave-'+ISSI_YEAR+ISSI_MONTH+ISSI_DAY+ISSI_HOUR+ISSI_MINUTE+ISSI_SECOND+').iss"')
       #else
         #expr SaveToFile(AddBackslash(SourcePath)+'[ISSI] (AutoSave-'+ISSI_YEAR+ISSI_MONTH+ISSI_DAY+ISSI_HOUR+ISSI_MINUTE+ISSI_SECOND+').iss'), Exec(AddBackslash(CompilerPath) + "Compil32.exe", '"'+AddBackslash(SourcePath)+'[ISSI] (AutoSave-'+ISSI_YEAR+ISSI_MONTH+ISSI_DAY+ISSI_HOUR+ISSI_MINUTE+ISSI_SECOND+').iss"')
      #endif
    #endif
  #else
    #expr SaveToFile(AddBackslash(SourcePath)+ISSI_Debug), Exec(AddBackslash(CompilerPath) + "Compil32.exe", '"'+AddBackslash(SourcePath)+ISSI_Debug+'"')
  #endif
#endif

#ifdef ISSI_REMARK
[ISSI APPENDIX: Undefining all ISSI variables]
#endif
#undef ISSI_netdetect
#undef ISSI_appname
#undef ISSI_appversion
#undef ISSI_AppVersionMayor
#undef ISSI_AppVersionMinor
#undef ISSI_AppVersionRelease
#undef ISSI_AppVersionBuild
#undef ISSI_apppublisher
#undef ISSI_apptemplate
#undef ISSI_appfilesfolder
#undef ISSI_appstart
#undef ISSI_appid
#undef ISSI_about
#undef ISSI_abouttext
#undef ISSI_Languages
#Undef ISSI_LanguagesZone
#undef ISSI_german
#undef ISSI_english
#undef ISSI_dutch
#undef ISSI_czech
#undef ISSI_italian
#undef ISSI_russian
#undef ISSI_french
#undef ISSI_spanish
#undef ISSI_danish
#undef ISSI_hungarian
#undef ISSI_swedish
#undef ISSI_ChineseTrad
#undef ISSI_Chinese
#undef ISSI_ChineseSimp
#undef ISSI_Catalan
#undef ISSI_Slovenian
#undef ISSI_Basque
#undef ISSI_SpanishArgentina
#undef ISSI_SpanishNicaragua
#undef ISSI_Hebrew
#undef ISSI_Macedonian
#undef ISSI_Tatarish
#undef ISSI_splash
#undef ISSI_splash_x
#undef ISSI_splash_y
#undef ISSI_splash_t
#undef ISSI_splash_corner
#undef ISSI_image
#undef ISSI_screensaver
#undef ISSI_url
#undef ISSI_download_title
#undef ISSI_download_url
#undef ISSI_download_dll
#undef ISSI_scriptbackup
#undef ISSI_scriptbackup_key
#undef ISSI_licenseprint
#undef ISSI_update
#undef ISSI_playwav
#undef ISSI_playwavexternal
#undef ISSI_playwavloop
#undef ISSI_playmid
#undef ISSI_playmidexternal
#undef ISSI_debug
#undef ISSI_WizardBitmapImage
#undef ISSI_WizardBitmapImage_x
#undef ISSI_WizardBitmapImage2
#undef ISSI_WizardBitmapImage2_x
#undef ISSI_WizardSmallBitmapImage
#undef ISSI_WizardSmallBitmapImage_x
#undef ISSI_compression
#undef ISSI_constants
#undef ISSI_constantsseperator
#undef ISSI_beveledlabel
#undef ISSI_userinclude
#undef ISSI_usemyinitializesetup
#undef ISSI_usemyinitializewizard
#undef ISSI_usemydeinitializesetup
#undef ISSI_usemynextbuttonclick
#undef ISSI_usemybackbuttonclick
#undef ISSI_usemycurpagechanged
#undef ISSI_associateext
#undef ISSI_associateprogram
#undef ISSI_associatename
#undef ISSI_Batch
#undef ISSI_Batch1
#undef ISSI_Batch2
#undef ISSI_Batch3
#undef ISSI_Batch4
#undef ISSI_Batch5
#undef ISSI_Batch6
#undef ISSI_Batch7
#undef ISSI_Batch8
#undef ISSI_Batch9
#undef ISSI_Batch10
#undef ISSI_Batch11
#undef ISSI_Batch12
#undef ISSI_Batch13
#undef ISSI_Batch14
#undef ISSI_Batch15
#undef ISSI_Batch16
#undef ISSI_Batch17
#undef ISSI_Batch18
#undef ISSI_Batch19
#undef ISSI_Batch20
#undef ISSI_Batch21
#undef ISSI_Batch22
#undef ISSI_Batch23
#undef ISSI_Batch24
#undef ISSI_Batch25
#undef ISSI_Batch26
#undef ISSI_Batch27
#undef ISSI_Batch28
#undef ISSI_Batch29
#undef ISSI_Batch30
#undef ISSI_Batch31
#undef ISSI_Batch32
#undef ISSI_Batch33
#undef ISSI_Batch34
#undef ISSI_Batch35
#undef ISSI_Batch36
#undef ISSI_Batch37
#undef ISSI_Batch38
#undef ISSI_Batch39
#undef ISSI_Batch40
#undef ISSI_Batch41
#undef ISSI_Batch42
#undef ISSI_Batch43
#undef ISSI_Batch44
#undef ISSI_Batch45
#undef ISSI_Batch46
#undef ISSI_Batch47
#undef ISSI_Batch48
#undef ISSI_Batch49
#undef ISSI_Batch50
#undef ISSI_ImageWpWelcome
#undef ISSI_ImageWpPassword
#undef ISSI_ImageWpUserInfo
#undef ISSI_ImageWpLicense
#undef ISSI_ImageWpInfoBefore
#undef ISSI_ImageWpSelectComponents
#undef ISSI_ImageWpSelectDir
#undef ISSI_ImageWpSelectProgramGroup
#undef ISSI_ImageWpSelectTasks
#undef ISSI_ImageWpReady
#undef ISSI_ImageWpPreparing
#undef ISSI_ImageWpInstalling
#undef ISSI_ImageWpInfoAfter
#undef ISSI_ImageWpFinished
#undef ISSI_WpPassword
#undef ISSI_WpUserInfo
#undef ISSI_WpLicense
#undef ISSI_WpInfoBefore
#undef ISSI_WpSelectComponents
#undef ISSI_WpSelectDir
#undef ISSI_WpSelectProgramGroup
#undef ISSI_WpSelectTasks
#undef ISSI_WpReady
#undef ISSI_WpPreparing
#undef ISSI_WpInstalling
#undef ISSI_WpInfoAfter
#undef ISSI_Image_BGcolor
#undef ISSI_GetMD5OfSerial
#undef ISSI_GetMD5OfPassword
#undef ISSI_GenerateSerial
#undef ISSI_GenerateSerial_GroupLength
#undef ISSI_GenerateSerial_Groups
#undef ISSI_GenerateSerial_AppName
#undef ISSI_UninsHs_AppName
#undef ISSI_UninsHs_AppId
#undef ISSI_UninsHs_Exe
#undef ISSI_UninsHs_IncludeSetup
#undef ISSI_PadAppName
#undef ISSI_PadIni
#undef ISSI_PadExportFileName
#undef ISSI_PadExportFolder
#ifndef ISSI_PadImport
  #undef PAD_Company_Name
  #undef PAD_Address_2
  #undef PAD_Address_1
  #undef PAD_State_Province
  #undef PAD_Zip_Postal_Code
  #undef PAD_City_Town
  #undef PAD_Country
  #undef PAD_Company_WebSite_URL
  #undef PAD_Author_First_Name
  #undef PAD_Author_Last_Name
  #undef PAD_Author_Email
  #undef PAD_Contact_First_Name
  #undef PAD_Contact_Last_Name
  #undef PAD_Contact_Email
  #undef PAD_Sales_Email
  #undef PAD_Support_Email
  #undef PAD_General_Email
  #undef PAD_Sales_Phone
  #undef PAD_Support_Phone
  #undef PAD_General_Phone
  #undef PAD_Fax_Phone
  #undef PAD_Program_Name
  #undef PAD_Program_Version
  #undef PAD_Program_Release_Month
  #undef PAD_Program_Release_Day
  #undef PAD_Program_Release_Year
  #undef PAD_Program_Cost_Dollars
  #undef PAD_Program_Cost_Other_Code
  #undef PAD_Program_Cost_Other
  #undef PAD_Program_Type
  #undef PAD_Program_Release_Status
  #undef PAD_Program_Install_Support
  #undef PAD_Program_OS_Support
  #undef PAD_Program_Language
  #undef PAD_Program_Change_Info
  #undef PAD_Program_Specific_Category
  #undef PAD_Program_Category_Class
  #undef PAD_Program_Categories
  #undef PAD_Program_System_Requirements
  #undef PAD_Includes_JAVA_VM
  #undef PAD_Includes_VB_Runtime
  #undef PAD_Includes_DirectX
  #undef PAD_Filename_Versioned
  #undef PAD_Filename_Previous
  #undef PAD_Filename_Generic
  #undef PAD_Filename_Long
  #undef PAD_File_Size_Bytes
  #undef PAD_File_Size_K
  #undef PAD_File_Size_MB
  #undef PAD_Expire_Count
  #undef PAD_Has_Expire_Info
  #undef PAD_Expire_Based_On
  #undef PAD_Expire_Other_Info
  #undef PAD_Expire_Month
  #undef PAD_Expire_Day
  #undef PAD_Expire_Year
  #undef PAD_Keywords
  #undef PAD_Char_Desc_45
  #undef PAD_Char_Desc_80
  #undef PAD_Char_Desc_250
  #undef PAD_Char_Desc_450
  #undef PAD_Char_Desc_2000
  #undef PAD_Application_Info_URL
  #undef PAD_Application_Order_URL
  #undef PAD_Application_Screenshot_URL
  #undef PAD_Application_Icon_URL
  #undef PAD_Application_XML_File_URL
  #undef PAD_Primary_Download_URL
  #undef PAD_Secondary_Download_URL
  #undef PAD_Additional_Download_URL_1
  #undef PAD_Additional_Download_URL_2
  #undef PAD_Distribution_Permissions
  #undef PAD_EULA
  #undef PAD_ASP_FORM
  #undef PAD_ASP_Member
  #undef PAD_ASP_Member_Number
#endif
#undef ISSI_PadImport
#undef ISSI_FTP_Source1
#undef ISSI_FTP_Target1
#undef ISSI_FTP_Source2
#undef ISSI_FTP_Target2
#undef ISSI_FTP_Source3
#undef ISSI_FTP_Target3
#undef ISSI_FTP_Source4
#undef ISSI_FTP_Target4
#undef ISSI_FTP_Source5
#undef ISSI_FTP_Target5
#undef ISSI_FTP_Source6
#undef ISSI_FTP_Target6
#undef ISSI_FTP_Source7
#undef ISSI_FTP_Target7
#undef ISSI_FTP_Source8
#undef ISSI_FTP_Target8
#undef ISSI_FTP_Source9
#undef ISSI_FTP_Target9
#undef ISSI_FTP_Source10
#undef ISSI_FTP_Target10
#undef ISSI_FTP_Source11
#undef ISSI_FTP_Target11
#undef ISSI_FTP_Source12
#undef ISSI_FTP_Target12
#undef ISSI_FTP_Source13
#undef ISSI_FTP_Target13
#undef ISSI_FTP_Source14
#undef ISSI_FTP_Target14
#undef ISSI_FTP_Source15
#undef ISSI_FTP_Target15
#undef ISSI_FTP_Source16
#undef ISSI_FTP_Target16
#undef ISSI_FTP_Source17
#undef ISSI_FTP_Target17
#undef ISSI_FTP_Source18
#undef ISSI_FTP_Target18
#undef ISSI_FTP_Source19
#undef ISSI_FTP_Target19
#undef ISSI_FTP_Source20
#undef ISSI_FTP_Target20
#undef ISSI_FTP_Source21
#undef ISSI_FTP_Target21
#undef ISSI_FTP_Source22
#undef ISSI_FTP_Target22
#undef ISSI_FTP_Source23
#undef ISSI_FTP_Target23
#undef ISSI_FTP_Source24
#undef ISSI_FTP_Target24
#undef ISSI_FTP_Source25
#undef ISSI_FTP_Target25
#undef ISSI_FTP_Source26
#undef ISSI_FTP_Target26
#undef ISSI_FTP_Source27
#undef ISSI_FTP_Target27
#undef ISSI_FTP_Source28
#undef ISSI_FTP_Target28
#undef ISSI_FTP_Source29
#undef ISSI_FTP_Target29
#undef ISSI_FTP_Source30
#undef ISSI_FTP_Target30
#undef ISSI_FTP_Source31
#undef ISSI_FTP_Target31
#undef ISSI_FTP_Source32
#undef ISSI_FTP_Target32
#undef ISSI_FTP_Source33
#undef ISSI_FTP_Target33
#undef ISSI_FTP_Source34
#undef ISSI_FTP_Target34
#undef ISSI_FTP_Source35
#undef ISSI_FTP_Target35
#undef ISSI_FTP_Source36
#undef ISSI_FTP_Target36
#undef ISSI_FTP_Source37
#undef ISSI_FTP_Target37
#undef ISSI_FTP_Source38
#undef ISSI_FTP_Target38
#undef ISSI_FTP_Source39
#undef ISSI_FTP_Target39
#undef ISSI_FTP_Source40
#undef ISSI_FTP_Target40
#undef ISSI_FTP_Source41
#undef ISSI_FTP_Target41
#undef ISSI_FTP_Source42
#undef ISSI_FTP_Target42
#undef ISSI_FTP_Source43
#undef ISSI_FTP_Target43
#undef ISSI_FTP_Source44
#undef ISSI_FTP_Target44
#undef ISSI_FTP_Source45
#undef ISSI_FTP_Target45
#undef ISSI_FTP_Source46
#undef ISSI_FTP_Target46
#undef ISSI_FTP_Source47
#undef ISSI_FTP_Target47
#undef ISSI_FTP_Source48
#undef ISSI_FTP_Target48
#undef ISSI_FTP_Source49
#undef ISSI_FTP_Target49
#undef ISSI_FTP_Source50
#undef ISSI_FTP_Target50
#undef ISSI_CVS_Export
#undef ISSI_CVS_ExportFolder
#undef ISSI_Image_NoStretch
